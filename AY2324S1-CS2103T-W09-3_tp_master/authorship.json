[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-3/tp/actions)","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"# ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"**ClinicAssistant is a desktop app for managing contacts**, optimized for use via a Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"If you can type fast, ClinicAssistant can get your contact management tasks done *faster than traditional GUI apps.*","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"**If you are interested**","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"- to use ClinicAssistant, head over to the [**Quick Start** section of the **User Guide**](docs/UserGuide.md).","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"- to develop ClinicAssistant, the [**Developer Guide**](docs/DeveloperGuide.md) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"**Acknowledgements**","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"  - Libraries used: JavaFX, JUnit5","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-10-05"}],"authorContributionMap":{"tohpinren":3,"yezkez10":13,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"run {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tohpinren":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"### Bryan Goh","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/bryan-goh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"[[homepage](https://github.com/AY2324S1-CS2103T-W09-3/tp.git)]","lastModifiedDate":"2023-10-03"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"[[github](https://github.com/Bryan-Goh)]","lastModifiedDate":"2023-10-03"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"[[portfolio](team/bryan-goh.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"* Role: Developer","lastModifiedDate":"2023-10-03"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Delete Appointments","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"### Foo Jing Ning, Joy","lastModifiedDate":"2023-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/yezkez10.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/yezkez10)]","lastModifiedDate":"2023-10-03"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Patients","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"### Niu Wenjia","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/wj331.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/wj331)]","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Delete Patients","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"### Toh Pin Ren","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/tohpinren.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/tohpinren)]","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"[[portfolio](team/tohpinren.md)]","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Lists","lastModifiedDate":"2023-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"### Yip Sin Hang","lastModifiedDate":"2023-10-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"\u003cimg src\u003d\"images/simbayippy.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"[[github](http://github.com/simbayippy)]","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"[[portfolio](team/yezkez10.md)]","lastModifiedDate":"2023-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"* Responsibilities: Add Appointments","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tohpinren":1,"yezkez10":4,"-":36,"Bryan-Goh":22}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"# ClinicAssistant Developer Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"Base code adapted from [AY23/24 CS2103T Github](https://github.com/nus-cs2103-AY2324S1/tp)","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"### Add patient feature","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":162,"author":{"gitId":"yezkez10"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":164,"author":{"gitId":"yezkez10"},"content":"This feature deals with adding a patient to the health records database.","lastModifiedDate":"2023-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":166,"author":{"gitId":"yezkez10"},"content":"The fields required when adding a patient are the patient\u0027s","lastModifiedDate":"2023-10-27"},{"lineNumber":167,"author":{"gitId":"yezkez10"},"content":"* `Name`","lastModifiedDate":"2023-10-27"},{"lineNumber":168,"author":{"gitId":"yezkez10"},"content":"* `Age`","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"yezkez10"},"content":"* `Gender`","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"yezkez10"},"content":"* `Ethnicity`","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"yezkez10"},"content":"* `Nric`","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"yezkez10"},"content":"* `Phone`","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"yezkez10"},"content":"* `Email`","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"yezkez10"},"content":"* `Address`","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"yezkez10"},"content":"This feature is facilitated by the `Person` class and the `UniquePersonList`, which extends Iterable\u003cPerson\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"yezkez10"},"content":"and ensures all the Persons in this list is unique.","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"yezkez10"},"content":"The `Person` class stores the required fields of the patient.","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"yezkez10"},"content":"**The Specifics**","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"yezkez10"},"content":"`AddCommandParser` parses the user-inputted command and creates a `Person` object","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"yezkez10"},"content":"with its required fields, as well as an `AddCommand` that adds this person into the `Model`.","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"yezkez10"},"content":"This `Person` is added into the `UniquePersonList`.","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"### Add/delete Doctor feature","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":188,"author":{"gitId":"Bryan-Goh"},"content":"#### Implementation","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":190,"author":{"gitId":"Bryan-Goh"},"content":" The proposed add/delete Doctor mechanism is facilitated by `UniqueDoctorList` and a `Doctor` Class. `UniqueDoctorList` extends `Iterable\u003cDoctor\u003e` which stores and ensures all the Doctors in this list is unique. Additionally it implements the same operations as the `UniquePersonList`.","lastModifiedDate":"2023-10-25"},{"lineNumber":191,"author":{"gitId":"Bryan-Goh"},"content":" The Doctor class stores the relevant data of the Doctor such as name and gender.","lastModifiedDate":"2023-10-25"},{"lineNumber":192,"author":{"gitId":"Bryan-Goh"},"content":" The following sequence diagram shows how the add Doctor operation works.","lastModifiedDate":"2023-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":194,"author":{"gitId":"Bryan-Goh"},"content":"\u003cpuml src\u003d\"diagrams/AddDoctor.puml\" alt\u003d\"AddDoctor\" /\u003e","lastModifiedDate":"2023-10-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":196,"author":{"gitId":"Bryan-Goh"},"content":"The delete Doctor command does the opposite — it calls deleteDoctor(INDEX), which deletes the Doctor from the system by their Index.","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":198,"author":{"gitId":"Bryan-Goh"},"content":"**Note:** If the index of either add or delete is less than 1 or exceeds the number of Doctors in the List then the command is going to fail.","lastModifiedDate":"2023-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":200,"author":{"gitId":"Bryan-Goh"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":202,"author":{"gitId":"Bryan-Goh"},"content":"**Aspect: How Doctor is going to be saved:**","lastModifiedDate":"2023-10-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":204,"author":{"gitId":"Bryan-Goh"},"content":"* **Alternative 1 (current choice):** Doctor is its own class containing detailed information on the doctor.","lastModifiedDate":"2023-10-25"},{"lineNumber":205,"author":{"gitId":"Bryan-Goh"},"content":"    * Pros: Similar to Person","lastModifiedDate":"2023-10-25"},{"lineNumber":206,"author":{"gitId":"Bryan-Goh"},"content":"    * Cons: May introduce new bugs and is generally going to take up a lot of lines of code.","lastModifiedDate":"2023-10-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":208,"author":{"gitId":"Bryan-Goh"},"content":"* **Alternative 2:** Doctor is just a String and is going to be saved inside an ArrayList since the most important part is just the name.","lastModifiedDate":"2023-10-25"},{"lineNumber":209,"author":{"gitId":"Bryan-Goh"},"content":"    * Pros: Will be easier to implement and much simpler.","lastModifiedDate":"2023-10-25"},{"lineNumber":210,"author":{"gitId":"Bryan-Goh"},"content":"    * Cons: Going to be harder for future developer to update the Doctor Class.","lastModifiedDate":"2023-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":212,"author":{"gitId":"wj331"},"content":"### \\[Proposed\\] Delete Patient","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"#### \\[Proposed\\] Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"wj331"},"content":"The proposed delete mechanism is facilitated by `DeleteCommand` and the `LogicManager` Class.","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"wj331"},"content":"Clinic staff can enter `delete 3` which deletes all information of the person in the list, including their details and appointment.","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"wj331"},"content":"The following sequence diagram shows how the DeleteCommand class works.","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"wj331"},"content":"\u003cpuml src\u003d\"diagrams/DeleteCommandDiagram.puml\" alt\u003d\"DeleteCommand UML\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"wj331"},"content":"**Note:** If the index of patient to be deleted is less than 1 or exceeds the number of patients in the List then deleteCommand is going to fail.","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"wj331"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"wj331"},"content":"**Aspect: How convenient it is for clinic staff to delete:**","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"wj331"},"content":"* **Alternative 1 (current choice):** Delete based on INDEX shown on the present list","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"wj331"},"content":"    * Pros: Intuitive and easy for nurse to delete","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"wj331"},"content":"    * Cons: Needs to use zero-based indexing since lists are zero-indexed but the view of clinic staff is one-indexed.","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"wj331"},"content":"* **Alternative 2:** Delete based on name of patient","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"wj331"},"content":"    * Pros: Will be more accurate when deleting a patient","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"wj331"},"content":"    * Cons: Takes more time as need to type out names of patient when deleting and length of names may vary from person to person","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":236,"author":{"gitId":"yezkez10"},"content":"### List feature","lastModifiedDate":"2023-10-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":238,"author":{"gitId":"tohpinren"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":240,"author":{"gitId":"yezkez10"},"content":"The list appointments feature is added on from the `Appointment` class. The `list_appt` command will list out all","lastModifiedDate":"2023-10-27"},{"lineNumber":241,"author":{"gitId":"yezkez10"},"content":"appointments in the Clinic Assistant database.","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":243,"author":{"gitId":"yezkez10"},"content":"Firstly, to implement the list appointments command, we have to edit the current frontend to add a new Panel to display","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"yezkez10"},"content":"the appointments. This is done by adding a new `AppointmentListPanel` class to the `seedu.address.ui` package. This","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"yezkez10"},"content":"class is then added to the `MainWindow` class to display the appointments. The `AppointmentCard` class is also added to","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"yezkez10"},"content":"display the individual appointments inside the `AppointmentListPanel`. In addition, the corresponding `fxml` files are","lastModifiedDate":"2023-10-27"},{"lineNumber":247,"author":{"gitId":"yezkez10"},"content":"also added to the `view` folder to display the appointments.","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":249,"author":{"gitId":"yezkez10"},"content":"To implement the backend of the list appointments command, we first have to store the appointments in the database.","lastModifiedDate":"2023-10-27"},{"lineNumber":250,"author":{"gitId":"yezkez10"},"content":"Like the implementation of storing of `Person`, we keep a `UniqueAppointmentList` in the `Model` class to store the","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"yezkez10"},"content":"appointments. The `UniqueAppointmentList` class is similar to the `UniquePersonList` class, except that it stores","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"yezkez10"},"content":"`Appointment` objects instead of `Person` objects. What we show on the frontend is the filtered list of appointments","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"yezkez10"},"content":"from the `UniqueAppointmentList` class.","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":255,"author":{"gitId":"yezkez10"},"content":"A `ListAppointmentCommand` class is then created to handle the `list_appt` command. This class is similar to the","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"yezkez10"},"content":"`ListCommand` class, except that it handles the `Appointment` objects instead of `Person` objects. The","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"yezkez10"},"content":"`ListAppointmentCommand` class will then be called by the `LogicManager` class to execute the `list_appt` command.","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"yezkez10"},"content":"What this command does is that it changes the predicate to the filtered list of appointments to show all the","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"yezkez10"},"content":"appointments in the database.","lastModifiedDate":"2023-10-27"},{"lineNumber":260,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":261,"author":{"gitId":"yezkez10"},"content":"#### Alternatives considered","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":263,"author":{"gitId":"yezkez10"},"content":"**Aspect: How to store and maintain list of appointments:**","lastModifiedDate":"2023-10-27"},{"lineNumber":264,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":265,"author":{"gitId":"yezkez10"},"content":"* **Alternative 1 (current choice):** Save the list of appointments as a `UniqueAppointmentList` and filter it when needed.","lastModifiedDate":"2023-10-27"},{"lineNumber":266,"author":{"gitId":"yezkez10"},"content":"    * Pros: Easy to implement - similar to the current implementation of `Person`","lastModifiedDate":"2023-10-27"},{"lineNumber":267,"author":{"gitId":"yezkez10"},"content":"    * Cons: More memory is used to store the list of appointments","lastModifiedDate":"2023-10-27"},{"lineNumber":268,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"yezkez10"},"content":"* **Alternative 2:** Get the list of appointments by parsing through each `Person` object in the `UniquePersonList`","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"yezkez10"},"content":"    * Pros: Will use less memory","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"yezkez10"},"content":"    * Cons: Will be slower because we have to iterate through all the `Person` objects to get the appointments each time","lastModifiedDate":"2023-10-27"},{"lineNumber":272,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":273,"author":{"gitId":"yezkez10"},"content":"### Find appointments by date feature","lastModifiedDate":"2023-10-27"},{"lineNumber":274,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"yezkez10"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":276,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":277,"author":{"gitId":"yezkez10"},"content":"The find appointments by date feature built on the find appointment command. The `find_appt /on` command will list out","lastModifiedDate":"2023-10-27"},{"lineNumber":278,"author":{"gitId":"yezkez10"},"content":"all appointments in the Clinic Assistant database that falls on the date given.","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":280,"author":{"gitId":"yezkez10"},"content":"To implement the find appointments by date command, we have to update the predicate for the filtered list of","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"yezkez10"},"content":"appointments to show on the frontend. We have to add a predicate to check for all the appointments that falls on the","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"yezkez10"},"content":"date given.","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":284,"author":{"gitId":"yezkez10"},"content":"The find appointment command is extended to take in different parameters and filter the list shown on the frontend","lastModifiedDate":"2023-10-27"},{"lineNumber":285,"author":{"gitId":"yezkez10"},"content":"accordingly.","lastModifiedDate":"2023-10-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":287,"author":{"gitId":"yezkez10"},"content":"#### Alternatives considered","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"yezkez10"},"content":"**Aspect: How to implement the find appointments by date command:**","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"yezkez10"},"content":"* **Alternative 1 (current choice):** Extend the functionality of the find appointment command to take in different parameters","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"yezkez10"},"content":"    * Pros: More user-friendly and allows user to filter by multiple parameters","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"yezkez10"},"content":"    * Cons: Harder to implement","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"yezkez10"},"content":"* **Alternative 2:** Add a new command to only filter by date","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"yezkez10"},"content":"    * Pros: Easier to implement","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"yezkez10"},"content":"    * Cons: Users cannot filter by multiple parameters","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":300,"author":{"gitId":"yezkez10"},"content":"### Find patient by NRIC feature","lastModifiedDate":"2023-10-27"},{"lineNumber":301,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":302,"author":{"gitId":"yezkez10"},"content":"#### Implementation","lastModifiedDate":"2023-10-27"},{"lineNumber":303,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"yezkez10"},"content":"The find patient by NRIC feature will find a patient whose NRIC matches the given NRIC.","lastModifiedDate":"2023-10-27"},{"lineNumber":305,"author":{"gitId":"yezkez10"},"content":"This feature is facilitated by the `FindByNricCommandParser` and `FindByNricCommand` classes.","lastModifiedDate":"2023-10-27"},{"lineNumber":306,"author":{"gitId":"yezkez10"},"content":"To find a patient using a given NRIC, we have to use this NRIC as a predicate for the list of patients with unique NRICs.","lastModifiedDate":"2023-10-27"},{"lineNumber":307,"author":{"gitId":"yezkez10"},"content":"We will compare each patient\u0027s NRIC to this given NRIC and return the patient with the matching NRIC.","lastModifiedDate":"2023-10-27"},{"lineNumber":308,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":309,"author":{"gitId":"yezkez10"},"content":"**The Specifics**","lastModifiedDate":"2023-10-27"},{"lineNumber":310,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":311,"author":{"gitId":"yezkez10"},"content":"The job of the `FindByNricCommandParser` is to create a `FindByNricCommand` command object,","lastModifiedDate":"2023-10-27"},{"lineNumber":312,"author":{"gitId":"yezkez10"},"content":"with a `NricContainsKeywordPredicate` object passed in as a parameter.","lastModifiedDate":"2023-10-27"},{"lineNumber":313,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":314,"author":{"gitId":"yezkez10"},"content":"The `updateFilteredPersonList` method in the `Model` class is called,","lastModifiedDate":"2023-10-27"},{"lineNumber":315,"author":{"gitId":"yezkez10"},"content":"which then calls the `setPredicate` method in the `FilteredList` class,","lastModifiedDate":"2023-10-27"},{"lineNumber":316,"author":{"gitId":"yezkez10"},"content":"both with the `NricContainsKeywordPredicate` object passed in as the predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":317,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"yezkez10"},"content":"\u003cimg src\u003d\"images/FindByNricSequenceDiagram.png\" width\u003d\"1000px\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":320,"author":{"gitId":"yezkez10"},"content":"The above shows the sequence diagram of the find by NRIC feature.","lastModifiedDate":"2023-10-26"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"yezkez10"},"content":"**Alternatives considered**","lastModifiedDate":"2023-10-27"},{"lineNumber":323,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":324,"author":{"gitId":"yezkez10"},"content":"**Aspect: How to implement find patient by NRIC feature**","lastModifiedDate":"2023-10-27"},{"lineNumber":325,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":326,"author":{"gitId":"yezkez10"},"content":"* **Alternative 1 (current choice):** Create a new command that takes in the required NRIC as an argument.","lastModifiedDate":"2023-10-27"},{"lineNumber":327,"author":{"gitId":"yezkez10"},"content":"    * Pros: Easy to implement, as it has a structure similar to the original Find command.","lastModifiedDate":"2023-10-27"},{"lineNumber":328,"author":{"gitId":"yezkez10"},"content":"    * Cons: If users were to input an erratic NRIC, no matching patients will be shown.","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"yezkez10"},"content":"* **Alternative 2:** Extend the pre-existing Find command to accept NRIC as another argument","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"yezkez10"},"content":"    * Pros: With more parameters, users can look for more patients at one time.","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"yezkez10"},"content":"  Even if the user inputs an erratic NRIC, they can still input the patients name","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"yezkez10"},"content":"  and receive a list of possible matching patients to choose from.","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"yezkez10"},"content":"    * Cons: This is harder to implement as the FilteredList would have to take in more than 1 type of predicate.","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"simbayippy"},"content":"### Add/delete Appointment feature","lastModifiedDate":"2023-10-26"},{"lineNumber":336,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":337,"author":{"gitId":"simbayippy"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":338,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":339,"author":{"gitId":"simbayippy"},"content":"The add/delete Appointment mechanism is facilitated by `UniqueAppointmentList` and a `Appointment` Class. `UniqueAppointmentList` extends `Iterable\u003cAppointment\u003e` which stores and ensures all the Appointments in this list are unique. Additionally it implements the same operations as the `UniquePersonList`.","lastModifiedDate":"2023-10-26"},{"lineNumber":340,"author":{"gitId":"simbayippy"},"content":"The Appointment class stores the relevant data of the Appointment such as description, date (inclusive of time) as well as Patient it belongs to.","lastModifiedDate":"2023-10-26"},{"lineNumber":341,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":342,"author":{"gitId":"simbayippy"},"content":"The delete Appointment command does the opposite — it calls deleteAppointment(INDEX), which deletes the Appointment from the system by their Index.","lastModifiedDate":"2023-10-26"},{"lineNumber":343,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":344,"author":{"gitId":"simbayippy"},"content":"**Note:** If the index of either add or delete is less than 1 or exceeds the number of Appointments in the List then the command will fail.","lastModifiedDate":"2023-10-26"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":348,"author":{"gitId":"simbayippy"},"content":"**Aspect: How Appointments are going to be saved:**","lastModifiedDate":"2023-10-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":350,"author":{"gitId":"simbayippy"},"content":"* **Alternative 1 (current choice):** Appointment is its own class containing detailed information on the Appointment.","lastModifiedDate":"2023-10-26"},{"lineNumber":351,"author":{"gitId":"simbayippy"},"content":"    * Pros: Similar to Person","lastModifiedDate":"2023-10-26"},{"lineNumber":352,"author":{"gitId":"simbayippy"},"content":"    * Cons: May introduce new bugs and is generally going to take up a lot of lines of code.","lastModifiedDate":"2023-10-26"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":354,"author":{"gitId":"simbayippy"},"content":"* **Alternative 2:** Appointments are just a String and is going to be saved inside an ArrayList.","lastModifiedDate":"2023-10-26"},{"lineNumber":355,"author":{"gitId":"simbayippy"},"content":"    * Pros: Will be easier to implement and much simpler.","lastModifiedDate":"2023-10-26"},{"lineNumber":356,"author":{"gitId":"simbayippy"},"content":"    * Cons: Going to be harder for future developers to update the Appointment Class.","lastModifiedDate":"2023-10-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":358,"author":{"gitId":"simbayippy"},"content":"### Edit Appointment feature","lastModifiedDate":"2023-10-26"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":360,"author":{"gitId":"simbayippy"},"content":"#### Implementation","lastModifiedDate":"2023-10-26"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":362,"author":{"gitId":"simbayippy"},"content":"The edit Appointment mechanism is facilitated by the `EditAppointmentDescriptor` class. It\u0027s mechanism is similar to that of `EditCommand`\u0027s implementation.","lastModifiedDate":"2023-10-26"},{"lineNumber":363,"author":{"gitId":"simbayippy"},"content":"An `edit_appt` command input takes in an Appointment Index, followed by a minimum of 1 required input change of either description `[/d]` or date `[/on]`.","lastModifiedDate":"2023-10-26"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":365,"author":{"gitId":"simbayippy"},"content":"After receiving the users input, the `EditAppointmentCommandParser` parses the given input to form an `EditAppointmentDescriptor`, which will then be used by `createEditedAppointment` to create an Appointment to replace the user specified index.","lastModifiedDate":"2023-10-26"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":367,"author":{"gitId":"simbayippy"},"content":"**Note:** If the Index provided is invalid (0 or bigger than the size of Appointment list), or no input change is given, the command will fail.","lastModifiedDate":"2023-10-26"},{"lineNumber":368,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":369,"author":{"gitId":"simbayippy"},"content":"#### Design considerations:","lastModifiedDate":"2023-10-26"},{"lineNumber":370,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":371,"author":{"gitId":"simbayippy"},"content":"**Aspect: How Appointments are going to be edited:**","lastModifiedDate":"2023-10-26"},{"lineNumber":372,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":373,"author":{"gitId":"simbayippy"},"content":"* **Alternative 1 (current choice):** Appointment is Edited based on its Index in the overall Appointment List","lastModifiedDate":"2023-10-26"},{"lineNumber":374,"author":{"gitId":"simbayippy"},"content":"    * Pros: One centralized Appointment List for all Edit Appointment operations","lastModifiedDate":"2023-10-26"},{"lineNumber":375,"author":{"gitId":"simbayippy"},"content":"    * Cons: Harder to implement","lastModifiedDate":"2023-10-26"},{"lineNumber":376,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":377,"author":{"gitId":"simbayippy"},"content":"* **Alternative 2:** An additional Index field of the Patients Index is to be given, followed by his/her Appointment to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":378,"author":{"gitId":"simbayippy"},"content":"    * Pros: Appointment to be edited is specified to the specific Patient index input","lastModifiedDate":"2023-10-26"},{"lineNumber":379,"author":{"gitId":"simbayippy"},"content":"    * Cons: Harder for the user to visualise which Appointment he is going to edit","lastModifiedDate":"2023-10-26"},{"lineNumber":380,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":381,"author":{"gitId":"Bryan-Goh"},"content":"## **Planned enhancements**","lastModifiedDate":"2023-11-02"},{"lineNumber":382,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":383,"author":{"gitId":"Bryan-Goh"},"content":"### Edit Doctor","lastModifiedDate":"2023-11-02"},{"lineNumber":384,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":385,"author":{"gitId":"Bryan-Goh"},"content":"#### Implementation","lastModifiedDate":"2023-11-02"},{"lineNumber":386,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":387,"author":{"gitId":"simbayippy"},"content":"This enhancement will let the user edit details of the doctor inside the clinic assistant without deleting or interfering with the appointments that doctor has.","lastModifiedDate":"2023-11-04"},{"lineNumber":388,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":389,"author":{"gitId":"simbayippy"},"content":"This edit command will take in a parameter INDEX which is a positive integer which references to the index of doctors shown on the screen.","lastModifiedDate":"2023-11-04"},{"lineNumber":390,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":391,"author":{"gitId":"Bryan-Goh"},"content":"Furthermore it will take in information that the specified doctor\u0027s information will be changed to.","lastModifiedDate":"2023-11-02"},{"lineNumber":392,"author":{"gitId":"Bryan-Goh"},"content":"This will create a new Doctor Object and transfer over all the information that isnt specified in the edit command to be the same as the original doctor.","lastModifiedDate":"2023-11-02"},{"lineNumber":393,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":394,"author":{"gitId":"Bryan-Goh"},"content":"#### Design consideration:","lastModifiedDate":"2023-11-02"},{"lineNumber":395,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":396,"author":{"gitId":"Bryan-Goh"},"content":"**Aspect: How the doctor object is going to be edited:**","lastModifiedDate":"2023-11-02"},{"lineNumber":397,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":398,"author":{"gitId":"Bryan-Goh"},"content":"* You can make it so that you change the value of the variables inside the original doctor","lastModifiedDate":"2023-11-02"},{"lineNumber":399,"author":{"gitId":"Bryan-Goh"},"content":"    * Pros: save space and improve space and time complexity","lastModifiedDate":"2023-11-02"},{"lineNumber":400,"author":{"gitId":"Bryan-Goh"},"content":"    * Cons: Risk introducing unexpected bug as Doctor is no longer immutable","lastModifiedDate":"2023-11-02"},{"lineNumber":401,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":402,"author":{"gitId":"simbayippy"},"content":"### Edit Appointment to include editing of Doctor details","lastModifiedDate":"2023-11-04"},{"lineNumber":403,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":404,"author":{"gitId":"simbayippy"},"content":"#### Implementation","lastModifiedDate":"2023-11-04"},{"lineNumber":405,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":406,"author":{"gitId":"simbayippy"},"content":"This enhancement will let the user edit the appointments associated doctor.","lastModifiedDate":"2023-11-04"},{"lineNumber":407,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":408,"author":{"gitId":"simbayippy"},"content":"This edit command will take in a parameter INDEX which is a positive integer which references to the index of doctors shown on the screen.","lastModifiedDate":"2023-11-04"},{"lineNumber":409,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":410,"author":{"gitId":"simbayippy"},"content":"Furthermore it will take in information that the specified doctor\u0027s information will be changed to.","lastModifiedDate":"2023-11-04"},{"lineNumber":411,"author":{"gitId":"simbayippy"},"content":"This will then change the doctor associated with the appointment the user is editing.","lastModifiedDate":"2023-11-04"},{"lineNumber":412,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":413,"author":{"gitId":"simbayippy"},"content":"#### Design consideration:","lastModifiedDate":"2023-11-04"},{"lineNumber":414,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":415,"author":{"gitId":"simbayippy"},"content":"**Aspect: How the doctor is going to be edited:**","lastModifiedDate":"2023-11-04"},{"lineNumber":416,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":417,"author":{"gitId":"simbayippy"},"content":"* Edit associated doctor based on INDEX shown on the present doctor list. e.g., `edit_appt /doc 2` will edit the doctor associated to the appointment to the second doctor displayed in the Doctor list.","lastModifiedDate":"2023-11-04"},{"lineNumber":418,"author":{"gitId":"simbayippy"},"content":"    * Pros: Intuitive for clinic assistants to use","lastModifiedDate":"2023-11-04"},{"lineNumber":419,"author":{"gitId":"simbayippy"},"content":"    * Cons: Might be difficult to implement","lastModifiedDate":"2023-11-04"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"wj331"},"content":"**Target user profile: Clinic Staff**","lastModifiedDate":"2023-10-04"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"simbayippy"},"content":"* has a need to manage a significant number of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"yezkez10"},"content":"**Value proposition**: manage contacts faster than traditional pen-and-paper record taking","lastModifiedDate":"2023-11-09"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"| Priority | As a …​                              | I want to …​                              | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"simbayippy"},"content":"|----------|--------------------------------------|-------------------------------------------|--------------------------------------------------------|","lastModifiedDate":"2023-10-03"},{"lineNumber":451,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic assistant                     | register new patients to the database     | reduce the use of physical documents and storage costs |","lastModifiedDate":"2023-10-03"},{"lineNumber":452,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic admin staff                   | delete patient records                    | keep our records up-to-date                            |","lastModifiedDate":"2023-10-03"},{"lineNumber":453,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic assistant                     | add new appointments to specific patients | keep track of their appointments                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":454,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | clinic admin staff                   | delete appointments of patients           | update cancellations of no-shows                       |","lastModifiedDate":"2023-10-03"},{"lineNumber":455,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | overwhelmed healthcare professional  | view all the patient records              | not memorise all the patients of the clinic            |","lastModifiedDate":"2023-10-03"},{"lineNumber":456,"author":{"gitId":"simbayippy"},"content":"| `* * *`  | overwhelmed healthcare professional  | view a specific patient\u0027s details         | save time                                              |","lastModifiedDate":"2023-10-03"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"simbayippy"},"content":"(For all use cases below, the **System** is the `ClinicRecords` and the **Actor** is the `Clinic staff`, unless specified otherwise)","lastModifiedDate":"2023-10-03"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"simbayippy"},"content":"**Use case 1: Add a patient**","lastModifiedDate":"2023-10-03"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"simbayippy"},"content":"1.  New patient visits the clinic","lastModifiedDate":"2023-10-03"},{"lineNumber":469,"author":{"gitId":"simbayippy"},"content":"2.  Patient is not in ClinicRecords","lastModifiedDate":"2023-10-03"},{"lineNumber":470,"author":{"gitId":"simbayippy"},"content":"3.  Clinic staff adds this new patient into the ClinicRecords","lastModifiedDate":"2023-10-03"},{"lineNumber":471,"author":{"gitId":"simbayippy"},"content":"4.  ClinicRecords shows a confirmation message","lastModifiedDate":"2023-10-03"},{"lineNumber":472,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":473,"author":{"gitId":"simbayippy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":474,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":475,"author":{"gitId":"simbayippy"},"content":"**Extensions**","lastModifiedDate":"2023-10-03"},{"lineNumber":476,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":477,"author":{"gitId":"simbayippy"},"content":"* 3a. The given input is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":478,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":479,"author":{"gitId":"simbayippy"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":480,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":481,"author":{"gitId":"simbayippy"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-10-03"},{"lineNumber":482,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":483,"author":{"gitId":"simbayippy"},"content":"**Use case 2: List all patients**","lastModifiedDate":"2023-10-03"},{"lineNumber":484,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":485,"author":{"gitId":"simbayippy"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":486,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":487,"author":{"gitId":"wj331"},"content":"1.  Clinic staff wants to see all patient records","lastModifiedDate":"2023-10-04"},{"lineNumber":488,"author":{"gitId":"simbayippy"},"content":"2.  Clinic staff requests to list patients","lastModifiedDate":"2023-10-03"},{"lineNumber":489,"author":{"gitId":"simbayippy"},"content":"3.  ClinicRecords shows a list of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":490,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":491,"author":{"gitId":"simbayippy"},"content":"    Use case ends.","lastModifiedDate":"2023-10-03"},{"lineNumber":492,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":493,"author":{"gitId":"wj331"},"content":"**Use case 3: List a specific patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":494,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":495,"author":{"gitId":"wj331"},"content":"**MSS**","lastModifiedDate":"2023-10-04"},{"lineNumber":496,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":497,"author":{"gitId":"wj331"},"content":"1. Patient visits the clinic","lastModifiedDate":"2023-10-04"},{"lineNumber":498,"author":{"gitId":"wj331"},"content":"2. Clinic staff needs the information of this specific patient","lastModifiedDate":"2023-10-04"},{"lineNumber":499,"author":{"gitId":"wj331"},"content":"3. Clinic staff inserts the patient\u0027s details","lastModifiedDate":"2023-10-04"},{"lineNumber":500,"author":{"gitId":"wj331"},"content":"4. ClinicRecords retrieves the patient\u0027s information for the clinic staff","lastModifiedDate":"2023-10-04"},{"lineNumber":501,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":502,"author":{"gitId":"wj331"},"content":"**Extensions**","lastModifiedDate":"2023-10-04"},{"lineNumber":503,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":504,"author":{"gitId":"wj331"},"content":"* 3a. The patient cannot be found","lastModifiedDate":"2023-10-04"},{"lineNumber":505,"author":{"gitId":"wj331"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-04"},{"lineNumber":506,"author":{"gitId":"wj331"},"content":"        Use Case resumes at step 3","lastModifiedDate":"2023-10-04"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-04"},{"lineNumber":508,"author":{"gitId":"wj331"},"content":"**Use case 4: Delete a patient**","lastModifiedDate":"2023-10-04"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":510,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-10-03"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":512,"author":{"gitId":"simbayippy"},"content":"1.  User requests to list patients","lastModifiedDate":"2023-10-03"},{"lineNumber":513,"author":{"gitId":"simbayippy"},"content":"2.  ClinicRecords shows a list of patients","lastModifiedDate":"2023-10-03"},{"lineNumber":514,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"simbayippy"},"content":"4.  ClinicRecords deletes the person","lastModifiedDate":"2023-10-03"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"simbayippy"},"content":"* 3a. The given input is invalid.","lastModifiedDate":"2023-10-03"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"simbayippy"},"content":"    * 3a1. ClinicRecords shows an error message.","lastModifiedDate":"2023-10-03"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"wj331"},"content":"1.  Should be able to find a patient\u0027s information in less than 2 seconds","lastModifiedDate":"2023-10-04"},{"lineNumber":536,"author":{"gitId":"simbayippy"},"content":"2.  Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-10-03"},{"lineNumber":537,"author":{"gitId":"wj331"},"content":"3.  Should be able to load all patient\u0027s information in about 3 seconds.","lastModifiedDate":"2023-10-04"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"wj331"},"content":"* **ClinicRecords**: The record book we use to store information of patients","lastModifiedDate":"2023-10-04"},{"lineNumber":544,"author":{"gitId":"simbayippy"},"content":"* **Private patient record**: Details that are not meant to be shared with others","lastModifiedDate":"2023-10-03"},{"lineNumber":545,"author":{"gitId":"wj331"},"content":"* **Clinic Staff**: Any healthcare professional at the clinics including doctors/nurses/staff","lastModifiedDate":"2023-10-04"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":555,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":556,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"wj331"},"content":"       Expected: First Patient is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-10-12"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"simbayippy":98,"wj331":37,"tohpinren":8,"yezkez10":101,"-":321,"Bryan-Goh":35}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"# ClinicAssistant User Guide","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"ClinicAssistant is a **desktop app for managing patients\u0027 records, optimized for use via a  Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"ClinicAssistant requires a lot of typing of various prefixes to add, list or store patients or appointments accordingly.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"- **Introduction**","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"    - [Target Audience](#target-audience)","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"    - [How to Use the Guide](#how-to-use-the-guide)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"- **Getting Started**","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"    - [Quick start](#quick-start)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"- **Features and Commands**","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    - [Adding a person: `add`](#adding-a-person-add)","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"    - [Adding a doctor: `add_doctor`](#adding-a-doctor-add-doctor)","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    - [Adding an appointment: `appt`](#adding-an-appointment-appt)","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    - [Listing all patients : `list`](#listing-all-patients-list)","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    - [Listing all appointments : `list_appt`](#listing-all-appointments-list-appt)","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    - [Editing a patient: `edit`](#editing-a-patient-edit)","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    - [Editing an appointment: `edit_appt`](#editing-an-appointment-edit-appt)","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"    - [Deleting a patient : `delete`](#deleting-a-patient-delete)","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    - [Deleting a doctor : `delete_doctor`](#deleting-a-doctor-delete-doctor)","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"    - [Deleting an appointment : `delete_appt`](#deleting-an-appointment-delete-appt)","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"    - [Finding patient details by name: `find`](#finding-patient-details-by-name-find)","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    - [Finding patient details by nric: `find_nric`](#finding-patient-details-by-nric-find-nric)","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    - [Finding appointment by patient name or date: `find_appt`](#finding-appointment-by-patient-name-or-date-find-appt)","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    - [Viewing available timeslots : `view`](#viewing-available-timeslots-view)","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    - [Clearing all patients : `clear`](#clearing-all-patients-clear)","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    - [Exiting the program : `exit`](#exiting-the-program-exit)","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"    - [Saving the data](#saving-the-data)","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    - [Editing the data file](#editing-the-data-file)\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"- **Additional Information**","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"    - [FAQ](#faq)","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    - [Known issues](#known-issues)","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    - [Command summary](#command-summary)","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"### Target Audience","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant is for **general practitioner (GP) clinics\u0027 staff** who want to keep track of their patients\u0027 records and appointments.","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"Clinic staff often have to manage a large number of patients and appointments, and ClinicAssistant helps them to do so more efficiently.","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant allows clinic staff to add, edit, delete, find and list patients and appointments. It also allows viewing of available timeslots for appointments for a given date to allow for easy booking of appointments.","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"### How to use the guide","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"|   If you are   |                                               You should                                                |","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"|:--------------:|:-------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"|   a new user   | proceed to our [quick start](#quick-start) section to set up the necessary details and try our features |","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"| returning user |      skip to our [command summary](#command-summary) for an in-depth summary of all our features!       |","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"1. Download the latest `clinicassistant.jar` from [here](https://github.com/AY2324S1-CS2103T-W09-3/tp/releases).","lastModifiedDate":"2023-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar clinicassistant.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"* `list` : Lists all patients in the ClinicAssistant.","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"* `add /n John Doe /p 98765432 /e johnd@example.com /g M /age 22 /eth Chinese /ic T1234567E /a 311, Clementi Ave 2, #02-25 /t allergic to the sun /t history of knee problems` :","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"  Adds a patient named `John Doe` to ClinicAssistant the specified details such as male `M`, ethnicity `Chinese` and IC number `T1234567E`.","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"* `delete 3` : Deletes the 3rd patient shown in the current list of ClinicAssistant.","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"* `appt /for 1 /doc 1 /d description details /on 02-01-2024 12:00` : Adds an appointment with specified Doctor index, description and time to the patient identified with `INDEX` 1 in the list.","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"* `view /on 02-01-2024` : Displays all available timeslots that can be booked for an appointment on 02 Jan 2024.","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"* `clear` : Deletes all patients.","lastModifiedDate":"2023-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"  e.g. in `add /n NAME`, `NAME` is a parameter which can be used as `add /n John Doe`.","lastModifiedDate":"2023-11-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"  e.g `/n NAME [/t TAG]` can be used as `/n John Doe /t friend` or as `/n John Doe`.","lastModifiedDate":"2023-11-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"* All commands are case-sensitive. \u003cbr\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"  e.g. `delete 1` will work, but `Delete 1` or `DELETE 1` will not work.","lastModifiedDate":"2023-11-02"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"Adds a patient to the database. A patient has a **name, phone number, email, gender, age, ethnicity, IC** and **address**.","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"Format: `add /n NAME /p PHONE_NUMBER /e EMAIL /g GENDER /a AGE /e ETHNICITY /ic NRIC /a ADDRESS [/t TAG]…​`","lastModifiedDate":"2023-11-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"* `add /n John Doe /p 91234567 /e john@gmail.com /g M /a 22 /e Chinese /ic T1234567G /a Clementi /t allergic to pollen`","lastModifiedDate":"2023-11-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"### Adding a doctor: `add_doctor`","lastModifiedDate":"2023-11-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"Adds a doctor to the database. A doctor has a name, phone number, email, gender, age, and address.","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"Format: `add_doctor /n NAME /p PHONE_NUMBER /e EMAIL /g GENDER /age AGE /a ADDRESS`","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"* A doctor has a name, phone number, email, gender, age, address and they are all mandatory.","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"**Note:**","lastModifiedDate":"2023-11-10"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"* You can not add a Doctor with the same name and this is case-sensitive \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"* Adding two doctors with the names John Doe and John doe is allowed","lastModifiedDate":"2023-11-10"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"* Adding two doctors with the names John Doe and John Doe is not allowed","lastModifiedDate":"2023-11-10"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":150,"author":{"gitId":"simbayippy"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":151,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":152,"author":{"gitId":"simbayippy"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":153,"author":{"gitId":"simbayippy"},"content":"* Make sure the details of the doctor is correct as there is a limitation where you can not edit the details of a doctor yet.","lastModifiedDate":"2023-11-11"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"* If you happen to add a Doctor with the wrong information do not worry as you can just delete the doctor by its index and add it again with the correct information this time.","lastModifiedDate":"2023-11-11"},{"lineNumber":155,"author":{"gitId":"simbayippy"},"content":"* If you want to edit a doctor\u0027s details but that doctor already has appointment you need to make sure that the doctor has no more appointment this is because if you delete a doctor with appointments those appointments will deleted as well.","lastModifiedDate":"2023-11-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-10"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"* Valid input: `add_doctor /n Dr Lee /p 81824444 /e drlee@gmail.com /g M /age 30 /a 901 Shelby Drive`","lastModifiedDate":"2023-11-10"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"      `New Doctor added: Dr Lee | Phone: 81824444 | Email: drlee@gmail.com | Gender: M | Age: 30 | Address: 901 Shelby Drive`","lastModifiedDate":"2023-11-10"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"* Invalid input: `add_doctor /n Dr Lee`","lastModifiedDate":"2023-11-10"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"      `Invalid command format!` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"      `add_doctor: Adds a Doctor to clinic assistant.` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"      `Parameters: /n NAME /p PHONE /e EMAIL /g GENDER /age AGE /a ADDRESS` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"      `Example: add_doctor /n John Doe /p 98765432 /e johnd@example.com /g M /age 22 /a 311, Clementi Ave 2, #02-25` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":168,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":169,"author":{"gitId":"simbayippy"},"content":"### Adding an appointment: `appt`","lastModifiedDate":"2023-11-04"},{"lineNumber":170,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":171,"author":{"gitId":"simbayippy"},"content":"Adds a new appointment for the specified patient. An appointment requires the patient\u0027s index, the doctor\u0027s index, a description, and the appointment date and time.","lastModifiedDate":"2023-11-11"},{"lineNumber":172,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":173,"author":{"gitId":"simbayippy"},"content":"Format: `appt /for PATIENT_INDEX /doc DOCTOR_INDEX /d DESCRIPTION /on DATE_TIME`","lastModifiedDate":"2023-11-11"},{"lineNumber":174,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"* PATIENT_INDEX: Index of the patient for whom the appointment is being made.","lastModifiedDate":"2023-11-11"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"* DOCTOR_INDEX: Index of the doctor who will handle the appointment.","lastModifiedDate":"2023-11-11"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"* DESCRIPTION: Brief description of the appointment.","lastModifiedDate":"2023-11-11"},{"lineNumber":178,"author":{"gitId":"simbayippy"},"content":"* DATE_TIME: Date and time of the appointment in the format dd-MM-yyyy HH:mm (e.g., 01-01-2024 12:00).","lastModifiedDate":"2023-11-11"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":180,"author":{"gitId":"simbayippy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":181,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"**Note:**","lastModifiedDate":"2023-11-04"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"* The doctor\u0027s index must correspond to a valid doctor previously added to the system.","lastModifiedDate":"2023-11-11"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"* The appointment\u0027s date and time must be in the future.","lastModifiedDate":"2023-11-11"},{"lineNumber":185,"author":{"gitId":"simbayippy"},"content":"* All fields (patient index, doctor index, description, and date/time) are mandatory.","lastModifiedDate":"2023-11-11"},{"lineNumber":186,"author":{"gitId":"simbayippy"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"* Only one appointment is allowed per timeslot. i.e. 2 doctors cannot have appointments on the same timeslot. This is a current limitation that we are working as part of our future implementations.","lastModifiedDate":"2023-11-11"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"Examples:","lastModifiedDate":"2023-11-04"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"* Valid input: `appt /for 1 /doc 2 /d Blood test /on 01-01-2024 12:00`","lastModifiedDate":"2023-11-11"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":197,"author":{"gitId":"simbayippy"},"content":"      `New appointment added | Patient: Alex Yeoh | Description: Blood test | Date: 01 Jan 2024 12.00 PM`","lastModifiedDate":"2023-11-11"},{"lineNumber":198,"author":{"gitId":"simbayippy"},"content":"* Invalid input 1 (no description provided): `appt /for 1 /doc 2 /on 01-01-2024 12:00`","lastModifiedDate":"2023-11-11"},{"lineNumber":199,"author":{"gitId":"simbayippy"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"      `Invalid command format! ` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"      `appt: Adds a appointment to the patient identified by the index number used in the displayed patient list.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"      `Parameters: /for PATIENT_INDEX /doc DOCTOR_INDEX /d DESCRIPTION /on DATE_TIME` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"      `Example: appt /for 1 /doc 1 /d x-ray scan /on 02-01-2024 12:00`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"* Invalid input 2 (invalid DATE_TIME): `appt /for 1 /doc 2 /d Blood test /on tuesday`","lastModifiedDate":"2023-11-11"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"      `Date must be in dd-MM-yyyy HH:mm format.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":207,"author":{"gitId":"simbayippy"},"content":"      `Date \u0026 time must be after the current time.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":208,"author":{"gitId":"simbayippy"},"content":"      `Time of appointment must be on the hour, between 9 AM and 5 PM inclusive.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":209,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"### Listing all patients : `list`","lastModifiedDate":"2023-10-03"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"Shows a list of all patients in Clinic Assistant.","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"wj331"},"content":"### Listing all appointments : `list_appt`","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"Removes all conditions previously applied to the appointments list and shows all appointments in Clinic Assistant.","lastModifiedDate":"2023-11-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"Format: `list_appt`","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"**Note:**","lastModifiedDate":"2023-11-11"},{"lineNumber":225,"author":{"gitId":"tohpinren"},"content":"* Additional text after `list_appt` will be ignored and not affect the output.","lastModifiedDate":"2023-11-11"},{"lineNumber":226,"author":{"gitId":"tohpinren"},"content":"  * E.g. `list_appt 1` will still show all appointments in Clinic Assistant.","lastModifiedDate":"2023-11-11"},{"lineNumber":227,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":228,"author":{"gitId":"tohpinren"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":229,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":230,"author":{"gitId":"tohpinren"},"content":"Example:","lastModifiedDate":"2023-11-11"},{"lineNumber":231,"author":{"gitId":"tohpinren"},"content":"* Valid input: `list_appt`","lastModifiedDate":"2023-11-11"},{"lineNumber":232,"author":{"gitId":"tohpinren"},"content":"    * Output (success): `Listed all appointments` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":233,"author":{"gitId":"tohpinren"},"content":"        All conditions are removed and all appointments are showed.","lastModifiedDate":"2023-11-11"},{"lineNumber":234,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":235,"author":{"gitId":"simbayippy"},"content":"### Editing a patient: `edit`","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"simbayippy"},"content":"Edits an existing patient from the Clinic Records.","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"simbayippy"},"content":"Format: `edit INDEX [/n NAME] [/p PHONE] [/e EMAIL] [/g GENDER] [/age AGE] [/eth ETHNIC] [/ic NRIC] [/a ADDRESS] [t/TAG]…​`","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"simbayippy"},"content":"* Edits the patient at the specified `INDEX`. The index refers to the index number shown in the displayed patient list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"simbayippy"},"content":"* `edit 1 /p 91234567 /e johndoe@example.com` edits the phone number and email address of the 1st person to be 91234567 and johndoe@example.com respectively.","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"simbayippy"},"content":"* `edit 2 /n Betsy Crower` edits the name of the 2nd person to be Betsy Crower and clears all existing tags.","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":250,"author":{"gitId":"simbayippy"},"content":"### Editing an appointment: `edit_appt`","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":252,"author":{"gitId":"simbayippy"},"content":"Edits an existing appointment from the Clinic Records.","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"simbayippy"},"content":"Format: `edit_appt INDEX [/d DESCRIPTION] [/on DATE_TIME]`","lastModifiedDate":"2023-11-11"},{"lineNumber":255,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"simbayippy"},"content":"* Edits the appointment at the specified `INDEX`. The index refers to the index number shown in the displayed appointment list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2023-11-02"},{"lineNumber":257,"author":{"gitId":"simbayippy"},"content":"* **At least** one field must be edited.","lastModifiedDate":"2023-11-11"},{"lineNumber":258,"author":{"gitId":"simbayippy"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"simbayippy"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":261,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":262,"author":{"gitId":"wj331"},"content":"**Note:**","lastModifiedDate":"2023-11-11"},{"lineNumber":263,"author":{"gitId":"simbayippy"},"content":"* Doctors of the appointment cannot be edited, planned addition in future implementations.","lastModifiedDate":"2023-11-11"},{"lineNumber":264,"author":{"gitId":"simbayippy"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":265,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":266,"author":{"gitId":"simbayippy"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":267,"author":{"gitId":"simbayippy"},"content":"* Valid input: `edit_appt 1 /d changed to x-ray scan /on 01-01-2024 09:00`","lastModifiedDate":"2023-11-11"},{"lineNumber":268,"author":{"gitId":"simbayippy"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":269,"author":{"gitId":"simbayippy"},"content":"      `Newly edited appointment | Patient: Alex Yeoh | Description: changed to x-ray scan | Date: 01 Jan 2024 09.00 AM`","lastModifiedDate":"2023-11-11"},{"lineNumber":270,"author":{"gitId":"simbayippy"},"content":"* Invalid input 1 (no fields provided): `edit_appt 1`","lastModifiedDate":"2023-11-11"},{"lineNumber":271,"author":{"gitId":"simbayippy"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":272,"author":{"gitId":"simbayippy"},"content":"      `At least one field to edit must be provided: [/d DESCRIPTION][/on DATE_TIME]` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":273,"author":{"gitId":"simbayippy"},"content":"      `Example: edit_appt 1 /on 01-01-2024 00:00` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":274,"author":{"gitId":"simbayippy"},"content":"* Invalid input 2 (invalid date \u0026 time): `edit_appt 1 /on tuesday`","lastModifiedDate":"2023-11-11"},{"lineNumber":275,"author":{"gitId":"simbayippy"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":276,"author":{"gitId":"simbayippy"},"content":"      `Date must be in dd-MM-yyyy HH:mm format.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":277,"author":{"gitId":"simbayippy"},"content":"      `Date \u0026 time must be after the current time.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":278,"author":{"gitId":"simbayippy"},"content":"      `Time of appointment must be on the hour, between 9 AM and 5 PM inclusive.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":279,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":280,"author":{"gitId":"tohpinren"},"content":"### Deleting a patient : `delete`","lastModifiedDate":"2023-11-02"},{"lineNumber":281,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":282,"author":{"gitId":"tohpinren"},"content":"Deletes the specified patient from the Clinic Records.","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"tohpinren"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-11-02"},{"lineNumber":285,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":286,"author":{"gitId":"wj331"},"content":"* Deletes the patient at the specified `INDEX` in the list under **Patients**.","lastModifiedDate":"2023-11-11"},{"lineNumber":287,"author":{"gitId":"wj331"},"content":"* The `INDEX` refers to the index number shown in the list in front of the name.","lastModifiedDate":"2023-11-11"},{"lineNumber":288,"author":{"gitId":"wj331"},"content":"* The `INDEX` **must be a positive integer** 1, 2, 3, 4, …​","lastModifiedDate":"2023-11-11"},{"lineNumber":289,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":290,"author":{"gitId":"wj331"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":291,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":292,"author":{"gitId":"wj331"},"content":"**Note:**","lastModifiedDate":"2023-11-11"},{"lineNumber":293,"author":{"gitId":"wj331"},"content":"* The command word `delete` is case-sensitive. E.g. `Delete INDEX` will not work","lastModifiedDate":"2023-11-11"},{"lineNumber":294,"author":{"gitId":"wj331"},"content":"* INDEX must be a positive integer in the patient list, starting from 1, with the last index as the limit.","lastModifiedDate":"2023-11-11"},{"lineNumber":295,"author":{"gitId":"wj331"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":296,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":297,"author":{"gitId":"wj331"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":298,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":299,"author":{"gitId":"wj331"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":300,"author":{"gitId":"wj331"},"content":"* Deleting a patient will delete **all** their information and appointments and this is **UNRECOVERABLE**","lastModifiedDate":"2023-11-11"},{"lineNumber":301,"author":{"gitId":"wj331"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":302,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":303,"author":{"gitId":"tohpinren"},"content":"Examples:","lastModifiedDate":"2023-11-02"},{"lineNumber":304,"author":{"gitId":"wj331"},"content":"* Valid input: `delete 1`","lastModifiedDate":"2023-11-11"},{"lineNumber":305,"author":{"gitId":"wj331"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":306,"author":{"gitId":"wj331"},"content":"      `Deleted Person: John Doe | Phone: 98765432 | Email: johnd@example.com | Gender: M | Age: 22 | Ethnic: Chinese | NRIC: T1334567E | Address: 311, Clementi Ave 2, #02-25 | Tags: [history of knee problems][allergic to the sun] from clinic records`","lastModifiedDate":"2023-11-11"},{"lineNumber":307,"author":{"gitId":"wj331"},"content":"* Invalid input 1 (no `INDEX` provided): `delete `","lastModifiedDate":"2023-11-11"},{"lineNumber":308,"author":{"gitId":"wj331"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":309,"author":{"gitId":"wj331"},"content":"      `Invalid command format! ` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":310,"author":{"gitId":"wj331"},"content":"      `delete: Deletes the patient with the index number used in the clinic records.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":311,"author":{"gitId":"wj331"},"content":"      `Parameters: INDEX (must be a positive integer in the list)` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":312,"author":{"gitId":"wj331"},"content":"      `Example: delete 1`\u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":313,"author":{"gitId":"wj331"},"content":"    * **To fix**: Enter an `INDEX` such as `delete 2`","lastModifiedDate":"2023-11-11"},{"lineNumber":314,"author":{"gitId":"wj331"},"content":"* Invalid input 2 (`INDEX` too large): `delete 10000`","lastModifiedDate":"2023-11-11"},{"lineNumber":315,"author":{"gitId":"wj331"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":316,"author":{"gitId":"wj331"},"content":"      `The patient index provided is invalid` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":317,"author":{"gitId":"wj331"},"content":"    * **To fix**: Enter an `INDEX` present in `Patients` tab such as `delete 3`","lastModifiedDate":"2023-11-11"},{"lineNumber":318,"author":{"gitId":"wj331"},"content":"* Invalid input 3 (`INDEX` provided as word): `delete one`","lastModifiedDate":"2023-11-11"},{"lineNumber":319,"author":{"gitId":"wj331"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":320,"author":{"gitId":"wj331"},"content":"      `INDEX entered must be an integer!.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":321,"author":{"gitId":"wj331"},"content":"    * **To fix**: Enter an `INDEX` that that is an **Integer** such as `delete 1`","lastModifiedDate":"2023-11-11"},{"lineNumber":322,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":323,"author":{"gitId":"Bryan-Goh"},"content":"### Deleting a doctor : `delete_doctor`","lastModifiedDate":"2023-11-10"},{"lineNumber":324,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":325,"author":{"gitId":"Bryan-Goh"},"content":"Deletes the specified doctor from the Clinic Records.","lastModifiedDate":"2023-11-10"},{"lineNumber":326,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":327,"author":{"gitId":"Bryan-Goh"},"content":"Format: `delete_doctor INDEX`","lastModifiedDate":"2023-11-10"},{"lineNumber":328,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":329,"author":{"gitId":"Bryan-Goh"},"content":"* Deletes the doctor at the specified `INDEX`.","lastModifiedDate":"2023-11-10"},{"lineNumber":330,"author":{"gitId":"Bryan-Goh"},"content":"* Index refers to the index number shown on the displayed doctor list.","lastModifiedDate":"2023-11-10"},{"lineNumber":331,"author":{"gitId":"Bryan-Goh"},"content":"* User could use click on the doctor tab to show the doctor list.","lastModifiedDate":"2023-11-10"},{"lineNumber":332,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":333,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":335,"author":{"gitId":"Bryan-Goh"},"content":"**Note:** \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":336,"author":{"gitId":"Bryan-Goh"},"content":"* The command is case-sensitive. E.g. `Delete_doctor INDEX` will not work","lastModifiedDate":"2023-11-10"},{"lineNumber":337,"author":{"gitId":"Bryan-Goh"},"content":"* INDEX must be a positive integer, starting from 1","lastModifiedDate":"2023-11-10"},{"lineNumber":338,"author":{"gitId":"Bryan-Goh"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":340,"author":{"gitId":"wj331"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":341,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":342,"author":{"gitId":"wj331"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":343,"author":{"gitId":"wj331"},"content":"* Make sure that the doctor you are about to delete does not have any appointments.","lastModifiedDate":"2023-11-11"},{"lineNumber":344,"author":{"gitId":"wj331"},"content":"* This is because if you delete a doctor that has appointments those appointments will be deleted from clinic assistant as well and all data will be lost.","lastModifiedDate":"2023-11-11"},{"lineNumber":345,"author":{"gitId":"wj331"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":346,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":347,"author":{"gitId":"Bryan-Goh"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":348,"author":{"gitId":"Bryan-Goh"},"content":"initial Doctor list:","lastModifiedDate":"2023-11-10"},{"lineNumber":349,"author":{"gitId":"Bryan-Goh"},"content":"![Add_Doctor](images/Add_Doctor.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":350,"author":{"gitId":"Bryan-Goh"},"content":"* Valid input: `delete_doctor 1`","lastModifiedDate":"2023-11-10"},{"lineNumber":351,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":352,"author":{"gitId":"Bryan-Goh"},"content":"      `Deleted Doctor: John Doe | Phone: 98765432 | Email: johnd@example.com | Gender: M | Age: 22 | Address: 311, Clementi Ave 2, #02-25 from clinic records`","lastModifiedDate":"2023-11-10"},{"lineNumber":353,"author":{"gitId":"Bryan-Goh"},"content":"* Invalid input: `delete_doctor 0` for non positive integers or no input","lastModifiedDate":"2023-11-10"},{"lineNumber":354,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":355,"author":{"gitId":"Bryan-Goh"},"content":"      `Invalid command format!`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":356,"author":{"gitId":"Bryan-Goh"},"content":"      `delete_doctor: Deletes the doctor with the index number used in the clinic records.`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":357,"author":{"gitId":"Bryan-Goh"},"content":"      `Parameters: INDEX (must be a positive integer in the list)`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":358,"author":{"gitId":"Bryan-Goh"},"content":"      `Example: delete_doctor 1`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":359,"author":{"gitId":"Bryan-Goh"},"content":"* Invalid input: `delete_doctor 2` for positive integers out of bounds","lastModifiedDate":"2023-11-10"},{"lineNumber":360,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":361,"author":{"gitId":"Bryan-Goh"},"content":"      `The doctor index provided is invalid`","lastModifiedDate":"2023-11-10"},{"lineNumber":362,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":363,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":364,"author":{"gitId":"Bryan-Goh"},"content":"### Deleting an appointment : `delete_appt`","lastModifiedDate":"2023-10-13"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"Bryan-Goh"},"content":"Deletes an appointment from the clinic’s registra via the specified index.","lastModifiedDate":"2023-11-10"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"Bryan-Goh"},"content":"Format: `delete_appt INDEX`","lastModifiedDate":"2023-11-01"},{"lineNumber":369,"author":{"gitId":"Bryan-Goh"},"content":"* Deletes the appointment at the specified `INDEX`","lastModifiedDate":"2023-11-10"},{"lineNumber":370,"author":{"gitId":"Bryan-Goh"},"content":"* Index refers to the index number shown on the displayed appointment list.","lastModifiedDate":"2023-11-10"},{"lineNumber":371,"author":{"gitId":"Bryan-Goh"},"content":"* User could use `list_appt` to display all the appointments in the registra first","lastModifiedDate":"2023-11-10"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"Bryan-Goh"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":374,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":375,"author":{"gitId":"Bryan-Goh"},"content":"**Note:** \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":376,"author":{"gitId":"Bryan-Goh"},"content":"* The command is case-sensitive. E.g. `Delete_appt INDEX` will not work","lastModifiedDate":"2023-11-10"},{"lineNumber":377,"author":{"gitId":"Bryan-Goh"},"content":"* INDEX must be a positive integer, starting from 1","lastModifiedDate":"2023-11-10"},{"lineNumber":378,"author":{"gitId":"Bryan-Goh"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":379,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":380,"author":{"gitId":"Bryan-Goh"},"content":"Examples:\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":381,"author":{"gitId":"Bryan-Goh"},"content":"initial Appointment list:","lastModifiedDate":"2023-11-10"},{"lineNumber":382,"author":{"gitId":"Bryan-Goh"},"content":"![Add_Appointment](images/Add_Appointment.png)","lastModifiedDate":"2023-11-10"},{"lineNumber":383,"author":{"gitId":"Bryan-Goh"},"content":"* Valid input: `delete_appt 1`","lastModifiedDate":"2023-11-10"},{"lineNumber":384,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":385,"author":{"gitId":"Bryan-Goh"},"content":"      `Deleted Appointment seedu.address.model.appointment.Appointment{description\u003ddescription details, dateTime\u003d2024-01-02T12:00} of Alex Yeoh | Phone: 87438807 | Email: alexyeoh@example.com | Gender: M | Age: 21 | Ethnic: Chinese | NRIC: T1341367E | Address: Blk 30 Geylang Street 29, #06-40 | Tags: [friends]`","lastModifiedDate":"2023-11-10"},{"lineNumber":386,"author":{"gitId":"Bryan-Goh"},"content":"* Invalid input: `delete_appt 0` for non positive integers or no input","lastModifiedDate":"2023-11-10"},{"lineNumber":387,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":388,"author":{"gitId":"Bryan-Goh"},"content":"      `Invalid command format:` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":389,"author":{"gitId":"Bryan-Goh"},"content":"      `delete_appt: Deletes the Appointment identified by the index number used in the displayed appointments list.` \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":390,"author":{"gitId":"Bryan-Goh"},"content":"      `Parameters: INDEX (must be a positive integer) Example: delete_appt 1`\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":391,"author":{"gitId":"Bryan-Goh"},"content":"* Invalid input: `delete_appt 2` for positive integers out of bounds","lastModifiedDate":"2023-11-10"},{"lineNumber":392,"author":{"gitId":"Bryan-Goh"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":393,"author":{"gitId":"Bryan-Goh"},"content":"      `The patient index provided is invalid`","lastModifiedDate":"2023-11-10"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"tohpinren"},"content":"### Finding patient details by name: `find`","lastModifiedDate":"2023-10-03"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"tohpinren"},"content":"Finds patients whose name contains the given keyword.","lastModifiedDate":"2023-10-03"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"tohpinren"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-10-03"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"tohpinren"},"content":"### Finding patient details by nric: `find_nric`","lastModifiedDate":"2023-11-02"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"yezkez10"},"content":"Finds the patient who has the given NRIC.","lastModifiedDate":"2023-11-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"tohpinren"},"content":"Format: `find_nric NRIC`","lastModifiedDate":"2023-11-02"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"yezkez10"},"content":"* The search is not case-sensitive. ie the NRIC `T1234567E` is equivalent to the NRIC `t1234567e`.","lastModifiedDate":"2023-11-02"},{"lineNumber":415,"author":{"gitId":"yezkez10"},"content":"* The inputted NRIC must be valid. The NRIC must start with \u0027S\u0027 or \u0027T\u0027, and contain 7 digits between the 2 alphabets.","lastModifiedDate":"2023-11-02"},{"lineNumber":416,"author":{"gitId":"yezkez10"},"content":"    * ie v1234567e and s123456e are invalid NRICs","lastModifiedDate":"2023-11-02"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"yezkez10"},"content":"* `find_nric T0123456G` returns the patient with NRIC `T0123456G`","lastModifiedDate":"2023-11-02"},{"lineNumber":420,"author":{"gitId":"yezkez10"},"content":"* `find_nric s0123456h` returns the patient with NRIC `S0123456H`","lastModifiedDate":"2023-11-02"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"tohpinren"},"content":"### Finding appointment by patient name or date: `find_appt`","lastModifiedDate":"2023-11-02"},{"lineNumber":423,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":424,"author":{"gitId":"tohpinren"},"content":"Filters appointments by one or more fields using their prefixes, and their corresponding inputs (name and date).","lastModifiedDate":"2023-11-11"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":426,"author":{"gitId":"tohpinren"},"content":"Format: `find_appt [/n KEYWORD [MORE_KEYWORDS]...][/on DATE]`","lastModifiedDate":"2023-11-11"},{"lineNumber":427,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":428,"author":{"gitId":"tohpinren"},"content":"* NAME: One or more keywords to filter by the patient\u0027s name (e.g. `John Simba` will search for appointments of patients whose name contains `John` or `Simba`). It must be non-empty alphanumeric characters and spaces.","lastModifiedDate":"2023-11-11"},{"lineNumber":429,"author":{"gitId":"tohpinren"},"content":"* DATE: Date of the appointment to filter by in the format dd-MM-yyyy (e.g. `01-01-2024`).","lastModifiedDate":"2023-11-11"},{"lineNumber":430,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":431,"author":{"gitId":"tohpinren"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":432,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":433,"author":{"gitId":"simbayippy"},"content":"**Note:**","lastModifiedDate":"2023-11-02"},{"lineNumber":434,"author":{"gitId":"tohpinren"},"content":"* The prefixes that can be used are listed in the parameter list above.","lastModifiedDate":"2023-11-11"},{"lineNumber":435,"author":{"gitId":"tohpinren"},"content":"* The name filter is case-insensitive, e.g. `han` will match `Han`.","lastModifiedDate":"2023-11-11"},{"lineNumber":436,"author":{"gitId":"tohpinren"},"content":"* The user can filter using one field or both fields at once.","lastModifiedDate":"2023-11-11"},{"lineNumber":437,"author":{"gitId":"tohpinren"},"content":"  * e.g. `find_appt /n John /on 01-01-2024` will return appointments of patients with name `John` that falls on 1 Jan 2024.","lastModifiedDate":"2023-11-11"},{"lineNumber":438,"author":{"gitId":"tohpinren"},"content":"* If there are no prefixes keyed in, an error message will be shown with the correct command format.","lastModifiedDate":"2023-11-11"},{"lineNumber":439,"author":{"gitId":"tohpinren"},"content":"* If the input after a prefix is empty/invalid, an error message with the constraint of the field will be shown.","lastModifiedDate":"2023-11-11"},{"lineNumber":440,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":441,"author":{"gitId":"tohpinren"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":442,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":443,"author":{"gitId":"tohpinren"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":444,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":445,"author":{"gitId":"tohpinren"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":446,"author":{"gitId":"tohpinren"},"content":"* The name filter must be full words, e.g. `han` will not match `Hannah`.","lastModifiedDate":"2023-11-11"},{"lineNumber":447,"author":{"gitId":"tohpinren"},"content":"* Date parameter must be in the format dd-MM-yyyy e.g. `01-01-2024`.","lastModifiedDate":"2023-11-11"},{"lineNumber":448,"author":{"gitId":"tohpinren"},"content":"* Both fields are optional, but at least 1 must be given. e.g. `find_appt` with no field inputs will not work. ","lastModifiedDate":"2023-11-11"},{"lineNumber":449,"author":{"gitId":"tohpinren"},"content":"* One filter can only be used once in a single command. e.g. `find_appt /n John /n Simba` will not work.","lastModifiedDate":"2023-11-11"},{"lineNumber":450,"author":{"gitId":"tohpinren"},"content":"  ","lastModifiedDate":"2023-11-11"},{"lineNumber":451,"author":{"gitId":"tohpinren"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":453,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-11-01"},{"lineNumber":454,"author":{"gitId":"tohpinren"},"content":"* Valid input: `find_appt /n John /on 01-01-2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":455,"author":{"gitId":"tohpinren"},"content":"    * Output (success): `1 appointment found!` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":456,"author":{"gitId":"tohpinren"},"content":"      Appointments of patients with name `John` that falls on 1 Jan 2024 is shown.","lastModifiedDate":"2023-11-11"},{"lineNumber":457,"author":{"gitId":"tohpinren"},"content":"* Invalid input 1 (no prefixes provided): `find_appt`","lastModifiedDate":"2023-11-11"},{"lineNumber":458,"author":{"gitId":"tohpinren"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":459,"author":{"gitId":"tohpinren"},"content":"      `Invalid command format!` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":460,"author":{"gitId":"tohpinren"},"content":"      `find_appt: Finds all appointments with patient name by keywords (case-insensitive) or date and displays them as a list with index numbers.` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":461,"author":{"gitId":"tohpinren"},"content":"      `Parameters: [/n KEYWORD [MORE_KEYWORDS]...][/on DATE]`","lastModifiedDate":"2023-11-11"},{"lineNumber":462,"author":{"gitId":"tohpinren"},"content":"      `Example: find_appt /n alice bob charlie /on 01-01-2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":463,"author":{"gitId":"tohpinren"},"content":"* Invalid input 2 (invalid DATE): `find_appt /n John /on 1 Jan 2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":464,"author":{"gitId":"tohpinren"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":465,"author":{"gitId":"tohpinren"},"content":"      `DATE must be in format dd-MM-yyyy` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":467,"author":{"gitId":"wj331"},"content":"### Viewing available timeslots : `view`","lastModifiedDate":"2023-11-02"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":469,"author":{"gitId":"wj331"},"content":"Displays all **available** timeslots on the specified date by the user.","lastModifiedDate":"2023-11-02"},{"lineNumber":470,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":471,"author":{"gitId":"tohpinren"},"content":"Format: `view /on DATE`","lastModifiedDate":"2023-11-02"},{"lineNumber":472,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":473,"author":{"gitId":"wj331"},"content":"* Displays all available timeslots that can be booked on the `DATE` under the `Timeslots` tab.","lastModifiedDate":"2023-11-11"},{"lineNumber":474,"author":{"gitId":"wj331"},"content":"* Any Timeslot displayed under the `Timeslot` tab can be used to book an appointment.","lastModifiedDate":"2023-11-11"},{"lineNumber":475,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":476,"author":{"gitId":"wj331"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":477,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":478,"author":{"gitId":"wj331"},"content":"**Note:**","lastModifiedDate":"2023-11-02"},{"lineNumber":479,"author":{"gitId":"wj331"},"content":"* The `DATE` **must be a valid date** on the calendar in the format `dd-MM-yyyy` **exactly**","lastModifiedDate":"2023-11-11"},{"lineNumber":480,"author":{"gitId":"wj331"},"content":"* Timeslots for appointments are fixed at 1 hour each, **starting from 9AM to 5PM**","lastModifiedDate":"2023-11-11"},{"lineNumber":481,"author":{"gitId":"wj331"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":482,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":483,"author":{"gitId":"wj331"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":484,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":485,"author":{"gitId":"wj331"},"content":"**Warning:**","lastModifiedDate":"2023-11-11"},{"lineNumber":486,"author":{"gitId":"wj331"},"content":"* The `Timeslot` tab is **deactivated** whenever there is **no available timeslots**. Please enter the command to activate it again after there is at least 1 timeslot.","lastModifiedDate":"2023-11-11"},{"lineNumber":487,"author":{"gitId":"wj331"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":488,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":489,"author":{"gitId":"wj331"},"content":"Examples:","lastModifiedDate":"2023-11-11"},{"lineNumber":490,"author":{"gitId":"wj331"},"content":"* Valid input: `view /on 02-01-2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":491,"author":{"gitId":"wj331"},"content":"    * Output (success): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":492,"author":{"gitId":"wj331"},"content":"      `All Available Timeslot(s) on Jan 02, 2024 Listed!`","lastModifiedDate":"2023-11-11"},{"lineNumber":493,"author":{"gitId":"wj331"},"content":"* Invalid input 1 (invalid `DATE` format): `view /on 02/01/2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":494,"author":{"gitId":"wj331"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":495,"author":{"gitId":"wj331"},"content":"      `DATE must be in format dd-MM-yyyy` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":496,"author":{"gitId":"wj331"},"content":"    * **To fix**: Use `-` as date separator such as `view /on 02-01-2024`","lastModifiedDate":"2023-11-11"},{"lineNumber":497,"author":{"gitId":"wj331"},"content":"* Invalid input 2 (`DATE` has past): `view /on 02-01-1999`","lastModifiedDate":"2023-11-11"},{"lineNumber":498,"author":{"gitId":"wj331"},"content":"    * Output (failure): \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":499,"author":{"gitId":"wj331"},"content":"      `DATE entered has past already!` \u003cbr\u003e","lastModifiedDate":"2023-11-11"},{"lineNumber":500,"author":{"gitId":"wj331"},"content":"    * **To fix**: Enter a `DATE` that has not past such as `view /on 01-10-2103`","lastModifiedDate":"2023-11-11"},{"lineNumber":501,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":502,"author":{"gitId":"tohpinren"},"content":"### Clearing all patients : `clear`","lastModifiedDate":"2023-10-05"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"tohpinren"},"content":"Clears all patients from ClinicAssistant.","lastModifiedDate":"2023-10-05"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"wj331"},"content":"Exits ClinicAssistant.","lastModifiedDate":"2023-10-19"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-10-05"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":520,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant data are saved automatically as a JSON file `[JAR file location]/data/clinicassistant.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-10-05"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":522,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":523,"author":{"gitId":"tohpinren"},"content":"If your changes to the data file makes its format invalid, ClinicAssistant will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.","lastModifiedDate":"2023-10-05"},{"lineNumber":524,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":526,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"tohpinren"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ClinicAssistant home folder.","lastModifiedDate":"2023-10-05"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":537,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":539,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":541,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":545,"author":{"gitId":"simbayippy"},"content":"**Add**    | `add /n NAME /p PHONE_NUMBER /e EMAIL /g GENDER /age AGE /eth ETHNICITY /ic NRIC /a ADDRESS [/t TAG]…​` \u003cbr\u003e e.g., `add /n James Ho /p 81808888 /e jamesho@example.com /g M /age 22 /eth Chinese /ic T1234567E /a 123, Clementi Rd, 1234665 /t allergic to dust`","lastModifiedDate":"2023-11-11"},{"lineNumber":546,"author":{"gitId":"Bryan-Goh"},"content":"**Add Doctor**  | `add_doctor /n NAME /P PHONE_NUMBER /e EMAIL /g GENDER /age AGE /a ADDRESS` \u003cbr\u003e e.g, `add_doctor /n John Doe /p 98765432 /e johnd@example.com /g M /age 22 /a 311, Clementi Ave 2, #02-25`","lastModifiedDate":"2023-11-10"},{"lineNumber":547,"author":{"gitId":"simbayippy"},"content":"**Add Appointment**  | `appt /for PATIENT_INDEX /doc DOCTOR_INDEX /d DESCRIPTION /on DATE_TIME` \u003cbr\u003e e.g., `appt /for 1 /doc 1 /d x-ray scan /on 02-01-2024 12:00`","lastModifiedDate":"2023-11-11"},{"lineNumber":548,"author":{"gitId":"simbayippy"},"content":"**Edit**   | `edit INDEX [/n NAME] [/p PHONE] [/e EMAIL] [/g GENDER] [/age AGE] [/eth ETHNIC] [/ic NRIC] [/a ADDRESS] [/t TAG]…​` \u003cbr\u003e e.g., `edit 1 /a 3 NUS Computing Drive`","lastModifiedDate":"2023-11-11"},{"lineNumber":549,"author":{"gitId":"simbayippy"},"content":"**Edit Appointment** | `edit_appt INDEX [/d DESCRIPTION] [/on DATE_TIME]` \u003cbr\u003e e.g., `edit_appt 1 /d changed to x-ray scan`","lastModifiedDate":"2023-11-11"},{"lineNumber":550,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"Bryan-Goh"},"content":"**Delete Doctor** | `delete_doctor INDEX`\u003cbr\u003e e.g, `delete_doctor 3`","lastModifiedDate":"2023-11-10"},{"lineNumber":553,"author":{"gitId":"simbayippy"},"content":"**Delete Appointment** | `delete_appt INDEX` \u003cbr\u003e e.g., `delete_appt 3`","lastModifiedDate":"2023-11-02"},{"lineNumber":554,"author":{"gitId":"tohpinren"},"content":"**Find**   | `find KEYWORD`\u003cbr\u003e e.g., `find john`","lastModifiedDate":"2023-10-03"},{"lineNumber":555,"author":{"gitId":"yezkez10"},"content":"**Find by NRIC**   | `find_nric NRIC` \u003cbr\u003e e.g., `find_nric T1234567E`","lastModifiedDate":"2023-11-02"},{"lineNumber":556,"author":{"gitId":"simbayippy"},"content":"**Find Appointment** | `find_appt [/n KEYWORD] [/on DATE]`\u003cbr\u003ee.g., `find_appt /n John /on 01-01-2024 12:00`","lastModifiedDate":"2023-11-02"},{"lineNumber":557,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"wj331"},"content":"**View**   | `view /on DATE`\u003cbr\u003e e.g., `view /on 02-01-2024`","lastModifiedDate":"2023-11-02"},{"lineNumber":559,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":561,"author":{"gitId":"simbayippy"},"content":"[Back to top](#clinicassistant-user-guide)","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"simbayippy":145,"wj331":82,"tohpinren":87,"yezkez10":7,"-":153,"Bryan-Goh":87}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eClinicAssistant\u003c/a\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"tohpinren":1,"-":65}},{"path":"docs/diagrams/AddDoctor.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"@startuml","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"!include style.puml","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"participant \":AddDoctorParser\" as AddDoctorParser LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"participant \"d:AddDoctorCommand\" as AddDoctorCommand LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"participant \":ClinicAssistant\" as ClinicAssistant MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"participant \":UniqueDoctorList\" as UniqueDoctorList MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"participant \":ObservableList\" as ObservableList MODEL_COLOR","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"end box","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"[-\u003e LogicManager : execute(\"add_Doctor /n Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"activate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add_Doctor /n Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"activate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"create AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"AddressBookParser -\u003e AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"activate AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorParser --\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"deactivate AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"AddressBookParser -\u003e  AddDoctorParser : parse(\"Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"activate  AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"create AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorParser -\u003e  AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"activate  AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorCommand --\u003e AddDoctorParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"deactivate   AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":" AddDoctorParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"deactivate  AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":" AddDoctorParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"destroy AddDoctorParser","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"LogicManager -\u003e  AddDoctorCommand : execute()","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"activate  AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorCommand -\u003e ModelManager : addDoctor(\"Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"activate ModelManager","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"ModelManager -\u003e ClinicAssistant : addDoctor(\"Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"activate ClinicAssistant","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"ClinicAssistant -\u003e UniqueDoctorList : addDoctor(\"Kevin\")","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"activate UniqueDoctorList","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"UniqueDoctorList -\u003e ObservableList : add()","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"activate ObservableList","lastModifiedDate":"2023-10-25"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"ObservableList --\u003e UniqueDoctorList","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"deactivate ObservableList","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"UniqueDoctorList --\u003e ClinicAssistant :","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"deactivate UniqueDoctorList","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"ClinicAssistant --\u003e ModelManager","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"deactivate ClinicAssistant","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"ModelManager --\u003e  AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"deactivate ModelManager","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"create CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorCommand -\u003e CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"activate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"CommandResult --\u003e  AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"AddDoctorCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"deactivate AddDoctorCommand","lastModifiedDate":"2023-10-25"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"@enduml","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Bryan-Goh":92}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(clinicAssistant)","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tohpinren":1,"-":38}},{"path":"docs/diagrams/DeleteCommandDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"participant \":ClinicAssistantParser\" as ClinicAssistantParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"participant \"model:ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"participant \":ClinicAssistant\" as ClinicAssistant MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"participant \":FilteredPersonList\" as FilteredPersonList MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"[-\u003e LogicManager : execute(\"delete 3\")","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"LogicManager -\u003e ClinicAssistantParser : parseCommand(\"delete 3\")","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"activate ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"ClinicAssistantParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"DeleteCommandParser --\u003e ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"ClinicAssistantParser -\u003e  DeleteCommandParser : parse(\"3\")","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"activate  DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"create DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"DeleteCommandParser -\u003e  DeleteCommand : new DeleteCommand(3)","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"activate  DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"deactivate   DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"DeleteCommandParser --\u003e ClinicAssistantParser : d","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"deactivate  DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"DeleteCommandParser -[hidden]-\u003e ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"ClinicAssistantParser --\u003e LogicManager : d","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"deactivate ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"LogicManager -\u003e  DeleteCommand : execute(m)","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"activate  DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"DeleteCommand -\u003e ModelManager : getFilteredPersonList()","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"activate ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"ModelManager -\u003e DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"deactivate ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"DeleteCommand -\u003e FilteredPersonList :get(3)","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"activate FilteredPersonList","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"FilteredPersonList --\u003e DeleteCommand : p","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"deactivate FilteredPersonList","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"DeleteCommand --\u003e ModelManager : deletePerson(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"activate ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"ModelManager --\u003e  ClinicAssistant :removePerson(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"activate ClinicAssistant","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"ClinicAssistant --\u003e UniquePersonList :remove(p)","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"activate UniquePersonList","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"UniquePersonList --\u003e ClinicAssistant","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"deactivate UniquePersonList","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"ClinicAssistant --\u003e ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"deactivate ClinicAssistant","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"ModelManager --\u003e DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"deactivate ModelManager","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"DeleteCommand -\u003e CommandResult: new CommandResult(DELETE_SUCCESS_MSG)","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"CommandResult --\u003e  DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"DeleteCommand --\u003e LogicManager : commandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"[\u003c--LogicManager : commandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"wj331":98}},{"path":"docs/diagrams/FindByNricSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"@startuml","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"!include style.puml","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"participant \":ClinicAssistantParser\" as ClinicAssistantParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"participant \":FindByNricCommandParser\" as FindByNricCommandParser LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"participant \":FindByNricCommand\" as FindByNricCommand LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"participant \"predicate:NricContainsKeywordPredicate\" as NricContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"participant \":FilteredList\" as FilteredList MODEL_COLOR","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"end box","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"[-\u003e LogicManager : execute(\"find_nric T0123456E\")","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"activate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"LogicManager -\u003e ClinicAssistantParser : parseCommand(\"find_nric T0123456E\")","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"activate ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"create FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"ClinicAssistantParser -\u003e FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"activate FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"FindByNricCommandParser --\u003e ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"deactivate FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"ClinicAssistantParser -\u003e FindByNricCommandParser : parse(\"T0123456E\")","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"activate FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"create FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"FindByNricCommandParser -\u003e FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"activate FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"FindByNricCommand --\u003e FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"deactivate FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"FindByNricCommandParser --\u003e ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"deactivate FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"FindByNricCommandParser -[hidden]-\u003e ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"destroy FindByNricCommandParser","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"ClinicAssistantParser --\u003e LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"deactivate ClinicAssistantParser","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"LogicManager -\u003e FindByNricCommand : execute()","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"activate FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"create NricContainsKeywordPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"FindByNricCommand -\u003e NricContainsKeywordPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"activate NricContainsKeywordPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"NricContainsKeywordPredicate --\u003e FindByNricCommand : predicate","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"deactivate NricContainsKeywordPredicate","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"FindByNricCommand -\u003e Model : updateFilterPersonList(predicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"activate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"Model -\u003e FilteredList : setPredicate(predicate)","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"activate FilteredList","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"FilteredList --\u003e Model","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"deactivate FilteredList","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"yezkez10"},"content":"Model --\u003e FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"deactivate Model","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"create CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"FindByNricCommand -\u003e CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"activate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"CommandResult --\u003e FindByNricCommand : result","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"deactivate CommandResult","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"FindByNricCommand --\u003e LogicManager : result","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"deactivate FindByNricCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"deactivate LogicManager","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"@enduml","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"yezkez10":85}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"# ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2324S1-CS2103T-W09-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S1-CS2103T-W09-3/tp/actions)","lastModifiedDate":"2023-09-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S1-CS2103T-W09-3/tp/graph/badge.svg?token\u003dE7O4JYRUM0)](https://codecov.io/gh/AY2324S1-CS2103T-W09-3/tp)","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"![Ui](images/AB3Ui.png)","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"**ClinicAssistant is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"* If you are interested in using ClinicAssistant, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"* If you are interested about developing ClinicAssistant, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tohpinren":4,"yezkez10":1,"-":16}},{"path":"docs/team/bryan-goh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"title: \"Bryan Goh\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"### Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dBryan-Goh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"* Implemented a delete appoinment command that deletes appointments made inside the software","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"* Implemented the backend and frontend of doctor Object","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"* Added Add Doctor command","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"* Added Delete Doctor command","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-10-03"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"* Contributes the Delete appointment and Add and Delete doctor command","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"* Added warnings for the use to be aware of in the ug","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-10-03"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"* Suggested future implementations of edit doctor","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"* Made the diagram for the implementation of add and delete doctor","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-10-03"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"* wrapped up and closed v1.2","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"* submitted the jar for v1.2","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"* closed and wrapped up v1.3","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-10-03"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"* helped reviewed the following PR\u0027s [Link1](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/104)","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"* helped reviewed 11 PR\u0027s [Link2](https://github.com/AY2324S1-CS2103T-W09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3A%40me)","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-10-03"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"* ","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"Bryan-Goh":34}},{"path":"docs/team/simbayippy.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"title: \"Yip Sin Hangs\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"### Code contributed","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dsimbayippy\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"**New Feature:** Implemented the Appointment class and introduced the add appointment feature (Pull","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"  request [#46](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/46/))","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"- What it does: Enables users to effortlessly schedule and track appointments for patients through a new `appt` command. Users specify key details such as description, date, and time of the appointment which enhancing the application\u0027s functionality.","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"- Justification: The new feature brings about user convenience, by simplifying the process of adding appointments with an easy-to-use command `appt`. This user-friendly approach enhances the overall usability of the application, allowing users to manage appointments seamlessly.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"**New Feature:** Implemented appointment editing capability (Pull request ","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"  [#57](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/57))","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"- What it does: Allows users to modify the details of an existing appointment through the `edit_appt` command. Users can specify the appointment index and update the description, date, or both.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"- Justification: This new feature brings about flexible appointment management, empowering users to adapt a patients appointments as needed by providing the ability to edit key details. This flexibility enhances the overall user experience and accommodates changes in scheduling or appointment information.","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"**New Feature:** Implemented finding appointment by patient\u0027s name (Pull Request","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"  [#72](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/72))","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"- What it does: Introduces the ability to filter the displayed appointment list based on a person\u0027s name through the `find_appt` command. Users can input a name, and the system will show only appointments associated with the specified person.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"- Justification: This feature brings about enhanced user visibility, by providing a targeted way to view appointments associated with a specific person. Users can easily focus on the relevant information, streamlining their interaction with the application.","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"### Enhancements implemented","lastModifiedDate":"2023-10-03"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"**Enhancements to existing features:** Fixed bugs coming from PE-D (Pull Request ","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"  [#166](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/166))","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"- Fixed a total of 16 bugs found from PE-D","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"- Primarily included UI bugs found due to interaction errors between editing of patients and their associated appointments/","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"- Fixed integration issues between classes of Doctor, Appointments and Timeslots.","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"- Fixed success message displayed for associated appointment commands of `appt` and `edit_appt`","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"### Contributions to the UG","lastModifiedDate":"2023-10-03"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"- Added and updated documentation for the features `appt`, `edit_appt`, `edit` `find_appt`. (Pull request [#110](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/110/)","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"### Contributions to the DG","lastModifiedDate":"2023-10-03"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"- Added documentation for `add`, `delete` and `edit_appt` feature. (Pull request [#102](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/102))","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"### Community","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"- Regularly reviewed teammates PR\u0027s, as well as highlighting of bugs and its appropriate fixes.","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"- Pull Requests reviewed: 30 [(Github)](https://github.com/AY2324S1-CS2103T-W09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Asimbayippy)","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"- Found and reported bugs for [CS2103T-W12-4](https://github.com/AY2324S1-CS2103T-W12-4/tp/issues) during PE-D","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"simbayippy":51}},{"path":"docs/team/tohpinren.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"title: \"Toh Pin Ren\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-03"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"### Code contributed","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"Code contributed: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dtohpinren\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"### Enhancements implemented","lastModifiedDate":"2023-10-03"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"**New Feature:** Implemented the `list_appt` command and created frontend for appointment list","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"- What it does: Enables users to see appointment list on the interface and list all appointments in the database through the `list_appt` command.","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"- Justification: The new frontend improves the user experience by allowing users to see the appointment list on the interface. The `list_appt` command allows users to list all appointments in the database easily.","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"**New Feature:** Implemented `find_appt` command by date or patient name","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"- What it does: Add on to the `find_appt` command to allow users to find appointments by date or patient name or both by adding parameters.","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"- Justification: This feature brings about enhanced user visibility, by providing a targeted way to view appointments associated with a specific person or date. Users can easily focus on the relevant information, streamlining their interaction with the application.","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"**New Feature:** Make appointment list always sorted by date","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"- What it does: Sorts the appointment list by date whenever the appointment list is displayed.","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"- Justification: This feature makes the interface more intuitive and user-friendly by always displaying the appointment list sorted by date which makes more sense to the user.","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"**New Feature:** Make `edit_appt` and `delete_appt` by index only","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"- What it does: Makes the `edit_appt` and `delete_appt` easier to use by only taking in the index of the appointment to be edited or deleted.","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"- Justification: This feature makes the commands more intuitive and user-friendly by making the `edit_appt` and `delete_appt` commands easier to use and less confusing for the user.","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"### Contributions to the UG","lastModifiedDate":"2023-10-03"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"- Adding pictures for examples of commands in the UG","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"- Steps for using the `list_appt` command","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"- Steps for using the `find_appt` command","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"### Contributions to the DG","lastModifiedDate":"2023-10-03"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"- Implementation of list_appt command and alternatives considered","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"- Implementation of find_appt command and alternatives considered","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"`to be added soon`","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"### Contributions to team-based tasks","lastModifiedDate":"2023-10-03"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"- Set up GitHub organisation and tP repo.","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"- Set up GitHub Actions and codecov for continuous integration.","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"- Set up original version of the team website.","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"### Review/mentoring contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"- Regularly reviewed teammates PR\u0027s, as well as highlighting of bugs and its appropriate fixes.","lastModifiedDate":"2023-11-10"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"- Pull Requests reviewed: 18 [(Github)](https://github.com/AY2324S1-CS2103T-W09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Atohpinren)","lastModifiedDate":"2023-11-10"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"### Contributions beyond the project team","lastModifiedDate":"2023-10-03"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"- Found and reported bugs for [CS2103T-W13-4](https://github.com/AY2324S1-CS2103T-W13-4/tp/issues) during PE-D","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-10-03"}],"authorContributionMap":{"tohpinren":63}},{"path":"docs/team/wj331.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"layout: default.md","lastModifiedDate":"2023-10-03"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"title: \"Niu Wenjia\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"---","lastModifiedDate":"2023-10-03"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"# Project: ClinicAssistant","lastModifiedDate":"2023-10-03"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"## Overview","lastModifiedDate":"2023-10-03"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-03"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"## Summary of Contributions","lastModifiedDate":"2023-10-03"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-03"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"### Code Contributed: [RepoSense Link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dwj331\u0026breakdown\u003dfalse\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-09-22\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos)","lastModifiedDate":"2023-10-03"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-03"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"### Enhancements implemented:","lastModifiedDate":"2023-10-03"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"**Feature enhancement:** Changed formatting and strings for `delete` command which deletes the person according to","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"`index` shown on list (Pull request [#41](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/41/))","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"- What it does: Enables users to delete patients based on the `index` of the patient they see on the patient list","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"- Justification: By allowing to delete by `index`, it is much more convenient for users as they do not have to type","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"  the full names of the patients. Furthermore, `index` on the list is unique while fields such as `name` is not","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"**New Feature:** Implemented the `Age`, `Gender` and `Ethnicity` class used for person\u0027s details (Pull","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"request [#51](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/51/))","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"- What it does: Users will now be able to easily store a patient\u0027s essential information","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"  such as `Age`, `Gender` and `Ethnicity`. This can help clinic staff to better identify patients\u0027 needs such as Gender or Age sensitive treatments","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"- Justification: `Age`, `Gender` and `Ethnicity` are essential fields which our group felt was essential clinic assistants","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"  to store which can be critical to their treatment. Hence, we have made them mandatory to be included in a patient\u0027s","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"  details so clinic assistants can have these fields at their disposal.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"**New Feature:** Implemented the `Timeslot` class used to represent timeslots in a day (Pull","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"request [#104](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/104/))","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"- What it does: Splits the opening hours of the clinic into fixed timeslots which can be used later to book appointments for","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"  patients. A Timeslot will have 2 fields: `date` and `hour` which represents the date and time of the Timeslot.","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"- Justification: Our team has agreed that the operating hours of the clinic will be from 09:00 to 17:00 everyday. To buffer for any","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"  overrun of appointments and give the doctor sufficient rest, the operating hours is divided into 1 hour timeslots","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"  that can be used by clinic assistants to book appointments.","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"**New Feature:** Implemented the `ViewAvailableCommand` class used to view all available timeslots for a date (Pull","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"request [#104](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/104/))","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"- What it does: Allows the user to be able to view all available timeslots for any date","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"  they want. Users can input the `date` which they want to view and instantly gets all available timeslots on that `date` and","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"  subsequently use it to book an appointment.","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"- Justification: Having a list of all booked appointments is good but not good enough for a clinic assistant. This command","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"  will help him/her to filter through all appointments for the date and return all available timeslots so that he/she can book the appointment","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"  in an instant.","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"### Contributions to the UG:","lastModifiedDate":"2023-10-03"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"* Updated UG for `delete` command to match UG to our product specifically","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"* Updated UG for `add` command to include new updates such as requiring `age`, `gender` and `ethnicity` when adding patient","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"* Added UG for `add_appt` (changed to appt later) command for adding appointments","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"* Added UG for `view` command for viewing available timeslots on a specific date","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"### Contributions to the DG:","lastModifiedDate":"2023-10-03"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"* Updated `delete` and `list`(changed to find afterwards) use cases in DG","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"* Added implementation details and consideration for `DeleteCommand` in DG","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"* Added `DeleteCommand` UML sequence diagram","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"* Add `viewAvailable timeslots` use cases in DG","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"* Added implementation details and consideration for `ViewAvailableCommand` in DG","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"### Contributions to team-based tasks:","lastModifiedDate":"2023-10-03"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"* Contributed some necessary renaming of the product from Address book 3 to ClinicAssistant","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"* Some reformatting of Strings and Names such as `person` to `patient`","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"* Fixing integration bugs from team members [PR](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/177)","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"* Most lines of code contributed in team [Reposense](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code\u0026since\u003d2023-09-22)","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"### Review/mentoring contributions:","lastModifiedDate":"2023-10-03"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"* Team accidentally merged PR which causes UI to fail to start but fixed in this PR [PR Link](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/83)","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"* Several other PRs which I approved [PR1](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/38) [PR2](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/46) [PR3](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/100) [PR4](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/112)","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"* Pull Requests reviewed: 25 [Pull Requests](https://github.com/AY2324S1-CS2103T-W09-3/tp/pulls?q\u003dis%3Apr+is%3Aclosed+reviewed-by%3Awj331)","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"### Contributions beyond the project team:","lastModifiedDate":"2023-10-03"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"* Found and reported high amount of bugs in PE-D (15 bugs) [Link](https://github.com/wj331/ped/issues/created_by/wj331)","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"wj331":76}},{"path":"docs/team/yezkez10.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"layout: default.md","lastModifiedDate":"2023-10-05"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"title: \"Joy Foo\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-10-05"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"---","lastModifiedDate":"2023-10-05"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"## Project: ClinicAssistant","lastModifiedDate":"2023-10-05"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"### Overview","lastModifiedDate":"2023-10-05"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"ClinicAssistant is a desktop application used by General Practitioner clinics\u0027 admin staff for patient contact management. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-10-05"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"### Summary of Contributions","lastModifiedDate":"2023-10-05"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-10-05"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"**Code contributed**: [RepoSense link](https://nus-cs2103-ay2324s1.github.io/tp-dashboard/?search\u003dyezkez10\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"**New Feature:** Added the NRIC field to Patient (Pull request [#39](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/39))","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"- What it does: attributes a unique NRIC to every patient","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"- Justification: This allows the user to identify each patient by their unique NRIC.","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"This is a better mode of identification than name since patients can have the same name, ","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"but no two patients can have the same NRIC.","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"- Highlights: The implementation of this enhancement affected existing commands and components. ","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"Its implementation required changes to other commands, parsers, testcases and the GUI.","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"This process required an in-depth understanding of the architecture and design.","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"**New Feature:** Added Find By NRIC feature (Pull request [#93](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/93))","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"  - What it does: Allows user to find patient details just by keying in their NRIC.","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"  - Justification: Every patient has a unique NRIC, hence this command will return at most 1 patient\u0027s details.","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"This is more helpful than the find by name feature since the latter could return more than 1 patient\u0027s details. ","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"**Enhancements implemented:**","lastModifiedDate":"2023-10-05"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"- Updated GUI formatting (Pull request [#111](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/111))","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"  - Updated layout of interface ","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"  - Compartmentalised Patients, Doctors, Appointments and Timeslots into individual tabs","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"  - Polished styling and GUI appearance","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"- Contributed to resolving bugs found in PED (Pull request [#171](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/171))","lastModifiedDate":"2023-11-09"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"**Enhancements to existing features:**","lastModifiedDate":"2023-10-05"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"- Updated test cases to increase coverage for existing features (Pull requests [#39](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/39),","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"  [#93](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/93), ","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"  [#174](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/174))","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"- Wrote additional tests for existing features to increase coverage","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"**Contributions to Documentation:**","lastModifiedDate":"2023-10-05"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"* User Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"  * Added and updated documentation for the features `add`, `find_nric`, `edit`.","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"    (Pull request [#31](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/31), ","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"    [#113](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/113))","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"* Developer Guide:","lastModifiedDate":"2023-10-05"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"  - Updated documentation for `add` feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"  - Added documentation and sequence diagram for `find_nric` feature. (Pull request [#100](https://github.com/AY2324S1-CS2103T-W09-3/tp/pull/100))","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"**Community**:","lastModifiedDate":"2023-10-05"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"* Reviewed and merged teammates\u0027 PRs.","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"* Reported bugs and suggestions for other teams in the class (examples: to be added soon)","lastModifiedDate":"2023-10-05"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-05"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"**Project management**:","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"- Managed release [v1.3](https://github.com/AY2324S1-CS2103T-W09-3/tp/releases/tag/v1.3) on Github","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"**Contributions beyond the project scope:**","lastModifiedDate":"2023-10-05"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"- Worked with the team to come up with an 18-minute product pitch, ","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"to market our product to a targeted audience. ","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"yezkez10":64}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"import seedu.address.storage.ClinicAssistantStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"import seedu.address.storage.JsonClinicAssistantStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistantStorage clinicAssistantStorage \u003d new JsonClinicAssistantStorage(","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"        storage \u003d new StorageManager(clinicAssistantStorage, userPrefsStorage);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"        logger.info(\"Using data file : \" + storage.getClinicAssistantFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        Optional\u003cReadOnlyClinicAssistant\u003e addressBookOptional;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"        ReadOnlyClinicAssistant initialData;","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"            addressBookOptional \u003d storage.readClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"                logger.info(\"Creating a new data file \" + storage.getClinicAssistantFilePath()","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"            logger.warning(\"Data file at \" + storage.getClinicAssistantFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"            initialData \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tohpinren":14,"-":173}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    ReadOnlyClinicAssistant getAddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments */","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    /** Returns an unmodifiable view of the filtered list of doctors */","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"    ObservableList\u003cTimeslot\u003e getTimeSlotsList();","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"wj331":2,"tohpinren":6,"-":48,"Bryan-Goh":4}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.parser.ClinicAssistantParser;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    private final ClinicAssistantParser clinicAssistantParser;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        clinicAssistantParser \u003d new ClinicAssistantParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        Command command \u003d clinicAssistantParser.parseCommand(commandText);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"            storage.saveClinicAssistant(model.getAddressBook());","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"        return model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"        return model.getFilteredDoctorList();","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"    public ObservableList\u003cTimeslot\u003e getTimeSlotsList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        return model.getAvailableTimeSlotList();","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wj331":5,"tohpinren":13,"-":81,"Bryan-Goh":7}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_AGE_SHOULD_BE_INTEGER \u003d \"Age entered should be an integer!\";","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX \u003d \"The doctor index provided is invalid\";","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_PATIENTS_FOUND_OVERVIEW \u003d \"%1$d patients found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_ONE_PATIENT_FOUND_OVERVIEW \u003d \"1 patient found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_NO_PATIENT_FOUND_OVERVIEW \u003d \"No patients found!\";","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_APPOINTMENTS_FOUND_OVERVIEW \u003d \"%1$d appointments found!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_ONE_APPOINTMENT_FOUND_OVERVIEW \u003d \"1 appointment found!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_NO_APPOINTMENTS_FOUND_OVERVIEW \u003d \"No appointments found!\";","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_AVAILABLE_TIMESLOTS_FOUND_OVERVIEW \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"            \"All Available Timeslot(s) on %tb %td, %tY Listed!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_NO_AVAILABLE_TIMESLOTS_OVERVIEW \u003d","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"            \"No Available Timeslots Available on %tb %td, %tY!\";","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"            \"The appointment index provided is invalid\";","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"DATE must be in format dd-MM-yyyy\";","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_DATE_DOES_NOT_EXIST \u003d \"DATE must be a valid date (correct date and month) \"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"            + \"that exists on the calendar!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_DATE_TOO_SHORT \u003d \"DATE entered is too short\";","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_PAST_DATE \u003d \"DATE entered has past already!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Phone: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"                .append(\" | Gender: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"                .append(person.getGender())","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"                .append(\" | Age: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"                .append(person.getAge())","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"                .append(\" | Ethnic: \")","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"                .append(person.getEthnic())","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"                .append(\" | NRIC: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"                .append(person.getNric())","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Address: \")","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"                .append(\" | Tags: \");","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"     * Formats the {@code doctor} for display to the user.","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"    public static String formatDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"        builder.append(doctor.getName())","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"                .append(\" | Phone: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"                .append(doctor.getPhone())","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"                .append(\" | Email: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"                .append(doctor.getEmail())","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"                .append(\" | Gender: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"                .append(doctor.getGender())","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"                .append(\" | Age: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"                .append(doctor.getAge())","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"                .append(\" | Address: \")","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"                .append(doctor.getAddress());","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"     * Formats the {@code address of the patient} for display to the user.","lastModifiedDate":"2023-10-17"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"     * @param appointment Appointment of the patient","lastModifiedDate":"2023-10-17"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"     * @return","lastModifiedDate":"2023-10-17"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"    public static String formatAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime dateTime \u003d appointment.getDateTime();","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu hh.mm a\");","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"        String formattedDateTime \u003d dateTime.format(formatter);","lastModifiedDate":"2023-11-07"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"        builder.append(\" Patient: \")","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"                .append(appointment.getPatientName())","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"                .append(\" | Description: \")","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"                .append(appointment.getDescription())","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"                .append(\" | Date: \")","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"                .append(formattedDateTime);","lastModifiedDate":"2023-11-07"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"        return builder.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":21,"wj331":18,"tohpinren":3,"yezkez10":10,"-":44,"Bryan-Goh":22}},{"path":"src/main/java/seedu/address/logic/commands/AddAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOC;","lastModifiedDate":"2023-11-01"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":" * A AppointmentAddCommand instance to add appointment to patients","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"public class AddAppointmentCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"    public static final String COMMAND_WORD \u003d \"appt\";","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"            + \": Adds a appointment to the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"            + \"Parameters: /for PATIENT_INDEX /doc DOCTOR_INDEX \"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"            + \"/d DESCRIPTION /on DATE_TIME\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_FOR + \"1 \"","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_DOC + \"1 \"","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DESCRIPTION + \"x-ray scan \"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \"02-01-2024 12:00\";","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_SAME_APPOINTMENT_TIME \u003d \"This patient already has \"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"            + \"an appointment at the same time.\";","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists for the patient.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT_DOCTOR \u003d \"This doctor already has \"","lastModifiedDate":"2023-11-01"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"            + \"an appointment at the same time.\";","lastModifiedDate":"2023-11-01"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"New appointment added |%1$s\";","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_TIMESLOT_TAKEN \u003d \"This timeslot is already taken by %1$s.\";","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    private final Index doctorIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    public AddAppointmentCommand(Index targetIndex, Index doctorIndex, String description, LocalDateTime dateTime) {","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        if (targetIndex \u003d\u003d null || description \u003d\u003d null || dateTime \u003d\u003d null || doctorIndex \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctorIndex \u003d doctorIndex;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e lastDoctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"        if (lastDoctorList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-01"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        if (doctorIndex.getZeroBased() \u003e\u003d lastDoctorList.size()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        Person targetPatient \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d lastDoctorList.get(doctorIndex.getZeroBased());","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        String name \u003d targetDoctor.getName().toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment toAdd \u003d new Appointment(description, dateTime, targetPatient, name);","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        if (targetPatient.hasAppointmentOnTimeslot(toAdd)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_SAME_APPOINTMENT_TIME);","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"        if (targetPatient.hasAppointment(toAdd)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        if (targetDoctor.hasAppointment(toAdd)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT_DOCTOR);","lastModifiedDate":"2023-11-01"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"        for (Doctor doctor : lastDoctorList) {","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"            if (doctor.equals(targetDoctor)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"                // skip if current doctor is target doctor","lastModifiedDate":"2023-11-07"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"                continue;","lastModifiedDate":"2023-11-07"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"            // checks if a doctor has an appointment on that timeslot already","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"            if (doctor.hasAppointmentOnTimeslot(dateTime)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"                throw new CommandException(String.format(MESSAGE_TIMESLOT_TAKEN, doctor.getName()));","lastModifiedDate":"2023-11-07"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"        targetPatient.addAppointment(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        targetDoctor.addAppointment(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"        model.addAppointment(toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        updateModelTimeslotList(model, toAdd);","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_APPOINTMENT_SUCCESS, Messages.formatAppointment(toAdd)));","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    private void updateModelTimeslotList(Model model, Appointment appointmentToAdd) {","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        if (model.getAvailableTimeSlotList().size() \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"            LocalDate apptDate \u003d appointmentToAdd.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"            LocalDate currDate \u003d model.getAvailableTimeSlotList().get(0).getDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"            if (apptDate.equals(currDate)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToRemove \u003d new Timeslot(appointmentToAdd.getDateTime().toLocalDate(),","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"                        appointmentToAdd.getDateTime().getHour());","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"                model.removeAvailableTimeSlot(timeslotToRemove);","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-12"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"        if (!(other instanceof AddAppointmentCommand)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":138,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand otherAddCommand \u003d (AddAppointmentCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"        return targetIndex.equals(otherAddCommand.targetIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 description.equals(otherAddCommand.description)","lastModifiedDate":"2023-11-02"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 dateTime.equals(otherAddCommand.dateTime);","lastModifiedDate":"2023-11-02"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"                .add(\"dateTime\", dateTime)","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"                .toString();","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":85,"wj331":18,"tohpinren":17,"Bryan-Goh":35}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book.\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"            + PREFIX_ETHNIC + \"ETHNICITY \"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            + PREFIX_AGE + \"22 \"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            + PREFIX_ETHNIC + \"Chinese \"","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_NRIC + \"T1234567E \"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_TAG + \" allergic to the sun \"","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"            + PREFIX_TAG + \" history of knee problems\";","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":2,"wj331":10,"yezkez10":3,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":" * Adds a Doctor to clinic assistant.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"public class AddDoctorCommand extends Command {","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String COMMAND_WORD \u003d \"add_doctor\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Doctor to clinic assistant. \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_GENDER + \"M \"","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_AGE + \"22 \"","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New Doctor added: %1$s\";","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_DUPLICATE_DOCTOR \u003d \"This Doctor already exists in the system\";","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"    private final Doctor toAdd;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates an AddDoctorCommand to add the specified {@code Doctor}","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    public AddDoctorCommand(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        toAdd \u003d doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        if (model.hasDoctor(toAdd)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        model.addDoctor(toAdd);","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.formatDoctor(toAdd)));","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":61}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        model.setAddressBook(new ClinicAssistant());","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tohpinren":2,"-":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":" * Deletes the appointment of an existing person in the address book.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommand extends Command {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String COMMAND_WORD \u003d \"delete_appt\";","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"            + \": Deletes the appointment identified \"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            + \"by the index number used in the displayed appointments list.\\n\"","lastModifiedDate":"2023-10-22"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_DELETE_APPOINTMENT_SUCCESS \u003d \"Deleted Appointment %1$s of %2$s\";","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    private static Logger logger \u003d Logger.getLogger(\"delete_appt\");","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    private final Index appointmentIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     * @param appointmentIndex Index of the appointment","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    public DeleteAppointmentCommand(Index appointmentIndex) {","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"        requireAllNonNull(appointmentIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        this.appointmentIndex \u003d appointmentIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"        List\u003cAppointment\u003e lastShownAppointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        int zeroBasedAppointmentIndex \u003d appointmentIndex.getZeroBased();","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        if (zeroBasedAppointmentIndex \u003e\u003d lastShownAppointmentList.size()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            logger.log(Level.WARNING, \"wrong index input\");","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        // Delete appointment from model and patient","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        Appointment appointmentToDelete \u003d lastShownAppointmentList.get(zeroBasedAppointmentIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"        Person patient \u003d appointmentToDelete.getPerson();","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        deletePatientAppointment(patient, appointmentToDelete);","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        model.deleteAppointment(appointmentToDelete);","lastModifiedDate":"2023-11-01"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"        //Delete appointment from doctor","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d getDoctor(doctorList, new Name(appointmentToDelete.getName()));","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        deleteDoctorAppointment(targetDoctor, appointmentToDelete);","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        //adding available timeslot back to list","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        updateModelTimeslotList(model, appointmentToDelete);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"                Messages.formatAppointment(appointmentToDelete), Messages.format(patient)));","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"    private void updateModelTimeslotList(Model model, Appointment appointmentToDelete) {","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        if (model.getAvailableTimeSlotList().size() \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"            LocalDate apptDate \u003d appointmentToDelete.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"            LocalDate currDate \u003d model.getAvailableTimeSlotList().get(0).getDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            if (apptDate.equals(currDate)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToAdd \u003d new Timeslot(apptDate, appointmentToDelete.getDateTime().getHour());","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"                model.addAvailableTimeSlot(timeslotToAdd);","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes the specified appointment inside patient.","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"    public void deletePatientAppointment(Person patient, Appointment appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"        int appointmentIndexInPatient \u003d patient.getAppointments().indexOf(appointment);","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        assert appointmentIndexInPatient \u003e -1 : \"index of patient should be positive integer\";","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        patient.deleteAppointment(appointmentIndexInPatient);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes appointments that is inside the Doctor object.","lastModifiedDate":"2023-11-10"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"    public void deleteDoctorAppointment(Doctor doctor, Appointment appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"        int appointmentIndexInDoctor \u003d doctor.getAppointments().indexOf(appointment);","lastModifiedDate":"2023-11-09"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"        assert appointmentIndexInDoctor \u003e -1 : \"index of doctor should be positive integer\";","lastModifiedDate":"2023-11-09"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"        doctor.deleteAppointment(appointmentIndexInDoctor);","lastModifiedDate":"2023-11-09"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor getDoctor(List\u003cDoctor\u003e doctorList, Name doctorName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"            if (doctor.getName().equals(doctorName)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"                targetDoctor \u003d doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        if (targetDoctor \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"        return targetDoctor;","lastModifiedDate":"2023-11-01"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        if (!(other instanceof DeleteAppointmentCommand)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"        DeleteAppointmentCommand otherDeleteApptCommand \u003d (DeleteAppointmentCommand) other;","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"        return appointmentIndex.equals(otherDeleteApptCommand.appointmentIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":2,"wj331":18,"tohpinren":13,"Bryan-Goh":101}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":" * Deletes a patient identified using its displayed index in the clinic records.","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"            + \": Deletes the patient with the index number used in the clinic records.\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            + \"Parameters: INDEX (must be a positive integer in the list)\\n\"","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted Person: %1$s from clinic records\";","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        ArrayList\u003cAppointment\u003e patientAppointments \u003d personToDelete.getAppointments();","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        for (Appointment appointment : patientAppointments) {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"            model.deleteAppointment(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"            Doctor targetDoctor \u003d targetDoctor(doctorList, appointment);","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"            int appointmentIndex \u003d targetDoctor.getAppointments().indexOf(appointment);","lastModifiedDate":"2023-11-01"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"            targetDoctor.deleteAppointment(appointmentIndex);","lastModifiedDate":"2023-11-01"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            updateModelTimeslotList(model, appointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, Messages.format(personToDelete)));","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    private void updateModelTimeslotList(Model model, Appointment appointment) {","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"        if (model.getAvailableTimeSlotList().size() \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"            LocalDate currDate \u003d model.getAvailableTimeSlotList().get(0).getDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"            LocalDate apptDate \u003d appointment.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"            if (apptDate.equals(currDate)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToAdd \u003d new Timeslot(apptDate, appointment.getDateTime().getHour());","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"                model.addAvailableTimeSlot(timeslotToAdd);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the doctor that contains the given appointment.","lastModifiedDate":"2023-11-01"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor targetDoctor(List\u003cDoctor\u003e doctorList, Appointment appointment) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"            if (doctor.hasAppointment(appointment)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"                targetDoctor \u003d doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        if (targetDoctor \u003d\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        return targetDoctor;","lastModifiedDate":"2023-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2023-07-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"wj331":22,"tohpinren":6,"-":64,"Bryan-Goh":24}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDoctorCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":" * Deletes a doctor identified using its displayed index in the clinic records.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteDoctorCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String COMMAND_WORD \u003d \"delete_doctor\";","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            + \": Deletes the doctor with the index number used in the clinic records.\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Parameters: INDEX (must be a positive integer in the list)\\n\"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MESSAGE_DELETE_DOCTOR_SUCCESS \u003d \"Deleted Doctor: %1$s from clinic records\";","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    public DeleteDoctorCommand(Index targetIndex) {","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d doctorList.size()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DOCTOR_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor doctorToDelete \u003d doctorList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        model.deleteDoctor(doctorToDelete);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        ArrayList\u003cAppointment\u003e doctorAppointments \u003d doctorToDelete.getAppointments();","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        for (Appointment appointment : doctorAppointments) {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"            model.deleteAppointment(appointment);","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            Person patient \u003d appointment.getPatient();","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"            int appointmentIndex \u003d patient.getAppointments().indexOf(appointment);","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"            assert appointmentIndex \u003e\u003d 0 : \"Index needs to be a positive interger\";","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"            patient.deleteAppointment(appointmentIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"            //only add to availableTimeslotList if list is same","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            updateModelTimeslotList(model, appointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_DOCTOR_SUCCESS, Messages.formatDoctor(doctorToDelete)));","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"     * Updates the Model timeslot list if it is initialised and date is same","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"     * @param model Model we are executing on","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"     * @param appointment Appointment we are updating with","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"    public void updateModelTimeslotList(Model model, Appointment appointment) {","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        if (model.getAvailableTimeSlotList().size() \u003e 0) {","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"            LocalDate currDate \u003d model.getAvailableTimeSlotList().get(0).getDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"            LocalDate apptDate \u003d appointment.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"            if (apptDate.equals(currDate)) { // only add if same date","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToAdd \u003d new Timeslot(apptDate, appointment.getDateTime().getHour());","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"                model.addAvailableTimeSlot(timeslotToAdd);","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        if (!(other instanceof DeleteDoctorCommand)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"            return false;","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteDoctorCommand otherDeleteDoctorCommand \u003d (DeleteDoctorCommand) other;","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        return targetIndex.equals(otherDeleteDoctorCommand.targetIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"                .toString();","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"simbayippy":1,"wj331":21,"Bryan-Goh":80}},{"path":"src/main/java/seedu/address/logic/commands/EditAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.AddAppointmentCommand.MESSAGE_DUPLICATE_APPOINTMENT_DOCTOR;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.AddAppointmentCommand.MESSAGE_SAME_APPOINTMENT_TIME;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.AddAppointmentCommand.MESSAGE_TIMESLOT_TAKEN;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPTS;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommand extends Command {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    public static final String COMMAND_WORD \u003d \"edit_appt\";","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"            + \": Edits the specified appointment identified \"","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"            + \"by the index number used in the displayed appointments list. \"","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DATE + \"DATE_TIME]\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \"01-01-2024 09:00\";","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_EDIT_APPOINTMENT_SUCCESS \u003d \"Newly edited appointment |%1$s\";","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided: \"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\"","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"            + \"[\" + PREFIX_DATE + \"DATE_TIME]\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"            + PREFIX_DATE + \"01-01-2024 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists for the patient.\";","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    private final Index appointmentIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    private final EditAppointmentDescriptor editAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-10-18"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"    public EditAppointmentCommand(Index apptIndex, EditAppointmentDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(apptIndex);","lastModifiedDate":"2023-10-18"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        this.appointmentIndex \u003d apptIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        this.editAppointmentDescriptor \u003d new EditAppointmentDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"        List\u003cAppointment\u003e appointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        int zeroBasedAppointmentIndex \u003d appointmentIndex.getZeroBased();","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        if (zeroBasedAppointmentIndex \u003e\u003d appointmentList.size() || zeroBasedAppointmentIndex \u003c 0) {","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_APPOINTMENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        // Create edited appointment","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        Appointment appointmentToEdit \u003d appointmentList.get(zeroBasedAppointmentIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"        Person patient \u003d appointmentToEdit.getPerson();","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d getDoctor(doctorList, new Name(appointmentToEdit.getName()));","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"        Appointment editedAppointment \u003d createEditedAppointment(appointmentToEdit, editAppointmentDescriptor,","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"                patient, targetDoctor.getName().toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"            if (doctor.equals(targetDoctor)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"                // skip if current doctor is target doctor","lastModifiedDate":"2023-11-07"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"                continue;","lastModifiedDate":"2023-11-07"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"            // checks if a doctor has an appointment on that timeslot already","lastModifiedDate":"2023-11-07"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"            if (doctor.hasAppointmentOnTimeslot(editedAppointment.getDateTime())) {","lastModifiedDate":"2023-11-07"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"                throw new CommandException(String.format(MESSAGE_TIMESLOT_TAKEN, doctor.getName()));","lastModifiedDate":"2023-11-07"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":95,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"        // if you are editing JUST time","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"        if (patient.hasAppointmentOnTimeslot(editedAppointment)","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"                \u0026\u0026 editAppointmentDescriptor.getDescription().isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_SAME_APPOINTMENT_TIME);","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"        if (appointmentToEdit.isSameAppointment(editedAppointment) \u0026\u0026 model.hasAppointment(editedAppointment)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"        // JUST editing time of appointment","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"        if (targetDoctor.hasAppointment(editedAppointment) \u0026\u0026 editAppointmentDescriptor.getDescription().isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT_DOCTOR);","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"        if (!editAppointmentDescriptor.getDescription().isEmpty() \u0026\u0026 targetDoctor.hasAppointment(editedAppointment)","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"                \u0026\u0026 !editAppointmentDescriptor.getDateTime().isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT_DOCTOR);","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"        // Update appointment in patient","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"        int appointmentIndexInPatient \u003d patient.getAppointments().indexOf(appointmentToEdit);","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"        patient.editAppointment(appointmentIndexInPatient, editedAppointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"        // update appointment in Doctor","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"        targetDoctor.editAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"        // Add available timeslot and remove previous timeslot IF model list same date","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        updateModelTimeslotList(model, appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"        model.setAppointment(appointmentToEdit, editedAppointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPTS);","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"                Messages.formatAppointment(editedAppointment)));","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"     * Updates the Timeslot list currently displayed in the model","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"     * @param model The model we are facing","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"     * @param appointmentToEdit Appointment instance we are editing from","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"     * @param editedAppointment Appointment instance we want to edit to","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"    public void updateModelTimeslotList(Model model, Appointment appointmentToEdit, Appointment editedAppointment) {","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        if (!(model.getAvailableTimeSlotList().size() \u003d\u003d 0)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"            LocalDate currDate \u003d model.getAvailableTimeSlotList().get(0).getDate();","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"            LocalDate prevApptDate \u003d appointmentToEdit.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"            LocalDate apptDate \u003d editedAppointment.getDateTime().toLocalDate();","lastModifiedDate":"2023-11-10"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"            if (prevApptDate.equals(currDate)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToAdd \u003d new Timeslot(prevApptDate, appointmentToEdit.getDateTime().getHour());","lastModifiedDate":"2023-11-10"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"                model.addAvailableTimeSlot(timeslotToAdd);","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"            if (apptDate.equals(currDate)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"                Timeslot timeslotToRemove \u003d new Timeslot(editedAppointment.getDateTime().toLocalDate(),","lastModifiedDate":"2023-10-31"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"                        editedAppointment.getDateTime().getHour());","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"                model.removeAvailableTimeSlot(timeslotToRemove);","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-01"},{"lineNumber":151,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns Doctor of the doctorList by the name of the doctor.","lastModifiedDate":"2023-11-01"},{"lineNumber":152,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-01"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor getDoctor(List\u003cDoctor\u003e doctorList, Name doctorName) {","lastModifiedDate":"2023-11-01"},{"lineNumber":154,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d null;","lastModifiedDate":"2023-11-01"},{"lineNumber":155,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-11-01"},{"lineNumber":156,"author":{"gitId":"Bryan-Goh"},"content":"            if (doctor.getName().equals(doctorName)) {","lastModifiedDate":"2023-11-01"},{"lineNumber":157,"author":{"gitId":"Bryan-Goh"},"content":"                targetDoctor \u003d doctor;","lastModifiedDate":"2023-11-01"},{"lineNumber":158,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-11-01"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-11-01"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"        if (targetDoctor \u003d\u003d null) {","lastModifiedDate":"2023-11-01"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-11-01"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-01"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"        return targetDoctor;","lastModifiedDate":"2023-11-01"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":167,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"simbayippy"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"simbayippy"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"    private static Appointment createEditedAppointment(Appointment apptToEdit, EditAppointmentDescriptor editApptDesc,","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"                                                       Person editedPerson, String doctorName) {","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"simbayippy"},"content":"        assert apptToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"        String updatedDescription \u003d editApptDesc.getDescription().orElse(apptToEdit.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime updatedDateTime \u003d editApptDesc.getDateTime().orElse(apptToEdit.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"        return new Appointment(updatedDescription, updatedDateTime, editedPerson, doctorName);","lastModifiedDate":"2023-10-30"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":180,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":181,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":187,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof EditAppointmentCommand)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand otherEditAppointmentCommand \u003d (EditAppointmentCommand) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"        return appointmentIndex.equals(otherEditAppointmentCommand.appointmentIndex)","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"                \u0026\u0026 editAppointmentDescriptor.equals(otherEditAppointmentCommand.editAppointmentDescriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"                .add(\"appointmentIndex\", appointmentIndex)","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"                .add(\"editAppointmentDescriptor\", editAppointmentDescriptor)","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"     * Stores the Appointment to edit the patient with. Each non-empty field value will replace the","lastModifiedDate":"2023-10-18"},{"lineNumber":207,"author":{"gitId":"simbayippy"},"content":"     * corresponding field value of the patient.","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"simbayippy"},"content":"    public static class EditAppointmentDescriptor {","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"simbayippy"},"content":"        private String description;","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"simbayippy"},"content":"        private LocalDateTime dateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"simbayippy"},"content":"        private Person patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":213,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":214,"author":{"gitId":"simbayippy"},"content":"        public EditAppointmentDescriptor() {}","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"simbayippy"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":217,"author":{"gitId":"simbayippy"},"content":"         * Copy constructor.","lastModifiedDate":"2023-10-18"},{"lineNumber":218,"author":{"gitId":"simbayippy"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":219,"author":{"gitId":"simbayippy"},"content":"        public EditAppointmentDescriptor(EditAppointmentDescriptor toCopy) {","lastModifiedDate":"2023-10-18"},{"lineNumber":220,"author":{"gitId":"simbayippy"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2023-10-18"},{"lineNumber":221,"author":{"gitId":"simbayippy"},"content":"            setDateTime(toCopy.dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":222,"author":{"gitId":"simbayippy"},"content":"            setPatient(toCopy.patient);","lastModifiedDate":"2023-10-22"},{"lineNumber":223,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":224,"author":{"gitId":"simbayippy"},"content":"        /**","lastModifiedDate":"2023-10-18"},{"lineNumber":225,"author":{"gitId":"simbayippy"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-10-18"},{"lineNumber":226,"author":{"gitId":"simbayippy"},"content":"         */","lastModifiedDate":"2023-10-18"},{"lineNumber":227,"author":{"gitId":"simbayippy"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-10-18"},{"lineNumber":228,"author":{"gitId":"simbayippy"},"content":"            return CollectionUtil.isAnyNonNull(description, dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":229,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":230,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":231,"author":{"gitId":"simbayippy"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2023-10-18"},{"lineNumber":232,"author":{"gitId":"simbayippy"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":233,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":234,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":235,"author":{"gitId":"simbayippy"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2023-10-18"},{"lineNumber":236,"author":{"gitId":"simbayippy"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2023-10-18"},{"lineNumber":237,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":238,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":239,"author":{"gitId":"simbayippy"},"content":"        public void setDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-18"},{"lineNumber":240,"author":{"gitId":"simbayippy"},"content":"            this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":241,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":242,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":243,"author":{"gitId":"simbayippy"},"content":"        public Optional\u003cLocalDateTime\u003e getDateTime() {","lastModifiedDate":"2023-10-18"},{"lineNumber":244,"author":{"gitId":"simbayippy"},"content":"            return Optional.ofNullable(dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":245,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":246,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":247,"author":{"gitId":"simbayippy"},"content":"        public void setPatient(Person patient) {","lastModifiedDate":"2023-10-22"},{"lineNumber":248,"author":{"gitId":"simbayippy"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":249,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":250,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":251,"author":{"gitId":"simbayippy"},"content":"        public Optional\u003cPerson\u003e getPatient() {","lastModifiedDate":"2023-10-22"},{"lineNumber":252,"author":{"gitId":"simbayippy"},"content":"            return Optional.ofNullable(patient);","lastModifiedDate":"2023-10-22"},{"lineNumber":253,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":254,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":255,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":256,"author":{"gitId":"simbayippy"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-10-18"},{"lineNumber":257,"author":{"gitId":"simbayippy"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-18"},{"lineNumber":258,"author":{"gitId":"simbayippy"},"content":"                return true;","lastModifiedDate":"2023-10-18"},{"lineNumber":259,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":260,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":261,"author":{"gitId":"simbayippy"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-10-18"},{"lineNumber":262,"author":{"gitId":"simbayippy"},"content":"            if (!(other instanceof EditAppointmentCommand.EditAppointmentDescriptor)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":263,"author":{"gitId":"simbayippy"},"content":"                return false;","lastModifiedDate":"2023-10-18"},{"lineNumber":264,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":265,"author":{"gitId":"simbayippy"},"content":"            EditAppointmentCommand.EditAppointmentDescriptor otherAppointmentDescriptor \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":266,"author":{"gitId":"simbayippy"},"content":"                    (EditAppointmentCommand.EditAppointmentDescriptor) other;","lastModifiedDate":"2023-10-18"},{"lineNumber":267,"author":{"gitId":"simbayippy"},"content":"            return Objects.equals(description, otherAppointmentDescriptor.description)","lastModifiedDate":"2023-10-18"},{"lineNumber":268,"author":{"gitId":"simbayippy"},"content":"                    \u0026\u0026 Objects.equals(dateTime, otherAppointmentDescriptor.dateTime);","lastModifiedDate":"2023-10-18"},{"lineNumber":269,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":270,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":271,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-10-18"},{"lineNumber":272,"author":{"gitId":"simbayippy"},"content":"        public String toString() {","lastModifiedDate":"2023-10-18"},{"lineNumber":273,"author":{"gitId":"simbayippy"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":274,"author":{"gitId":"simbayippy"},"content":"                    .add(\"description\", description)","lastModifiedDate":"2023-10-18"},{"lineNumber":275,"author":{"gitId":"simbayippy"},"content":"                    .add(\"dateTime\", dateTime)","lastModifiedDate":"2023-10-18"},{"lineNumber":276,"author":{"gitId":"simbayippy"},"content":"                    .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":277,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":278,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":279,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":207,"wj331":32,"tohpinren":15,"Bryan-Goh":25}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_AGE + \"AGE] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            + \"[\" + PREFIX_ETHNIC + \"ETHNIC] \"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d model.getFilteredDoctorList();","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"        // Retrieve appointments associated with the person","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e personAppointments \u003d personToEdit.getAppointments();","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        // Create a list to store edited appointments","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e updatedAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"        updateAppointment(personAppointments, editedPerson, doctorList, updatedAppointments);","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        editedPerson.setAppointments(updatedAppointments);","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        model.editedPersonAppointments(personAppointments, updatedAppointments);","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2023-11-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"     * Updates the appointments inside patient and appointments inside doctors.","lastModifiedDate":"2023-11-10"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"    public void updateAppointment(ArrayList\u003cAppointment\u003e personAppointments, Person editedPerson,","lastModifiedDate":"2023-11-10"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"                                  List\u003cDoctor\u003e doctorList, ArrayList\u003cAppointment\u003e updatedAppointments) {","lastModifiedDate":"2023-11-10"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"        for (Appointment appointment : personAppointments) {","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"simbayippy"},"content":"            // Create a new appointment with the edited person details","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"            Appointment editedAppointment \u003d new Appointment(appointment.getDescription(), appointment.getDateTime(),","lastModifiedDate":"2023-11-10"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"                    editedPerson, appointment.getName());","lastModifiedDate":"2023-11-10"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"            updateDoctorAppointment(doctorList, appointment, editedAppointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"            updatedAppointments.add(editedAppointment);","lastModifiedDate":"2023-11-10"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-11-10"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"     * Updates the appointment inside a doctor.","lastModifiedDate":"2023-11-10"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-11-10"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"    public void updateDoctorAppointment(List\u003cDoctor\u003e doctorList, Appointment appointment,","lastModifiedDate":"2023-11-10"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"                                        Appointment editedAppointment) {","lastModifiedDate":"2023-11-10"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d getDoctor(doctorList, new Name(appointment.getName()));","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"        ArrayList\u003cAppointment\u003e updatedDoctorAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"        int count \u003d 0;","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"        for (Appointment doctorAppointment : targetDoctor.getAppointments()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"            if (appointment.equals(doctorAppointment)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"                updatedDoctorAppointments.add(editedAppointment);","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"                count++;","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"            } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"                updatedDoctorAppointments.add(doctorAppointment);","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"        targetDoctor.setAppointments(updatedDoctorAppointments);","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"wj331"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"wj331"},"content":"        Age updatedAge \u003d editPersonDescriptor.getAge().orElse(personToEdit.getAge());","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"wj331"},"content":"        Ethnicity updatedEthnic \u003d editPersonDescriptor.getEthnic().orElse(personToEdit.getEthnic());","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"wj331"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedGender, updatedAge, updatedEthnic,","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"wj331"},"content":"                updatedNric, updatedAddress, updatedTags);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor getDoctor(List\u003cDoctor\u003e doctorList, Name doctorName) {","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor targetDoctor \u003d null;","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"            if (doctor.getName().equals(doctorName)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"                targetDoctor \u003d doctor;","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"                break;","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"        if (targetDoctor \u003d\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"            throw new RuntimeException();","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"        return targetDoctor;","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"        private Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":215,"author":{"gitId":"wj331"},"content":"        private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":216,"author":{"gitId":"wj331"},"content":"        private Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"yezkez10"},"content":"        private Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":231,"author":{"gitId":"wj331"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":232,"author":{"gitId":"wj331"},"content":"            setAge(toCopy.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":233,"author":{"gitId":"wj331"},"content":"            setEthnic(toCopy.ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":234,"author":{"gitId":"yezkez10"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"yezkez10"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, age, gender, ethnic, address, nric, tags);","lastModifiedDate":"2023-11-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"wj331"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"wj331"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":271,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":272,"author":{"gitId":"wj331"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-10-15"},{"lineNumber":273,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":274,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":275,"author":{"gitId":"wj331"},"content":"        public void setAge(Age age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":276,"author":{"gitId":"wj331"},"content":"            this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":277,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":278,"author":{"gitId":"wj331"},"content":"        public Optional\u003cAge\u003e getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":279,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":280,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":281,"author":{"gitId":"wj331"},"content":"        public void setEthnic(Ethnicity ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":282,"author":{"gitId":"wj331"},"content":"            this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":283,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":284,"author":{"gitId":"wj331"},"content":"        public Optional\u003cEthnicity\u003e getEthnic() {","lastModifiedDate":"2023-10-15"},{"lineNumber":285,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":286,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":288,"author":{"gitId":"yezkez10"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":289,"author":{"gitId":"yezkez10"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":290,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":291,"author":{"gitId":"wj331"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-10-15"},{"lineNumber":292,"author":{"gitId":"wj331"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-10-15"},{"lineNumber":293,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":311,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":312,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":313,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":314,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":322,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":325,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":327,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":331,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":333,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":334,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(gender, otherEditPersonDescriptor.gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":335,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(age, otherEditPersonDescriptor.age)","lastModifiedDate":"2023-10-15"},{"lineNumber":336,"author":{"gitId":"wj331"},"content":"                    \u0026\u0026 Objects.equals(ethnic, otherEditPersonDescriptor.ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":337,"author":{"gitId":"yezkez10"},"content":"                    \u0026\u0026 Objects.equals(nric, otherEditPersonDescriptor.nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":338,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":339,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":348,"author":{"gitId":"wj331"},"content":"                    .add(\"gender\", gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":349,"author":{"gitId":"wj331"},"content":"                    .add(\"age\", age)","lastModifiedDate":"2023-10-15"},{"lineNumber":350,"author":{"gitId":"wj331"},"content":"                    .add(\"ethnic\", ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":351,"author":{"gitId":"yezkez10"},"content":"                    .add(\"nric\", nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":352,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"simbayippy":10,"wj331":48,"yezkez10":11,"-":243,"Bryan-Goh":45}},{"path":"src/main/java/seedu/address/logic/commands/FindAppointmentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":" * Finds and lists all Appointments in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"public class FindAppointmentsCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    public static final String COMMAND_WORD \u003d \"find_appt\";","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all appointments\"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"            + \" with patient name by keywords (case-insensitive) or date and displays them as a list with index \"","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"            + \"numbers.\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            + \"Parameters: [\"","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            + PREFIX_NAME","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"            + \"KEYWORD [MORE_KEYWORDS]...]\"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            + \"[\"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"            + PREFIX_DATE","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"            + \"DATE]\\n\"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"alice bob charlie \" + PREFIX_DATE + \"01-01-2024\";","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    private final Predicate\u003cAppointment\u003e predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    public FindAppointmentsCommand(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        int numberOfAppointmentsFound \u003d model.getFilteredAppointmentList().size();","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        if (numberOfAppointmentsFound \u003d\u003d 0) {","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"            return new CommandResult(Messages.MESSAGE_NO_APPOINTMENTS_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"        } else if (numberOfAppointmentsFound \u003d\u003d 1) {","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"            return new CommandResult(Messages.MESSAGE_ONE_APPOINTMENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        } else {","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"                    String.format(Messages.MESSAGE_APPOINTMENTS_FOUND_OVERVIEW,","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"                            model.getFilteredAppointmentList().size()));","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        if (!(other instanceof FindAppointmentsCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        FindAppointmentsCommand otherFindCommand \u003d (FindAppointmentsCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"                .toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"simbayippy":59,"tohpinren":18}},{"path":"src/main/java/seedu/address/logic/commands/FindByNricCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.NricContainsKeywordPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":" * Finds and lists all persons in address book whose NRIC equals the argument keywords.","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"public class FindByNricCommand extends Command {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"    public static final String COMMAND_WORD \u003d \"find_nric\";","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose NRIC matches \"","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"            + \"the specified NRIC (case-insensitive)\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"            + \"Parameters: NRIC\\n\"","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"            + \"Example: \" + COMMAND_WORD + \" T1234567E\";","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    private final NricContainsKeywordPredicate predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"    public FindByNricCommand(NricContainsKeywordPredicate predicate) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"        int numberOfPatientsFound \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"        if (numberOfPatientsFound \u003d\u003d 0) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"        } else if (numberOfPatientsFound \u003d\u003d 1) {","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"            return new CommandResult(Messages.MESSAGE_ONE_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"            return new CommandResult(","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"                    String.format(Messages.MESSAGE_PATIENTS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        if (!(other instanceof FindByNricCommand)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand otherFindCommand \u003d (FindByNricCommand) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yezkez10":66}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patients whose names contain any of \"","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        int numberOfPatientsFound \u003d model.getFilteredPersonList().size();","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        if (numberOfPatientsFound \u003d\u003d 0) {","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"            return new CommandResult(Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        } else if (numberOfPatientsFound \u003d\u003d 1) {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"            return new CommandResult(Messages.MESSAGE_ONE_PATIENT_FOUND_OVERVIEW);","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        } else {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                    String.format(Messages.MESSAGE_PATIENTS_FOUND_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tohpinren":10,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/ListAppointmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"public class ListAppointmentCommand extends Command {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    public static final String COMMAND_WORD \u003d \"list_appt\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all appointments\";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":24}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tohpinren":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/ViewAvailableCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":" * A ViewAvailableCommand instance which user can use to view available timeslot on a specified date","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"public class ViewAvailableCommand extends Command {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            + \": Displays all the available timeslot on given DATE.\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"            + \"Parameters: DATE (must be given in dd-MM-yyyy exactly).\\n\"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            + \"Example: \" + COMMAND_WORD + \" /on 01-02-2024\";","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    private static Logger logger \u003d Logger.getLogger(\"ViewAvailableCommandLogger\");","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private Predicate\u003cTimeslot\u003e predicate;","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    private Predicate\u003cAppointment\u003e apptPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    private LocalDate dateEntered;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"     * Constructor for ViewAvailableCommand class","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"     * @param predicate A predicate instance for timeslot","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"     * @param apptPredicate A predicate instance for appointments","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"     * @param dateEntered Date which the user specified","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public ViewAvailableCommand(Predicate\u003cTimeslot\u003e predicate, Predicate\u003cAppointment\u003e apptPredicate,","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"                                LocalDate dateEntered) {","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        this.apptPredicate \u003d apptPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        this.dateEntered \u003d dateEntered;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        model.resetAvailableTimeSlot();","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        model.updateFilteredAppointmentList(apptPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        ObservableList\u003cAppointment\u003e appointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        requireNonNull(appointmentList);","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        Set\u003cInteger\u003e unavailableTimeslots \u003d populateUnavailableTimeslot(appointmentList);","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        addAvailableTimeslotsToModel(unavailableTimeslots, model);","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        logger.log(Level.INFO,","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"                \"ViewAvailableCommand:: current available timeslots: \" + model.getAvailableTimeSlotList());","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        boolean emptyList \u003d model.getAvailableTimeSlotList().size() \u003d\u003d 0;","lastModifiedDate":"2023-11-10"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        if (emptyList) {","lastModifiedDate":"2023-11-10"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"            logger.log(Level.WARNING, \"No available timeslots!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_NO_AVAILABLE_TIMESLOTS_OVERVIEW,","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"                    dateEntered, dateEntered, dateEntered));","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        // Return success command in command prompt","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_AVAILABLE_TIMESLOTS_FOUND_OVERVIEW,","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"                dateEntered, dateEntered, dateEntered));","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"     * Adds unavailable timeslots to the empty hashset based on present appointments","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"     * @param appointmentList ObservableList of all appointments already made","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"     * @return Set of Integer of unavailable timings","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"    public Set\u003cInteger\u003e populateUnavailableTimeslot(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        Set\u003cInteger\u003e unavailableTimeslots \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"        for (int i \u003d 0; i \u003c appointmentList.size(); i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"            Appointment currAppt \u003d appointmentList.get(i);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            unavailableTimeslots.add(currAppt.getDateTime().getHour());","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        logger.log(Level.INFO, \"Finished populating unavailable timeslots!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        return unavailableTimeslots;","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"     * Adds available timeslots to the model","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"     * @param unavailableTimeslots Set of unavailable timings from previous method","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"     * @param model Current model we have","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeslotsToModel(Set\u003cInteger\u003e unavailableTimeslots, Model model) {","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"        for (int i \u003d 9; i \u003c 18; i++) {","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"            if (unavailableTimeslots.contains(i)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"                continue;","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"            Timeslot timeslot \u003d new Timeslot(dateEntered, i);","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"            model.addAvailableTimeSlot(timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"        logger.log(Level.INFO, \"Finished adding available timeslots to model!\");","lastModifiedDate":"2023-11-10"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof ViewAvailableCommand)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand otherViewCommand \u003d (ViewAvailableCommand) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        return predicate.equals(otherViewCommand.predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":120,"yezkez10":1}},{"path":"src/main/java/seedu/address/logic/parser/AddAppointmentParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOC;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FOR;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":" * Parses input arguments and creates a new {@code AppointmentAddCommand} objectg","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"public class AddAppointmentParser implements Parser\u003cAddAppointmentCommand\u003e {","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    public AddAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FOR, PREFIX_DOC, PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-11-01"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"                PREFIX_GENDER, PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_FOR, PREFIX_DOC, PREFIX_DESCRIPTION, PREFIX_DATE)","lastModifiedDate":"2023-11-01"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"                    AddAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        Index patientIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_FOR).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        Index doctorIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_DOC).get());","lastModifiedDate":"2023-11-01"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"        String description \u003d argMultimap.getValue(PREFIX_DESCRIPTION).get();","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime dateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        return new AddAppointmentCommand(patientIndex, doctorIndex, description, dateTime);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":29,"wj331":15,"tohpinren":4,"yezkez10":6,"Bryan-Goh":5}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"                    PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_AGE,","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"                PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                PREFIX_GENDER, PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC)","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        Ethnicity ethnicity \u003d ParserUtil.parseEthnic(argMultimap.getValue(PREFIX_ETHNIC).get());","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        Person person \u003d new Person(name, phone, email, gender, age, ethnicity, nric, address, tagList);","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"wj331":16,"yezkez10":4,"-":57}},{"path":"src/main/java/seedu/address/logic/parser/AddDoctorParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":" * Parses input arguments and creates a new AddDoctorCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"public class AddDoctorParser implements Parser\u003cAddDoctorCommand\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    public AddDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_AGE,","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"                         PREFIX_ADDRESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER, PREFIX_AGE,","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"                PREFIX_ADDRESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"                PREFIX_GENDER, PREFIX_AGE)","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDoctorCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor doctor \u003d new Doctor(name, phone, email, gender, age, address);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        return new AddDoctorCommand(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":65}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"/n \");","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"/p \");","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"/e \");","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"/ic \");","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"/g \");","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"/age \");","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public static final Prefix PREFIX_ETHNIC \u003d new Prefix(\"/eth \");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"/a \");","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"/t\");","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_FOR \u003d new Prefix(\"/for \");","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Prefix PREFIX_DOC \u003d new Prefix(\"/doc \");","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"/d \");","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Prefix PREFIX_APPOINTMENT \u003d new Prefix(\"/appt \");","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"/on \");","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"simbayippy":3,"wj331":4,"yezkez10":6,"-":10,"Bryan-Goh":2}},{"path":"src/main/java/seedu/address/logic/parser/ClinicAssistantParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.AddAppointmentCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.AddDoctorCommand;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.FindAppointmentsCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"import seedu.address.logic.commands.FindByNricCommand;","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.ListAppointmentCommand;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.commands.ViewAvailableCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"public class ClinicAssistantParser {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ClinicAssistantParser.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"        case FindByNricCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"            return new FindByNricCommandParser().parse(arguments);","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"        case ListAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"            return new ListAppointmentCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"        case AddAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"            return new AddAppointmentParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"        case DeleteAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"            return new DeleteAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        case EditAppointmentCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"            return new EditAppointmentCommandParser().parse(arguments);","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"        case FindAppointmentsCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"            return new FindAppointmentsCommandParser().parse(arguments);","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"        case AddDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"            return new AddDoctorParser().parse(arguments);","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        case DeleteDoctorCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"            return new DeleteDoctorParser().parse(arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"        case ViewAvailableCommand.COMMAND_WORD:","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"            return new ViewAvailableCommandParser().parse(arguments);","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":7,"wj331":4,"tohpinren":11,"yezkez10":3,"-":85,"Bryan-Goh":12}},{"path":"src/main/java/seedu/address/logic/parser/DeleteAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":" * Parses input arguments and creates a new {@code DeleteAppointmentCommand} object","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommandParser implements Parser\u003cDeleteAppointmentCommand\u003e {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DeleteAppointmentCommand}","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * and returns a {@code DeleteAppointmentCommand} object for execution.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public DeleteAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args);","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"        Index appointmentIndex;","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"            appointmentIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"                    DeleteAppointmentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        return new DeleteAppointmentCommand(appointmentIndex);","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"tohpinren":4,"Bryan-Goh":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"            Index index \u003d ParserUtil.parseDeleteIndex(args); //parseIndex throws NumberFormat if it is a string","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            //throws ParseException if it is a non-positive number","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"            if (e.getMessage().equals(\"String is empty!\")) {","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wj331":7,"-":25}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDoctorParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteDoctorCommand;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":" * Parses input arguments and creates a new DeleteDoctorCommand object","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteDoctorParser implements Parser\u003cDeleteDoctorCommand\u003e {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"    public DeleteDoctorCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"            return new DeleteDoctorCommand(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDoctorCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"Bryan-Goh":29}},{"path":"src/main/java/seedu/address/logic/parser/EditAppointmentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommandParser implements Parser\u003cEditAppointmentCommand\u003e {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code EditAppointmentCommand}","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"     * and returns a {@code EditAppointmentCommand} object for execution.","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"        Index appointmentIndex;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"        try {","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            appointmentIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"                    EditAppointmentCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DESCRIPTION, PREFIX_DATE);","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor editAppointmentDescriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"            editAppointmentDescriptor.setDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"            editAppointmentDescriptor.setDateTime(ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"        if (!editAppointmentDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"            throw new ParseException(EditAppointmentCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        return new EditAppointmentCommand(appointmentIndex, editAppointmentDescriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":51,"tohpinren":3}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"                        PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_GENDER,","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"                PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC, PREFIX_ADDRESS);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"yezkez10"},"content":"        if (argMultimap.getValue(PREFIX_AGE).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"            editPersonDescriptor.setAge(ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"        if (argMultimap.getValue(PREFIX_ETHNIC).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"            editPersonDescriptor.setEthnic(ParserUtil.parseEthnic(argMultimap.getValue(PREFIX_ETHNIC).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"wj331":1,"yezkez10":20,"-":85}},{"path":"src/main/java/seedu/address/logic/parser/FindAppointmentsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.FindAppointmentsCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.NameContainsKeywordsApptPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.OnDateTimeApptPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"public class FindAppointmentsCommandParser implements Parser\u003cFindAppointmentsCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    public FindAppointmentsCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"        // Check if required arguments are present","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isEmpty() \u0026\u0026 argMultimap.getValue(PREFIX_DATE).isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"                    FindAppointmentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        // Check if there are any duplicate prefixes","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DATE);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        Predicate\u003cAppointment\u003e predicate \u003d null;","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"            String namesStr \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"            if (namesStr.isEmpty() || namesStr.equals(\"/on\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                        FindAppointmentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"            String[] nameKeywords \u003d namesStr.split(\"\\\\s+\");","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"            predicate \u003d new NameContainsKeywordsApptPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"            String dateStr \u003d argMultimap.getValue(PREFIX_DATE).get().trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"            if (dateStr.isEmpty() || dateStr.equals(\"/n\")) {","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"                        FindAppointmentsCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"            LocalDate date \u003d ParserUtil.parseDate(dateStr);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"            if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"                predicate \u003d new OnDateTimeApptPredicate(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"            } else {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"                predicate \u003d predicate.and(new OnDateTimeApptPredicate(date));","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        return new FindAppointmentsCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"tohpinren":75}},{"path":"src/main/java/seedu/address/logic/parser/FindByNricCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import seedu.address.logic.commands.FindByNricCommand;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.NricContainsKeywordPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":" * Parses input arguments and creates a new FindByNricCommand object","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"public class FindByNricCommandParser implements Parser\u003cFindByNricCommand\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"     * Parses the given {@code String} argument in the context of the FindByNricCommand","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"     * and returns a FindByNricCommand object for execution.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"    public FindByNricCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"        String trimmedArg \u003d args.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"        if (trimmedArg.isEmpty()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByNricCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"        if (!Nric.isValidNric(trimmedArg.toUpperCase())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"            throw new ParseException(","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"        return new FindByNricCommand(new NricContainsKeywordPredicate(trimmedArg));","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yezkez10":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_AGE_SHOULD_BE_INTEGER;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"INDEX entered must be an integer!.\";","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_INDEX_TOO_SMALL \u003d \"INDEX should be a positive integer!\";","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"     * trimmed. This is specifically used for DeleteCommand.","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the specified index is invalid (less than 1 or not an integer).","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    public static Index parseDeleteIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        if (trimmedIndex.isEmpty()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            throw new ParseException(\"String is empty!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        int index;","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            index \u003d Integer.parseInt(trimmedIndex);","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"            throw new ParseException(MESSAGE_INDEX_TOO_SMALL);","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        return Index.fromOneBased(index);","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"        if (trimmedName.equals(\"\") || !Name.isValidName(trimmedName)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        if (trimmedPhone.equals(\"\") || !Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"yezkez10"},"content":"     * Parses a {@code String nric} into a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"yezkez10"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"yezkez10"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"yezkez10"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-10-11"},{"lineNumber":107,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"yezkez10"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"yezkez10"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"yezkez10"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"yezkez10"},"content":"        String allCapsNric \u003d trimmedNric.toUpperCase();","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        if (allCapsNric.equals(\"\") || !Nric.isValidNric(allCapsNric)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"yezkez10"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"yezkez10"},"content":"        return new Nric(allCapsNric);","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String Gender} into a {@code Gender}.","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"     * @param gender The input string that represents Gender \"M\" or \"F\"","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"     * @return Gender instance","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code gender} is not \"M\" or \"F\".","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"yezkez10"},"content":"        if (trimmedGender.equals(\"\") || !Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String age} into a {@code Age}.","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"     * @param age The input string that represents age of patient","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"     * @return Age an Age instance","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code age} is not between 0 and 150.","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"        String trimmedAge \u003d age.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"        int ageInt;","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"        // Check if trimmedAge is an empty string","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"        if (trimmedAge.equals(\"\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"            ageInt \u003d Integer.parseInt(trimmedAge);","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"            throw new ParseException(MESSAGE_AGE_SHOULD_BE_INTEGER);","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"wj331"},"content":"        if (!Age.isValidAge(ageInt)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"wj331"},"content":"        return new Age(ageInt);","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":159,"author":{"gitId":"wj331"},"content":"     * Parses a {@code String ethnic} into a {@code Ethnicity}.","lastModifiedDate":"2023-10-17"},{"lineNumber":160,"author":{"gitId":"wj331"},"content":"     * @param ethnic The input string that represents ethnic group of patient","lastModifiedDate":"2023-10-17"},{"lineNumber":161,"author":{"gitId":"wj331"},"content":"     * @return Gender instance","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"wj331"},"content":"     * @throws ParseException if the given {@code ethnic} is not \"Chinese\", \"Malay\", \"Indian\", \"Eurasian\" or \"Others\".","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":164,"author":{"gitId":"wj331"},"content":"    public static Ethnicity parseEthnic(String ethnic) throws ParseException {","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"wj331"},"content":"        requireNonNull(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":166,"author":{"gitId":"wj331"},"content":"        String trimmedEthnic \u003d ethnic.trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"        if (trimmedEthnic.equals(\"\") || !Ethnicity.isValidEthnic(trimmedEthnic)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":169,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"wj331"},"content":"        return new Ethnicity(trimmedEthnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"        if (trimmedAddress.equals(\"\") || !Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"        if (trimmedEmail.equals(\"\") || !Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":229,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":230,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":231,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":232,"author":{"gitId":"simbayippy"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2023-10-12"},{"lineNumber":233,"author":{"gitId":"simbayippy"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-10-12"},{"lineNumber":234,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":235,"author":{"gitId":"simbayippy"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2023-10-12"},{"lineNumber":236,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"simbayippy"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws ParseException {","lastModifiedDate":"2023-10-12"},{"lineNumber":238,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":239,"author":{"gitId":"simbayippy"},"content":"        String trimmedDateTime \u003d dateTime.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":240,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":241,"author":{"gitId":"simbayippy"},"content":"        if (!Appointment.isValidDateTime(trimmedDateTime)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":242,"author":{"gitId":"tohpinren"},"content":"            throw new ParseException(Appointment.MESSAGE_INVALID_DATE_TIME);","lastModifiedDate":"2023-10-23"},{"lineNumber":243,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":244,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime parsedDateTime \u003d LocalDateTime.parse(trimmedDateTime, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":245,"author":{"gitId":"simbayippy"},"content":"        return parsedDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":246,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":247,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":248,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":249,"author":{"gitId":"tohpinren"},"content":"     * Parses a {@code String date} into an {@code LocalDate}.","lastModifiedDate":"2023-10-23"},{"lineNumber":250,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":251,"author":{"gitId":"tohpinren"},"content":"     * @param date String to be parsed.","lastModifiedDate":"2023-10-23"},{"lineNumber":252,"author":{"gitId":"tohpinren"},"content":"     * @return LocalDate instance.","lastModifiedDate":"2023-10-23"},{"lineNumber":253,"author":{"gitId":"tohpinren"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2023-10-23"},{"lineNumber":254,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":255,"author":{"gitId":"tohpinren"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2023-10-23"},{"lineNumber":256,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":257,"author":{"gitId":"tohpinren"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-10-23"},{"lineNumber":258,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":259,"author":{"gitId":"tohpinren"},"content":"        if (!isValidDate(trimmedDate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":260,"author":{"gitId":"wj331"},"content":"            throw new ParseException(Messages.MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-10-30"},{"lineNumber":261,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":262,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":263,"author":{"gitId":"tohpinren"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-23"},{"lineNumber":264,"author":{"gitId":"tohpinren"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(trimmedDate, formatter);","lastModifiedDate":"2023-10-23"},{"lineNumber":265,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":266,"author":{"gitId":"tohpinren"},"content":"        return parsedDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":267,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":268,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":269,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":270,"author":{"gitId":"tohpinren"},"content":"     * Checks if a given string is a valid date.","lastModifiedDate":"2023-10-23"},{"lineNumber":271,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-23"},{"lineNumber":272,"author":{"gitId":"tohpinren"},"content":"     * @param date String to be checked.","lastModifiedDate":"2023-10-23"},{"lineNumber":273,"author":{"gitId":"tohpinren"},"content":"     * @return True if the string is a valid date, false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":274,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":275,"author":{"gitId":"tohpinren"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":276,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":277,"author":{"gitId":"tohpinren"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-23"},{"lineNumber":278,"author":{"gitId":"tohpinren"},"content":"            LocalDate.parse(date, formatter);","lastModifiedDate":"2023-10-23"},{"lineNumber":279,"author":{"gitId":"tohpinren"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":280,"author":{"gitId":"tohpinren"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":281,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":282,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":283,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":284,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":286,"author":{"gitId":"wj331"},"content":"     * Checks if dateStr is a valid date on calender","lastModifiedDate":"2023-10-31"},{"lineNumber":287,"author":{"gitId":"wj331"},"content":"     * @param dateStr String instance of date to check","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"wj331"},"content":"     * @return True as long as Date is on the Calender","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"wj331"},"content":"    public static boolean isValidDateOnCalendar(String dateStr) {","lastModifiedDate":"2023-10-31"},{"lineNumber":291,"author":{"gitId":"wj331"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":292,"author":{"gitId":"wj331"},"content":"            String trimmedDateStr \u003d dateStr.substring(0, 10);","lastModifiedDate":"2023-10-31"},{"lineNumber":293,"author":{"gitId":"wj331"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-10-31"},{"lineNumber":294,"author":{"gitId":"wj331"},"content":"            LocalDate date \u003d LocalDate.parse(trimmedDateStr, formatter);","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"wj331"},"content":"            int day \u003d Integer.valueOf(trimmedDateStr.substring(0, 2));","lastModifiedDate":"2023-10-31"},{"lineNumber":296,"author":{"gitId":"wj331"},"content":"            int month \u003d date.getMonthValue();","lastModifiedDate":"2023-10-31"},{"lineNumber":297,"author":{"gitId":"wj331"},"content":"            return day \u003e\u003d 1 \u0026\u0026 day \u003c\u003d date.lengthOfMonth() \u0026\u0026 month \u003e\u003d 1 \u0026\u0026 month \u003c\u003d 12;","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"wj331"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":301,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":302,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"wj331"},"content":"     * Checks if a given string is a past date.","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"wj331"},"content":"     * @param date LocalDate to be checked.","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"wj331"},"content":"     * @return True if the date is a past date, false otherwise.","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"wj331"},"content":"    public static boolean isPastDate(LocalDate date) {","lastModifiedDate":"2023-11-08"},{"lineNumber":310,"author":{"gitId":"wj331"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-08"},{"lineNumber":311,"author":{"gitId":"wj331"},"content":"        return date.isBefore(currentDate);","lastModifiedDate":"2023-11-08"},{"lineNumber":312,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"simbayippy":19,"wj331":111,"tohpinren":47,"yezkez10":17,"-":119}},{"path":"src/main/java/seedu/address/logic/parser/ViewAvailableCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATE_DOES_NOT_EXIST;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATE_TOO_SHORT;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_PAST_DATE;","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.ParserUtil.isPastDate;","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.ParserUtil.isValidDateOnCalendar;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.commands.ViewAvailableCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.OnDateTimeApptPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.OnDateTimeSlotPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":" * Parser class for ViewAvailableCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"public class ViewAvailableCommandParser implements Parser\u003cViewAvailableCommand\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     * Parses the input from the user and returns the ViewAvailableCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * @param args String input from user","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"     * @return An instance of ViewAvailableCommand","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"     * @throws ParseException when format of ViewAvailableCommand is wrongly used","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public ViewAvailableCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        //verify no duplicate input date","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_DATE);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        //verify required argument is present","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isEmpty()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        Predicate\u003cTimeslot\u003e predicate \u003d null;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        Predicate\u003cAppointment\u003e apptPredicate \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        // Check if required arguments are present","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            String dateStr \u003d argMultimap.getValue(PREFIX_DATE).get().trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            //check input format","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            parseHelper(dateStr);","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"            //passes as long as it is a valid date on calender","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"            //02-01-2024 18:00 will pass but will be caught later","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"            if (!isValidDateOnCalendar(dateStr)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"                throw new ParseException(MESSAGE_DATE_DOES_NOT_EXIST);","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            try {","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"                date \u003d ParserUtil.parseDate(dateStr);","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"                throw new ParseException(e.getMessage() + \"\\n\" + \"Please insert in the following format: \" + \"\\n\"","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"                        + ViewAvailableCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"            if (isPastDate(date)) {","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"                throw new ParseException(MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"            predicate \u003d new OnDateTimeSlotPredicate(date);","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"            apptPredicate \u003d new OnDateTimeApptPredicate(date);","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"        return new ViewAvailableCommand(predicate, apptPredicate, date);","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"     * Helper function for parse","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"     * @param dateStr String to check if they are invalid inputs","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"     * @throws ParseException Exception thrown if dateStr is an invalid input","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"    private void parseHelper(String dateStr) throws ParseException {","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"        if (dateStr.isEmpty() || dateStr.equals(\"\\n\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"                    ViewAvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        //check if dd/MM/yyyy or has any alphabet","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"        if (dateStr.contains(\"/\") || dateStr.matches(\".*[a-zA-Z]+.*\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"        if (dateStr.length() \u003c 10) {","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"            throw new ParseException(MESSAGE_DATE_TOO_SHORT);","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":99}},{"path":"src/main/java/seedu/address/model/ClinicAssistant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.UniqueAppointmentList;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.UniqueDoctorList;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.UniqueTimeslotList;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"public class ClinicAssistant implements ReadOnlyClinicAssistant {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    private final UniqueAppointmentList allAppointments;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    private final UniqueDoctorList doctors;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private final UniqueTimeslotList allTimeSlots;","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"        allAppointments \u003d new UniqueAppointmentList();","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        doctors \u003d new UniqueDoctorList();","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        allTimeSlots \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    public ClinicAssistant() {}","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"    public ClinicAssistant(ReadOnlyClinicAssistant toBeCopied) {","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"    public void resetData(ReadOnlyClinicAssistant newData) {","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        setDoctors(newData.getDoctorList());","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"        setTimeslots(newData.getTimeSlotList());","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds a doctor to clinic assistant.","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"     * The doctor must not already exist in clinic assistant.","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    public void addDoctor(Doctor d) {","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"        doctors.add(d);","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"     * Replaces the given doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code target} must exist in clinic asisstant.","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"     * The person identity of {@code editedDoctor} must not be the same as another existing person in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        doctors.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if a doctor with the same identity as {@code doctor} exists in clinic assistant.","lastModifiedDate":"2023-10-30"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"        return doctors.contains(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"    public void removeDoctor(Doctor key) {","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"        doctors.remove(key);","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"    public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"        return doctors.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"        if (!(other instanceof ClinicAssistant)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant otherClinicAssistant \u003d (ClinicAssistant) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"        return persons.equals(otherClinicAssistant.persons);","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"     * Returns a list of appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"     * @return List of appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"        return allAppointments.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-20"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"wj331"},"content":"    public ObservableList\u003cTimeslot\u003e getTimeSlotList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":201,"author":{"gitId":"wj331"},"content":"        return allTimeSlots.asUnmodifiableObservableList();","lastModifiedDate":"2023-10-27"},{"lineNumber":202,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":205,"author":{"gitId":"wj331"},"content":"     * Adds a Timeslot instance into the current timeslot list","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"wj331"},"content":"     * @param timeslot Timeslot instance to be added","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":209,"author":{"gitId":"wj331"},"content":"        if (!allTimeSlots.contains(timeslot)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":210,"author":{"gitId":"wj331"},"content":"            allTimeSlots.add(timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":211,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":213,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":215,"author":{"gitId":"wj331"},"content":"     * Removes the timeslot instance from the timeslot list","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"wj331"},"content":"     * @param timeslot Timeslot instance to be removed","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"wj331"},"content":"    public void removeAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"wj331"},"content":"        if (allTimeSlots.size() \u003e 0) {","lastModifiedDate":"2023-10-31"},{"lineNumber":220,"author":{"gitId":"wj331"},"content":"            //cannot remove if allTimeSlots is not set via View","lastModifiedDate":"2023-10-31"},{"lineNumber":221,"author":{"gitId":"wj331"},"content":"            allTimeSlots.remove(timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":222,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":223,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":225,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"yezkez10"},"content":"     * Clears the list","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"yezkez10"},"content":"    public void resetTimeslots() {","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"yezkez10"},"content":"        allTimeSlots.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":234,"author":{"gitId":"tohpinren"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":235,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":236,"author":{"gitId":"tohpinren"},"content":"        return allAppointments.contains(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":237,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":238,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":239,"author":{"gitId":"tohpinren"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"simbayippy"},"content":"        allAppointments.add(appointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":241,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":243,"author":{"gitId":"simbayippy"},"content":"    public void addAppointmentAsList(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-20"},{"lineNumber":244,"author":{"gitId":"simbayippy"},"content":"        this.allAppointments.addAll(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":245,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":246,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":247,"author":{"gitId":"simbayippy"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":248,"author":{"gitId":"simbayippy"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":249,"author":{"gitId":"simbayippy"},"content":"        allAppointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":250,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":251,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"wj331"},"content":"     * Sets the current timeslot list to be the one given","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"wj331"},"content":"     * @param timeSlotsList The timeslot list to be set to","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"wj331"},"content":"    public void setTimeslots(List\u003cTimeslot\u003e timeSlotsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"wj331"},"content":"        allTimeSlots.setTimeslotsList(timeSlotsList);","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":259,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":260,"author":{"gitId":"simbayippy"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-20"},{"lineNumber":261,"author":{"gitId":"simbayippy"},"content":"        this.allAppointments.setAppointments(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":262,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":263,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":264,"author":{"gitId":"simbayippy"},"content":"    public void editedPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace) {","lastModifiedDate":"2023-11-04"},{"lineNumber":265,"author":{"gitId":"simbayippy"},"content":"        this.allAppointments.editPersonAppointments(oldAppointments, toReplace);","lastModifiedDate":"2023-11-04"},{"lineNumber":266,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":267,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-10-26"},{"lineNumber":268,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctors.setDoctors(doctors);","lastModifiedDate":"2023-10-26"},{"lineNumber":269,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":270,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":271,"author":{"gitId":"Bryan-Goh"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":272,"author":{"gitId":"Bryan-Goh"},"content":"        this.allAppointments.delete(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":273,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simbayippy":21,"wj331":39,"tohpinren":29,"yezkez10":8,"-":122,"Bryan-Goh":55}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    Predicate\u003cAppointment\u003e PREDICATE_SHOW_ALL_APPTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    Predicate\u003cTimeslot\u003e PREDICATE_SHOW_ALL_TIMESLOTS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    Predicate\u003cDoctor\u003e PREDICATE_SHOW_ALL_DOCTORS \u003d unused -\u003e true;","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"    void setAddressBook(ReadOnlyClinicAssistant addressBook);","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"    ReadOnlyClinicAssistant getAddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"    /** Returns an unmodifiable view of the filtered appointment list */","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"    ObservableList\u003cAppointment\u003e getFilteredAppointmentList();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"     * Adds timeslot instance into the list","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"     * @param timeslot Timeslot instance to be added","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"    void addAvailableTimeSlot(Timeslot timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"     * Removes timeslot instance from the list","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"     * @param timeslot Timeslot instance to be removed","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"    void removeAvailableTimeSlot(Timeslot timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"yezkez10"},"content":"    public void resetAvailableTimeSlot();","lastModifiedDate":"2023-11-02"},{"lineNumber":118,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"     * Updates the available timeslot list according to a given predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"     * @param predicate Predicate instance wrapped around a Timeslot","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    void updateFilteredAvailableTimeslot(Predicate\u003cTimeslot\u003e predicate);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"     * Gets the List of available timeslot","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"     * @return ObservableList of Timeslot for JavaFX","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    ObservableList\u003cTimeslot\u003e getAvailableTimeSlotList();","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"     * Adds an appointment to the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"     * @param toAdd Appointment to be added.","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"    void addAppointment(Appointment toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes an appointment in the address book.","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"    void deleteAppointment(Appointment appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":142,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":144,"author":{"gitId":"simbayippy"},"content":"     * Replaces Appointment with updated Appointment","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"     * @param target Appointment to replace","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"simbayippy"},"content":"     * @param editedAppointment edited Appointment to replace with","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"simbayippy"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"simbayippy"},"content":"    void editedPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace);","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"     * @param editedAppointment Appointment to check.","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"     * @return true if appointment exists.","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"    boolean hasAppointment(Appointment editedAppointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"Bryan-Goh"},"content":"     * Updates the filter of the filtered doctor list to filter by the given {@code predicate}.","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"    void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds a doctor to clinic assistant.","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"     * @param toAdd Doctor to be added.","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"    void addDoctor(Doctor toAdd);","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes a doctor in clinic assistant.","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"    void deleteDoctor(Doctor appointment);","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":180,"author":{"gitId":"Bryan-Goh"},"content":"     * Replaces Doctor with updated Doctor.","lastModifiedDate":"2023-10-26"},{"lineNumber":181,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":182,"author":{"gitId":"Bryan-Goh"},"content":"     * @param target doctor to replace","lastModifiedDate":"2023-10-26"},{"lineNumber":183,"author":{"gitId":"Bryan-Goh"},"content":"     * @param editedDoctor edited doctor to replace with","lastModifiedDate":"2023-10-26"},{"lineNumber":184,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":185,"author":{"gitId":"Bryan-Goh"},"content":"    void setDoctor(Doctor target, Doctor editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":187,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":188,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in the address book.","lastModifiedDate":"2023-10-26"},{"lineNumber":189,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":190,"author":{"gitId":"Bryan-Goh"},"content":"     * @param editedDoctor Appointment to check.","lastModifiedDate":"2023-10-26"},{"lineNumber":191,"author":{"gitId":"Bryan-Goh"},"content":"     * @return true if appointment exists.","lastModifiedDate":"2023-10-26"},{"lineNumber":192,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":193,"author":{"gitId":"Bryan-Goh"},"content":"    boolean hasDoctor(Doctor editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":194,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":195,"author":{"gitId":"Bryan-Goh"},"content":"    /** Returns an unmodifiable view of the filtered doctor list */","lastModifiedDate":"2023-10-26"},{"lineNumber":196,"author":{"gitId":"Bryan-Goh"},"content":"    ObservableList\u003cDoctor\u003e getFilteredDoctorList();","lastModifiedDate":"2023-10-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"simbayippy":10,"wj331":27,"tohpinren":28,"yezkez10":2,"-":86,"Bryan-Goh":44}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    private final ClinicAssistant clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private final FilteredList\u003cDoctor\u003e filteredDoctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    private final FilteredList\u003cAppointment\u003e filteredAppointments;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    private FilteredList\u003cTimeslot\u003e filteredTimeSlots;","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    public ModelManager(ReadOnlyClinicAssistant addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        this.clinicAssistant \u003d new ClinicAssistant(addressBook);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.clinicAssistant.getPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        filteredAppointments \u003d new FilteredList\u003c\u003e(this.clinicAssistant.getAppointmentList());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        filteredDoctor \u003d new FilteredList\u003c\u003e(this.clinicAssistant.getDoctorList());","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        filteredTimeSlots \u003d new FilteredList\u003c\u003e(this.clinicAssistant.getTimeSlotList());","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"        this(new ClinicAssistant(), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"    public void setAddressBook(ReadOnlyClinicAssistant addressBook) {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"        this.clinicAssistant.resetData(addressBook);","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"    public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant.hasPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.removePerson(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.addPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.setPerson(target, editedPerson);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.addAppointment(appointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"    public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"        clinicAssistant.deleteAppointment(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPTS);","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"simbayippy"},"content":"        clinicAssistant.setAppointment(target, editedAppointment);","lastModifiedDate":"2023-10-20"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":141,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":142,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":143,"author":{"gitId":"simbayippy"},"content":"    public void editedPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace) {","lastModifiedDate":"2023-11-04"},{"lineNumber":144,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(oldAppointments, toReplace);","lastModifiedDate":"2023-11-04"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"        clinicAssistant.editedPersonAppointments(oldAppointments, toReplace);","lastModifiedDate":"2023-11-04"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant.hasAppointment(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":154,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":155,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":156,"author":{"gitId":"Bryan-Goh"},"content":"        return clinicAssistant.hasDoctor(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":157,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":158,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":159,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":160,"author":{"gitId":"Bryan-Goh"},"content":"    public void deleteDoctor(Doctor target) {","lastModifiedDate":"2023-10-26"},{"lineNumber":161,"author":{"gitId":"Bryan-Goh"},"content":"        clinicAssistant.removeDoctor(target);","lastModifiedDate":"2023-10-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":164,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":165,"author":{"gitId":"Bryan-Goh"},"content":"    public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":166,"author":{"gitId":"Bryan-Goh"},"content":"        clinicAssistant.addDoctor(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":167,"author":{"gitId":"Bryan-Goh"},"content":"        updateFilteredDoctorList(PREDICATE_SHOW_ALL_DOCTORS);","lastModifiedDate":"2023-10-26"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"        clinicAssistant.setDoctor(target, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointments List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"    public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"        return filteredAppointments;","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"        filteredAppointments.setPredicate(predicate);","lastModifiedDate":"2023-10-19"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":212,"author":{"gitId":"Bryan-Goh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Doctors List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":213,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":214,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":215,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2023-10-26"},{"lineNumber":216,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"Bryan-Goh"},"content":"    public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"Bryan-Goh"},"content":"        return filteredDoctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Bryan-Goh"},"content":"    public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"Bryan-Goh"},"content":"        filteredDoctor.setPredicate(predicate);","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":230,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":231,"author":{"gitId":"wj331"},"content":"        clinicAssistant.addAvailableTimeSlot(timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":232,"author":{"gitId":"wj331"},"content":"        updateFilteredAvailableTimeslot(PREDICATE_SHOW_ALL_TIMESLOTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":233,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":234,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":235,"author":{"gitId":"wj331"},"content":"    public void removeAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"wj331"},"content":"        clinicAssistant.removeAvailableTimeSlot(timeslot);","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"wj331"},"content":"        updateFilteredAvailableTimeslot(PREDICATE_SHOW_ALL_TIMESLOTS);","lastModifiedDate":"2023-10-30"},{"lineNumber":238,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":239,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":240,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"yezkez10"},"content":"     * Resets the list of available timeslots","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"yezkez10"},"content":"    public void resetAvailableTimeSlot() {","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"yezkez10"},"content":"        clinicAssistant.resetTimeslots();","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"wj331"},"content":"    public void updateFilteredAvailableTimeslot(Predicate\u003cTimeslot\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":250,"author":{"gitId":"wj331"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":251,"author":{"gitId":"wj331"},"content":"        filteredTimeSlots.setPredicate(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":252,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":253,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":254,"author":{"gitId":"wj331"},"content":"    public ObservableList\u003cTimeslot\u003e getAvailableTimeSlotList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"wj331"},"content":"        return this.clinicAssistant.getTimeSlotList();","lastModifiedDate":"2023-10-27"},{"lineNumber":256,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":257,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":270,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant.equals(otherModelManager.clinicAssistant)","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":272,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons)","lastModifiedDate":"2023-10-19"},{"lineNumber":273,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 filteredAppointments.equals(otherModelManager.filteredAppointments);","lastModifiedDate":"2023-10-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simbayippy":13,"wj331":24,"tohpinren":48,"yezkez10":8,"-":134,"Bryan-Goh":49}},{"path":"src/main/java/seedu/address/model/ReadOnlyClinicAssistant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"public interface ReadOnlyClinicAssistant {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an unmodifiable view of the doctors list.","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     * This list will not contain any duplicate doctors.","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    ObservableList\u003cDoctor\u003e getDoctorList();","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"     * Returns a list of appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"     * @return List of appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    ObservableList\u003cTimeslot\u003e getTimeSlotList();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     * Returns true if the appointment list contains an equivalent appointment as the given argument.","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     * @param appointment Appointment to check.","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     * @return True if the appointment list contains an equivalent appointment as the given argument.","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"wj331":2,"tohpinren":16,"-":16,"Bryan-Goh":7}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"clinicassistant.json\");","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tohpinren":1,"-":87}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":" * Appointment instance for patients","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"public class Appointment {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Description must not be empty, Date must be in dd-MM-yyyy HH:mm\";","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    public static final String MESSAGE_INVALID_DATE_TIME \u003d \"Date must be in dd-MM-yyyy HH:mm format.\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"            + \"Date \u0026 time must be after the current time.\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"            + \"Time of appointment must be on the hour, between 9 AM and 5 PM inclusive.\";","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    /*","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"     * description must be alphanumeric","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh.mma\");","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    private final Person patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    private final String doctorName;","lastModifiedDate":"2023-11-01"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"     * Constructor for Appointment instance","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"     * @param description Description of the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"     * @param dateTime Time and Date of the appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    public Appointment(String description, LocalDateTime dateTime, Person patient, String name) {","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctorName \u003d name;","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"     * Returns true if a given string is a valid descrption","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"     * @param test String to be tested","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"     * @return True if the string is a valid description","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"     * Returns true if a given LocalDateTime is a valid date and time (must be in the future) for an appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"    public static boolean isValidDateTime(String test) {","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        try {","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"            LocalDateTime parsedDateTime \u003d LocalDateTime.parse(test, formatter);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"            LocalDateTime currentDateTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"            LocalTime startTime \u003d LocalTime.of(8, 0);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"            LocalTime endTime \u003d LocalTime.of(18, 0);","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"            return parsedDateTime.isAfter(currentDateTime)","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"                    \u0026\u0026 parsedDateTime.toLocalTime().isAfter(startTime)","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"                    \u0026\u0026 parsedDateTime.toLocalTime().isBefore(endTime)","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"                    \u0026\u0026 parsedDateTime.getMinute() \u003d\u003d 0; // Ensure it\u0027s on the hour","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-23"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        return this.description;","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"    public String getName() {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"        return this.doctorName;","lastModifiedDate":"2023-11-01"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"        return this.dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-18"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"                .add(\"description\", description)","lastModifiedDate":"2023-10-18"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"                .add(\"dateTime\", dateTime)","lastModifiedDate":"2023-10-18"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"                .toString();","lastModifiedDate":"2023-10-18"},{"lineNumber":103,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":104,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-12"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-12"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        return Objects.equals(description, otherAppointment.description)","lastModifiedDate":"2023-10-17"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"                \u0026\u0026 Objects.equals(dateTime, otherAppointment.dateTime);","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":121,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":122,"author":{"gitId":"simbayippy"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-12"},{"lineNumber":123,"author":{"gitId":"simbayippy"},"content":"        // Generate a hashCode based on description and dateTime","lastModifiedDate":"2023-10-12"},{"lineNumber":124,"author":{"gitId":"simbayippy"},"content":"        return Objects.hash(description, dateTime);","lastModifiedDate":"2023-10-12"},{"lineNumber":125,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"     * Returns the patient of the appointment.","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"     * @return Patient of the appointment.","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"    public Person getPatient() {","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"        return this.patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"    public Name getPatientName() {","lastModifiedDate":"2023-10-20"},{"lineNumber":137,"author":{"gitId":"simbayippy"},"content":"        return this.patient.getName();","lastModifiedDate":"2023-10-20"},{"lineNumber":138,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":139,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"     * Returns true if both appointments have the same details.","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"    public boolean isSameAppointment(Appointment otherAppt) {","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"        if (otherAppt \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"        return otherAppt !\u003d null","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 otherAppt.getPatient().equals(getPatient())","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 otherAppt.getDescription().equals(getDescription())","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"                \u0026\u0026 otherAppt.getDateTime().equals(getDateTime());","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"     * Getter method for the patient of the appointment.","lastModifiedDate":"2023-10-22"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-22"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"     * @return Patient of the appointment.","lastModifiedDate":"2023-10-22"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-10-22"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"        return this.patient;","lastModifiedDate":"2023-10-22"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":162,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":100,"wj331":10,"tohpinren":39,"yezkez10":4,"Bryan-Goh":9}},{"path":"src/main/java/seedu/address/model/appointment/NameContainsKeywordsApptPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"public class NameContainsKeywordsApptPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"    public NameContainsKeywordsApptPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"        return keywords.stream()","lastModifiedDate":"2023-10-20"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(appointment.getPatientName().fullName, keyword));","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"            return true;","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-20"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"        if (!(other instanceof NameContainsKeywordsApptPredicate)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"            return false;","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsApptPredicate otherNameContainsKeywordsApptPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"                (NameContainsKeywordsApptPredicate) other;","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"        return keywords.equals(otherNameContainsKeywordsApptPredicate.keywords);","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    public String toString() {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"simbayippy":45}},{"path":"src/main/java/seedu/address/model/appointment/OnDateTimeApptPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":" * Tests that an {@code Apppointment}\u0027s {@code DateTime} matches the DateTime given.","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"public class OnDateTimeApptPredicate implements Predicate\u003cAppointment\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    public OnDateTimeApptPredicate(LocalDate date) {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    public boolean test(Appointment appointment) {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        return appointment.getDateTime().toLocalDate().equals(date);","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"        if (!(other instanceof OnDateTimeApptPredicate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        OnDateTimeApptPredicate otherPredicate \u003d (OnDateTimeApptPredicate) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        return date.equals(otherPredicate.date);","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                .add(\"date\", date)","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"                .toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"tohpinren":44}},{"path":"src/main/java/seedu/address/model/appointment/UniqueAppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":" * A appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":" * so as to ensure that the appointment being added or updated is unique in the UniqueAppointmentList.","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":" * However, the removal of a person uses Appointment#equals(Object) so as to ensure that the appointment","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":" *","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":" *","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"public class UniqueAppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     * Returns true if the list contains an equivalent Appointment as the given argument.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     * Adds an Appointment to the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"     * The Appointment must not already exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"     * Deletes an Appointment from the list.","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    public void delete(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"        internalList.remove(appointment);","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"     * Replaces the Appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"     * The Appointment of {@code editedAppointment} must not be the same as another existing Appointment in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"     * Removes the equivalent Appointment from the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"     * The Appointment must exist in the list.","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"    public void setAppointments(UniqueAppointmentList replacement) {","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"     * {@code appointments} must not contain duplicate Appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-19"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"     * Replaces the Person Appointments with new Appointments with newly edited Person upon editing said Person.","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"     * @param oldAppointments old Appointments of the Person","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"     * @param toReplace new Appointments of the Person","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"simbayippy"},"content":"    public void editPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace) {","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(oldAppointments, toReplace);","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"simbayippy"},"content":"        // Create a copy of the internalList","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"simbayippy"},"content":"        List\u003cAppointment\u003e appointmentsList \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":127,"author":{"gitId":"simbayippy"},"content":"        // Iterate through oldAppointments and replace with toReplace at the same index","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"simbayippy"},"content":"        for (int i \u003d 0; i \u003c appointmentsList.size(); i++) {","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"            if (oldAppointments.contains(appointmentsList.get(i))) {","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"                int replaceIndex \u003d oldAppointments.indexOf(appointmentsList.get(i));","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"                if (replaceIndex \u003c toReplace.size()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"                    // Replace with the corresponding appointment from toReplace","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"simbayippy"},"content":"                    appointmentsList.set(i, toReplace.get(replaceIndex));","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"simbayippy"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"simbayippy"},"content":"        // Clear the internalList and add all elements from the updated appointmentsList","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"simbayippy"},"content":"        internalList.clear();","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"        internalList.addAll(appointmentsList);","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"simbayippy"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"     * Adds to the contents of this list with {@code appointments}.","lastModifiedDate":"2023-10-20"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"     * {@code appointments} must not contain duplicate Appointments.","lastModifiedDate":"2023-10-20"},{"lineNumber":147,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"    public void addAll(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-20"},{"lineNumber":149,"author":{"gitId":"simbayippy"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":150,"author":{"gitId":"simbayippy"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2023-10-20"},{"lineNumber":151,"author":{"gitId":"simbayippy"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2023-10-20"},{"lineNumber":152,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":153,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"        internalList.addAll(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"        internalList.sort(Comparator.comparing(Appointment::getDateTime));","lastModifiedDate":"2023-10-21"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"            return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"        if (!(other instanceof UniqueAppointmentList)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"            return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"        UniqueAppointmentList otherUniqueAppointmentList \u003d (UniqueAppointmentList) other;","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"        return internalList.equals(otherUniqueAppointmentList.internalList);","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"    @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"    public String toString() {","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"     * Returns true if {@code appointments} contains only unique Appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"                    return false;","lastModifiedDate":"2023-10-19"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"                }","lastModifiedDate":"2023-10-19"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"        return true;","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"simbayippy":41,"tohpinren":159,"Bryan-Goh":8}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":6}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":" * Signals that the operation will result in duplicate Appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":10}},{"path":"src/main/java/seedu/address/model/doctor/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.model.doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":" * Represents a Doctor in the address book.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"public class Doctor {","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    // Identity fields","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    private final Name name;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    private final Phone phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    private final Email email;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    private final Age age;","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private final Address address;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    private ArrayList\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor(Name name, Phone phone, Email email, Gender gender, Age age, Address address) {","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(name, phone, email, gender, age, address);","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor(Name name, Phone phone, Email email, Gender gender, Age age, Address address,","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"                  ArrayList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(name, phone, email, gender, age, address);","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"    public Name getName() {","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        return name;","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        return phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"        return email;","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        return address;","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"    public ArrayList\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        return appointments;","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"        return gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        return age;","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean isSameDoctor(Doctor otherDoctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        if (otherDoctor \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"        return otherDoctor !\u003d null","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"                \u0026\u0026 otherDoctor.getName().equals(getName());","lastModifiedDate":"2023-11-10"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if both persons have the same name, phone number and nric fields.","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"        if (!(other instanceof Doctor)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor otherDoctor \u003d (Doctor) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"        return isSameDoctor(otherDoctor);","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"        return Objects.hash(name, phone, email, gender, age, address);","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"name\", name)","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"email\", email)","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"age\", age)","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"address\", address)","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"                .toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"     * Returns true if patient already has this same Appointment","lastModifiedDate":"2023-11-07"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"     * @param otherAppointment Appointment to check if it exists","lastModifiedDate":"2023-10-27"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"     * @return if patient has this Appointment","lastModifiedDate":"2023-10-27"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean hasAppointment(Appointment otherAppointment) {","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"        boolean result \u003d false;","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"        for (Appointment appointment: appointments) {","lastModifiedDate":"2023-10-27"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"            if (otherAppointment.getDateTime().equals(appointment.getDateTime())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"                result \u003d true;","lastModifiedDate":"2023-10-27"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"Bryan-Goh"},"content":"        return result;","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-11-07"},{"lineNumber":155,"author":{"gitId":"simbayippy"},"content":"     * Returns true if doctor has an appointment on the input dateTime","lastModifiedDate":"2023-11-07"},{"lineNumber":156,"author":{"gitId":"simbayippy"},"content":"     * @param dateTime LocalDateTime to check if doctor has an appointment on this time","lastModifiedDate":"2023-11-07"},{"lineNumber":157,"author":{"gitId":"simbayippy"},"content":"     * @return true if this doctor has an appointment on the given timeslot","lastModifiedDate":"2023-11-07"},{"lineNumber":158,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-11-07"},{"lineNumber":159,"author":{"gitId":"simbayippy"},"content":"    public boolean hasAppointmentOnTimeslot(LocalDateTime dateTime) {","lastModifiedDate":"2023-11-07"},{"lineNumber":160,"author":{"gitId":"simbayippy"},"content":"        for (Appointment appointment : appointments) {","lastModifiedDate":"2023-11-07"},{"lineNumber":161,"author":{"gitId":"simbayippy"},"content":"            if (appointment.getDateTime().equals(dateTime)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":162,"author":{"gitId":"simbayippy"},"content":"                return true;","lastModifiedDate":"2023-11-07"},{"lineNumber":163,"author":{"gitId":"simbayippy"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"simbayippy"},"content":"        return false;","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":169,"author":{"gitId":"Bryan-Goh"},"content":"     * returns First Appointment of the Patient","lastModifiedDate":"2023-10-27"},{"lineNumber":170,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":171,"author":{"gitId":"Bryan-Goh"},"content":"     * @return First Appointment of patient","lastModifiedDate":"2023-10-27"},{"lineNumber":172,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":173,"author":{"gitId":"Bryan-Goh"},"content":"    public Appointment firstAppointment() {","lastModifiedDate":"2023-10-27"},{"lineNumber":174,"author":{"gitId":"Bryan-Goh"},"content":"        return appointments.get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":176,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds an appointment to this Person","lastModifiedDate":"2023-10-27"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"     * @param toAdd Appointment to be added","lastModifiedDate":"2023-10-27"},{"lineNumber":180,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":181,"author":{"gitId":"Bryan-Goh"},"content":"    public void addAppointment(Appointment toAdd) {","lastModifiedDate":"2023-10-27"},{"lineNumber":182,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.add(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":183,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":184,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":185,"author":{"gitId":"Bryan-Goh"},"content":"    public void setAppointments(ArrayList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2023-10-27"},{"lineNumber":187,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":188,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":189,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":190,"author":{"gitId":"Bryan-Goh"},"content":"     * @param index Index of the appointment to delete","lastModifiedDate":"2023-10-27"},{"lineNumber":191,"author":{"gitId":"Bryan-Goh"},"content":"     * @return An ArrayList without the deleted appointment","lastModifiedDate":"2023-10-27"},{"lineNumber":192,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":193,"author":{"gitId":"Bryan-Goh"},"content":"    public Appointment deleteAppointment(int index) {","lastModifiedDate":"2023-10-27"},{"lineNumber":194,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment appt \u003d appointments.get(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":195,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.remove(index);","lastModifiedDate":"2023-10-27"},{"lineNumber":196,"author":{"gitId":"Bryan-Goh"},"content":"        return appt;","lastModifiedDate":"2023-10-27"},{"lineNumber":197,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":198,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":199,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":200,"author":{"gitId":"Bryan-Goh"},"content":"     * Edits the appointment at the input index with the updated Appointment","lastModifiedDate":"2023-10-27"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"     * @param old the old Appointment to replace","lastModifiedDate":"2023-11-04"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"     * @param editedAppointment the updated Appointment","lastModifiedDate":"2023-11-04"},{"lineNumber":203,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"    public void editAppointment(Appointment old, Appointment editedAppointment) {","lastModifiedDate":"2023-11-04"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"        int index \u003d appointments.indexOf(old);","lastModifiedDate":"2023-11-04"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"        appointments.set(index, editedAppointment);","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":208,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"simbayippy":21,"tohpinren":1,"Bryan-Goh":186}},{"path":"src/main/java/seedu/address/model/doctor/UniqueDoctorList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.model.doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.exceptions.DoctorNotFoundException;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.exceptions.DuplicateDoctorException;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":" * A list of doctors that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":" * A doctor is considered unique by comparing using {@code Doctor#isSameDoctor(Doctor)}. As such, adding and updating of","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":" * persons uses Doctor#isSameDoctor(Doctor) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Doctor#equals(Object) so","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":" *","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":" *","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":" * @see Doctor#isSameDoctor(Doctor)","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"public class UniqueDoctorList implements Iterable\u003cDoctor\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    private final ObservableList\u003cDoctor\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    private final ObservableList\u003cDoctor\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if the list contains an equivalent  Doctor as the given argument.","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean contains(Doctor toCheck) {","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds a doctor to the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"     * The doctor must not already exist in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"    public void add(Doctor toAdd) {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DuplicateDoctorException();","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"     * Replaces the doctor {@code target} in the list with {@code editedDoctor}.","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"     * The doctor identity of {@code editedDoctor} must not be the same as another existing doctor in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(target, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DoctorNotFoundException();","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        if (!target.isSameDoctor(editedDoctor) \u0026\u0026 contains(editedDoctor)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DuplicateDoctorException();","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        internalList.set(index, editedDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"     * Removes the equivalent doctor from the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"     * The doctor must exist in the list.","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"    public void remove(Doctor toRemove) {","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DoctorNotFoundException();","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctors(UniqueDoctorList replacement) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"     * Replaces the contents of this list with {@code doctors}.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     * {@code doctors} must not contain duplicate doctors.","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"    public void setDoctors(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        requireAllNonNull(doctors);","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        if (!doctorsAreUnique(doctors)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"            throw new DuplicateDoctorException();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"        internalList.setAll(doctors);","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"    public ObservableList\u003cDoctor\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"    public Iterator\u003cDoctor\u003e iterator() {","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"            return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        if (!(other instanceof UniqueDoctorList)) {","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"            return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"        UniqueDoctorList otherUniqueDoctorList \u003d (UniqueDoctorList) other;","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        return internalList.equals(otherUniqueDoctorList.internalList);","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"    @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"    public String toString() {","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns true if {@code doctors} contains only unique doctors.","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"    private boolean doctorsAreUnique(List\u003cDoctor\u003e doctors) {","lastModifiedDate":"2023-10-26"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"        for (int i \u003d 0; i \u003c doctors.size() - 1; i++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"            for (int j \u003d i + 1; j \u003c doctors.size(); j++) {","lastModifiedDate":"2023-10-26"},{"lineNumber":142,"author":{"gitId":"Bryan-Goh"},"content":"                if (doctors.get(i).isSameDoctor(doctors.get(j))) {","lastModifiedDate":"2023-10-26"},{"lineNumber":143,"author":{"gitId":"Bryan-Goh"},"content":"                    return false;","lastModifiedDate":"2023-10-26"},{"lineNumber":144,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-10-26"},{"lineNumber":145,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":146,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":147,"author":{"gitId":"Bryan-Goh"},"content":"        return true;","lastModifiedDate":"2023-10-26"},{"lineNumber":148,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":149,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":149}},{"path":"src/main/java/seedu/address/model/doctor/exceptions/DoctorNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.model.doctor.exceptions;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * Signals that the operation is unable to find the specified doctor.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"public class DoctorNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":8}},{"path":"src/main/java/seedu/address/model/doctor/exceptions/DuplicateDoctorException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.model.doctor.exceptions;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":" * Signals that the operation will result in duplicate Doctors (Doctors are considered duplicates if they have the same","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":" * identity).","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"public class DuplicateDoctorException extends RuntimeException {","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"    public DuplicateDoctorException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"        super(\"This will result in duplicate Doctor\");","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":11}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAge(int)}","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"public class Age {","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"            \"Age should be an integer between 0 and 150 inclusive\";","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public final int age;","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     * @param age A valid Age.","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public Age(int age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"     * Returns true if a given input is a valid age.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public static boolean isValidAge(int test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        return test \u003c\u003d 150 \u0026\u0026 test \u003e\u003d 0;","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        Age otherAge \u003d (Age) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        return this.age \u003d\u003d otherAge.age;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        return String.valueOf(this.age);","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":52}},{"path":"src/main/java/seedu/address/model/person/Ethnicity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":" * Represents a Person\u0027s Ethnicity in the address book.","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEthnic(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"public class Ethnicity {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            \"Ethnic should be \u0027Chinese\u0027/ \u0027Malay\u0027/ \u0027Indian\u0027/ \u0027Eurasian\u0027 or \u0027Others\u0027 exactly\";","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private static final Set\u003cString\u003e VALID_ETHNICITIES \u003d","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"            Set.of(\"Chinese\", \"Malay\", \"Indian\", \"Eurasian\", \"Others\");","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    public final String ethnic;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"     * @param ethnic A valid Ethnicity.","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public Ethnicity(String ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        requireNonNull(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidEthnic(ethnic), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Ethnicity.","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public static boolean isValidEthnic(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        return VALID_ETHNICITIES.contains(test);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        return this.ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Ethnicity)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        Ethnicity otherEthnicity \u003d (Ethnicity) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        return this.ethnic.equals(otherEthnicity.ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        return ethnic.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":61,"yezkez10":1}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":" * Represents a Person\u0027s Gender in the address book.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"public class Gender {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"            \"Gender should be strictly M or F only\";","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[MF]$\";","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public final String gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * @param gender A valid Gender.","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Gender.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        return gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Gender)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        Gender otherGender \u003d (Gender) other;","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        return gender.equals(otherGender.gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        return gender.hashCode();","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"wj331":60}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"public class Nric {","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"            \"NRICs should contain 7 digits, with S or T at the beginning and a letter at the end\";","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"    public static final String VALIDATION_REGEX \u003d \"[stST][0-9]{7}[A-Za-z]\";","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"    public final String value;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        checkArgument(isValidNric(nric.toUpperCase()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        value \u003d nric.trim().toUpperCase();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     * Returns true if a given string is a valid Nric.","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-11"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"        return test.trim().toUpperCase().matches(VALIDATION_REGEX);","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"    public String toString() {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"        return value;","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"            return true;","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"            return false;","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        return value.equals(otherNric.value.toUpperCase());","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        return value.hashCode();","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"wj331":1,"yezkez10":59}},{"path":"src/main/java/seedu/address/model/person/NricContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"/**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":" */","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"public class NricContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"    private final String keyword;","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"    public NricContainsKeywordPredicate(String keyword) {","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"        this.keyword \u003d keyword.toUpperCase();","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"        return keyword.equals(person.getNric().value);","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"            return true;","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"        if (!(other instanceof NricContainsKeywordPredicate)) {","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate otherNricContainsKeywordPredicate \u003d (NricContainsKeywordPredicate) other;","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"        return keyword.equals(otherNricContainsKeywordPredicate.keyword);","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"    @Override","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    public String toString() {","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        return new ToStringBuilder(this).add(\"keyword\", keyword).toString();","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"yezkez10":41}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"    private final Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    private final Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    private final Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    private final Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    private ArrayList\u003cAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public Person(Name name, Phone phone, Email email, Gender gender,","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"                  Age age, Ethnicity ethnic, Nric nric, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        requireAllNonNull(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    public Person(Name name, Phone phone, Email email, Gender gender, Age age, Ethnicity ethnic, Nric nric,","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"                  Address address, Set\u003cTag\u003e tags, ArrayList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        requireAllNonNull(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        return nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"yezkez10"},"content":"        return gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"    public Age getAge() {","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"yezkez10"},"content":"        return age;","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"    public Ethnicity getEthnic() {","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"yezkez10"},"content":"        return ethnic;","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"    public ArrayList\u003cAppointment\u003e getAppointments() {","lastModifiedDate":"2023-10-16"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        return appointments;","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"simbayippy"},"content":"     * returns First Appointment of the Patient","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"simbayippy"},"content":"     * @return First Appointment of patient","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"simbayippy"},"content":"    public Appointment firstAppointment() {","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"simbayippy"},"content":"        return appointments.get(0);","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"     * Adds an appointment to this Person","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"     * @param toAdd Appointment to be added","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"simbayippy"},"content":"    public void addAppointment(Appointment toAdd) {","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"simbayippy"},"content":"        this.appointments.add(toAdd);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"simbayippy"},"content":"    public void setAppointments(ArrayList\u003cAppointment\u003e appointments) {","lastModifiedDate":"2023-10-20"},{"lineNumber":130,"author":{"gitId":"simbayippy"},"content":"        this.appointments \u003d appointments;","lastModifiedDate":"2023-10-20"},{"lineNumber":131,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":132,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-17"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"     * @param index Index of the appointment to delete","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"     * @return An ArrayList without the deleted appointment","lastModifiedDate":"2023-10-17"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-17"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"    public Appointment deleteAppointment(int index) {","lastModifiedDate":"2023-10-17"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment appt \u003d appointments.get(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"        this.appointments.remove(index);","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"Bryan-Goh"},"content":"        return appt;","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":143,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":144,"author":{"gitId":"simbayippy"},"content":"     * Edits the appointment at the input index with the updated Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":145,"author":{"gitId":"simbayippy"},"content":"     * @param index Index of the appointment to edit","lastModifiedDate":"2023-10-18"},{"lineNumber":146,"author":{"gitId":"simbayippy"},"content":"     * @param updatedAppointment the updated Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":147,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":148,"author":{"gitId":"simbayippy"},"content":"    public void editAppointment(int index, Appointment updatedAppointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":149,"author":{"gitId":"simbayippy"},"content":"        this.appointments.set(index, updatedAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":150,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"     * Returns true if both persons have the same name or same nric.","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"        if (otherPerson \u003d\u003d null) {","lastModifiedDate":"2023-10-23"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"            return false;","lastModifiedDate":"2023-10-23"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"yezkez10"},"content":"        return (otherPerson.getNric().equals(getNric()));","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":167,"author":{"gitId":"simbayippy"},"content":"     * Returns true if both patients have the same Appointments.","lastModifiedDate":"2023-10-18"},{"lineNumber":168,"author":{"gitId":"simbayippy"},"content":"     * @param otherPerson the other patient to check","lastModifiedDate":"2023-10-18"},{"lineNumber":169,"author":{"gitId":"simbayippy"},"content":"     * @return if both patients have the same appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":170,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":171,"author":{"gitId":"simbayippy"},"content":"    public boolean haveSameAppointments(Person otherPerson) {","lastModifiedDate":"2023-10-18"},{"lineNumber":172,"author":{"gitId":"simbayippy"},"content":"        return this.appointments.equals(otherPerson.getAppointments());","lastModifiedDate":"2023-10-18"},{"lineNumber":173,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":174,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"     * Checks if a patient already has an appointment on the same timeslot as the given appointment.","lastModifiedDate":"2023-11-04"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"     * @param otherAppointment The appointment to compare against existing appointments.","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"simbayippy"},"content":"     * @return true if the patient has an appointment with the same timeslot; false otherwise.","lastModifiedDate":"2023-11-04"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":180,"author":{"gitId":"simbayippy"},"content":"    public boolean hasAppointmentOnTimeslot(Appointment otherAppointment) {","lastModifiedDate":"2023-11-04"},{"lineNumber":181,"author":{"gitId":"simbayippy"},"content":"        return this.appointments.stream()","lastModifiedDate":"2023-11-04"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"                .anyMatch(appointment -\u003e appointment.getDateTime().equals(otherAppointment.getDateTime()));","lastModifiedDate":"2023-11-04"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":185,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":186,"author":{"gitId":"simbayippy"},"content":"     * Returns true if patient already has this same Appointment","lastModifiedDate":"2023-11-04"},{"lineNumber":187,"author":{"gitId":"simbayippy"},"content":"     * @param otherAppointment Appointment to check if it exists","lastModifiedDate":"2023-10-18"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"     * @return if patient has this Appointment","lastModifiedDate":"2023-10-18"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"    public boolean hasAppointment(Appointment otherAppointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"        return this.appointments.contains(otherAppointment);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":194,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":195,"author":{"gitId":"simbayippy"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToClone}","lastModifiedDate":"2023-10-18"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"     * Needed for edit Appointment.","lastModifiedDate":"2023-10-18"},{"lineNumber":197,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":198,"author":{"gitId":"simbayippy"},"content":"    public static Person createClone(Person personToClone) {","lastModifiedDate":"2023-10-18"},{"lineNumber":199,"author":{"gitId":"simbayippy"},"content":"        assert personToClone !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"        Name cloneName \u003d personToClone.getName();","lastModifiedDate":"2023-10-18"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"        Phone clonePhone \u003d personToClone.getPhone();","lastModifiedDate":"2023-10-18"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"        Email cloneEmail \u003d personToClone.getEmail();","lastModifiedDate":"2023-10-18"},{"lineNumber":204,"author":{"gitId":"simbayippy"},"content":"        Gender cloneGender \u003d personToClone.getGender();","lastModifiedDate":"2023-10-19"},{"lineNumber":205,"author":{"gitId":"simbayippy"},"content":"        Age cloneAge \u003d personToClone.getAge();","lastModifiedDate":"2023-10-19"},{"lineNumber":206,"author":{"gitId":"simbayippy"},"content":"        Ethnicity cloneEthnicity \u003d personToClone.getEthnic();","lastModifiedDate":"2023-10-19"},{"lineNumber":207,"author":{"gitId":"simbayippy"},"content":"        Nric cloneNric \u003d personToClone.getNric();","lastModifiedDate":"2023-10-18"},{"lineNumber":208,"author":{"gitId":"simbayippy"},"content":"        Address cloneAddress \u003d personToClone.getAddress();","lastModifiedDate":"2023-10-18"},{"lineNumber":209,"author":{"gitId":"simbayippy"},"content":"        Set\u003cTag\u003e cloneTags \u003d new HashSet\u003c\u003e(personToClone.getTags());","lastModifiedDate":"2023-10-18"},{"lineNumber":210,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e cloneAppointments \u003d new ArrayList\u003c\u003e(personToClone.getAppointments());","lastModifiedDate":"2023-10-18"},{"lineNumber":211,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"        return new Person(cloneName, clonePhone, cloneEmail, cloneGender, cloneAge, cloneEthnicity, cloneNric,","lastModifiedDate":"2023-10-19"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"                cloneAddress, cloneTags, cloneAppointments);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":217,"author":{"gitId":"yezkez10"},"content":"     * Returns true if both persons have the same name, phone number and nric fields.","lastModifiedDate":"2023-10-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"yezkez10"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"wj331"},"content":"        return Objects.hash(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":252,"author":{"gitId":"wj331"},"content":"                .add(\"gender\", gender)","lastModifiedDate":"2023-10-15"},{"lineNumber":253,"author":{"gitId":"wj331"},"content":"                .add(\"age\", age)","lastModifiedDate":"2023-10-15"},{"lineNumber":254,"author":{"gitId":"wj331"},"content":"                .add(\"ethnic\", ethnic)","lastModifiedDate":"2023-10-15"},{"lineNumber":255,"author":{"gitId":"yezkez10"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2023-10-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":258,"author":{"gitId":"simbayippy"},"content":"                .add(\"appointments\", appointments)","lastModifiedDate":"2023-10-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"simbayippy":76,"wj331":19,"tohpinren":2,"yezkez10":24,"-":111,"Bryan-Goh":29}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"            \"Phone numbers should only contain numbers starting with 9, 8 or 6 and it should be 8 digits long.\";","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[986]\\\\d{7}$\";","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tohpinren":2,"-":59}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags to be inputted should not be empty!\";","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"    public static final String VALIDATION_REGEX \u003d \".+\";","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"yezkez10":2,"-":60}},{"path":"src/main/java/seedu/address/model/timeslots/OnDateTimeSlotPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":" * Tests that an {@code Timeslot}\u0027s {@code Date} matches the Date given.","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"public class OnDateTimeSlotPredicate implements Predicate\u003cTimeslot\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    private final LocalDate date;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"     * Constructor for OnDateTimeSlotPredicate","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * @param date The date instance wrapped by the Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public OnDateTimeSlotPredicate(LocalDate date) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    public boolean test(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        return this.date.equals(timeslot.getDate());","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"     * Gets the LocalDate date stored in this Predicate instance","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"     * @return The date instance wrapped in the Predicate","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        return this.date;","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof OnDateTimeSlotPredicate)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate otherPredicate \u003d (OnDateTimeSlotPredicate) other;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        return date.equals(otherPredicate.date);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"                .add(\"date\", date)","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":57}},{"path":"src/main/java/seedu/address/model/timeslots/Timeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":" * A Timeslot class that has a date and hour","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"public class Timeslot {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    private LocalDate date;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private int hour;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"     * Constructor for Timeslot instance","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     * @param hour the Timing of the Timeslot","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * @param date The Date of the Timeslot","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    public Timeslot(LocalDate date, int hour) {","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        requireAllNonNull(date, hour);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        this.hour \u003d hour;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"                .add(\"date\", this.date)","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"                .add(\"hour\", this.hour)","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"                .toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof Timeslot)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        Timeslot timeslot \u003d (Timeslot) other;","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        return Objects.equals(hour, timeslot.hour)","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                \u0026\u0026 Objects.equals(date, timeslot.date);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        // Generate a hashCode based on description and dateTime","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        return Objects.hash(date, hour);","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"     * Checks if 2 Timeslot instances are the same","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"     * @param otherTimeSlot Other Timeslot instance","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"     * @return A boolean instance whether they are equal","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"    public boolean isSameTimeSlot(Timeslot otherTimeSlot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        if (otherTimeSlot \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        return otherTimeSlot !\u003d null","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"                \u0026\u0026 otherTimeSlot.getDate().equals(getDate())","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"                \u0026\u0026 otherTimeSlot.getHour() \u003d\u003d getHour();","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"     * Gets the Hour of this Timeslot instance","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"     * @return int instance of hour of Timeslot","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"    public int getHour() {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"        return this.hour;","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"     * Gets the LocalDate of this Timeslot instance","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"     * @return LocalDate instance of the date of Timeslot","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"        return this.date;","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":88}},{"path":"src/main/java/seedu/address/model/timeslots/UniqueTimeslotList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.exceptions.DuplicateTimeslotException;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.exceptions.TimeSlotNotFoundException;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":" * A UniqueTimeslotList class that is used for JavaFX FrontEnd","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"public class UniqueTimeslotList implements Iterable\u003cTimeslot\u003e {","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    private final ObservableList\u003cTimeslot\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    private final ObservableList\u003cTimeslot\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"     * Returns true if the list contains an equivalent Timeslot as the given argument.","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public boolean contains(Timeslot toCheck) {","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTimeSlot);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"     * Adds a Timeslot to the list if it is not already present.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"     * @param toAdd Timeslot instance we are adding to the list","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public void add(Timeslot toAdd) {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        if (!contains(toAdd)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"            internalList.add(toAdd);","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            FXCollections.sort(internalList, Comparator.comparingInt(Timeslot::getHour));","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"     * Clears the list","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"    public void clear() {","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        if (!internalList.isEmpty()) {","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"            internalList.clear();","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"     * Removes the equivalent Timeslot from the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"     * The Timeslot must exist in the list.","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"    public void remove(Timeslot toRemove) {","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            throw new TimeSlotNotFoundException();","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"     * Sets the UniqueTimeslotList from current to the replacement given","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"     * @param replacement UniqueTimeslotList we want to set current List to","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    public void setTimeslots(UniqueTimeslotList replacement) {","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"     * Adds to the contents of this list with {@code timeslot}.","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"     * {@code timeslot} must not contain duplicate Timeslot.","lastModifiedDate":"2023-10-31"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"    public void addAll(List\u003cTimeslot\u003e timeslotsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"        requireAllNonNull(timeslotsList);","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        if (!timeSlotsAreUnique(timeslotsList)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"            throw new DuplicateTimeslotException();","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"        internalList.addAll(timeslotsList);","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"    public ObservableList\u003cTimeslot\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsList(List\u003cTimeslot\u003e timeslotsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"        requireAllNonNull(timeslotsList);","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        if (!timeSlotsAreUnique(timeslotsList)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"            throw new DuplicateTimeslotException();","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"        internalList.setAll(timeslotsList);","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"    public Iterator\u003cTimeslot\u003e iterator() {","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"            return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        if (!(other instanceof UniqueTimeslotList)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList otherUniqueTimeslotList \u003d (UniqueTimeslotList) other;","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        return internalList.equals(otherUniqueTimeslotList.internalList);","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"    public int hashCode() {","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    public String toString() {","lastModifiedDate":"2023-10-27"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        return internalList.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"     * Returns the size of the UniqueTimeslotList","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"     * @return Size of the internalList instance","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"    public int size() {","lastModifiedDate":"2023-10-31"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"        return internalList.size();","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"     * Returns true if {@code timeslot} contains only unique Timeslot.","lastModifiedDate":"2023-10-31"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"    private boolean timeSlotsAreUnique(List\u003cTimeslot\u003e timeslotsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"        Set\u003cTimeslot\u003e uniqueTimeslots \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"        for (Timeslot timeslot : timeslotsList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"            if (!uniqueTimeslots.add(timeslot)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"                return false; // Duplicate time slot found","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":151,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":152,"author":{"gitId":"wj331"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":153,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":146,"yezkez10":8}},{"path":"src/main/java/seedu/address/model/timeslots/exceptions/DuplicateTimeslotException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots.exceptions;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Signals that the operation will result in duplicate Timeslot.","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class DuplicateTimeslotException extends RuntimeException {","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    public DuplicateTimeslotException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"        super(\"Operation would result in duplicate timeslot!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":10}},{"path":"src/main/java/seedu/address/model/timeslots/exceptions/TimeSlotNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots.exceptions;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":" * Signals that the operation is unable to find the specified timeslot.","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"public class TimeSlotNotFoundException extends RuntimeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"    public TimeSlotNotFoundException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"        super();","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"wj331":10}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(21), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1341367E\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"                getTagSet()),","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"                    new Gender(\"F\"), new Age(16), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1231437E\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"                getTagSet(\"throat infection\", \"on antibiotics\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"                    new Gender(\"F\"), new Age(60), new Ethnicity(\"Eurasian\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T5443267E\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"                getTagSet(\"smoker\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(55), new Ethnicity(\"Chinese\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1290127E\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"                getTagSet(\"vapes\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(42), new Ethnicity(\"Malay\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1432567E\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"                getTagSet(\"blood type: A\")),","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                    new Gender(\"M\"), new Age(33), new Ethnicity(\"Indian\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"                        new Nric(\"T1236312E\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"                getTagSet(\"just had hand surgery\"))","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"    public static ReadOnlyClinicAssistant getSampleAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant sampleAb \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"simbayippy":1,"wj331":15,"tohpinren":4,"yezkez10":6,"-":43}},{"path":"src/main/java/seedu/address/storage/ClinicAssistantStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import java.util.Optional;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":" * Represents a storage for {@link ClinicAssistant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"public interface ClinicAssistantStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    Path getClinicAssistantFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     * Returns AddressBook data as a {@link ReadOnlyClinicAssistant}.","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant() throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"     * @see #getClinicAssistantFilePath()","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant(Path filePath) throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"     * Saves the given {@link ReadOnlyClinicAssistant} to the storage.","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    void saveClinicAssistant(ReadOnlyClinicAssistant addressBook) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"     * @see #saveClinicAssistant(ReadOnlyClinicAssistant)","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    void saveClinicAssistant(ReadOnlyClinicAssistant addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":46}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"class JsonAdaptedAppointment {","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    private final String description;","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    private final String doctorName;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"                                  @JsonProperty(\"dateTime\") String dateTime,","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"                                  @JsonProperty(\"patient\") JsonAdaptedPerson person) throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctorName \u003d \"test\";","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"        dateTime \u003d source.getDateTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"        doctorName \u003d source.getName();","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    @JsonProperty(\"description\")","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        return description;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"    @JsonProperty(\"dateTime\")","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"    public Appointment toModelType(Person patient) {","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        // Left patient as null for now","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"        return new Appointment(description, dateTime, patient, doctorName);","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":50,"tohpinren":2,"yezkez10":1,"Bryan-Goh":9}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDoctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":" * Jackson-friendly version of {@link Doctor}.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"public class JsonAdaptedDoctor {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Doctor\u0027s %s field is missing!\";","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    private final String name;","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    private final String phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    private final String email;","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private final String gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    private final int age;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    private final String address;","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"     * Constructs a {@code JsonAdaptedDoctor} with the given doctor details.","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    @JsonCreator","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"    public JsonAdaptedDoctor(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"                             @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"                             @JsonProperty(\"age\") int age,","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"                             @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"     * Converts a given {@code Doctor} into this class for Jackson use.","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"     * CONVERTS TO JSON !!","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    public JsonAdaptedDoctor(Doctor source) {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"        age \u003d source.getAge().age;","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"     * Converts this Jackson-friendly adapted doctor object into the model\u0027s {@code Doctor} object.","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted doctor.","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-10-27"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-27"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2023-10-27"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"        return new Doctor(modelName, modelPhone, modelEmail, modelGender,","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"                modelAge, modelAddress);","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"Bryan-Goh":126}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    private final String gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private final int age;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    private final String ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"    private final String nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"age\") int age,","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"ethnic\") String ethnic,","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"            @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"     * CONVERTS TO JSON !!","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        age \u003d source.getAge().age;","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"        ethnic \u003d source.getEthnic().ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"        appointments.addAll(source.getAppointments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"simbayippy"},"content":"                .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"        if (ethnic \u003d\u003d null) {","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"                    Ethnicity.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"        if (!Ethnicity.isValidEthnic(ethnic)) {","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"wj331"},"content":"        final Ethnicity modelEthnic \u003d new Ethnicity(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"yezkez10"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":155,"author":{"gitId":"yezkez10"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"wj331"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-10-17"},{"lineNumber":162,"author":{"gitId":"wj331"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2023-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"wj331"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelGender,","lastModifiedDate":"2023-10-17"},{"lineNumber":171,"author":{"gitId":"simbayippy"},"content":"                modelAge, modelEthnic, modelNric, modelAddress, modelTags);","lastModifiedDate":"2023-10-20"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":174,"author":{"gitId":"yezkez10"},"content":"    public ArrayList\u003cAppointment\u003e toModelTypeAppointments(Person patient) throws DateTimeParseException {","lastModifiedDate":"2023-10-21"},{"lineNumber":175,"author":{"gitId":"simbayippy"},"content":"        ArrayList\u003cAppointment\u003e personAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"simbayippy"},"content":"        for (JsonAdaptedAppointment appointment : appointments) {","lastModifiedDate":"2023-10-20"},{"lineNumber":177,"author":{"gitId":"simbayippy"},"content":"            personAppointments.add(appointment.toModelType(patient));","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"simbayippy"},"content":"        return personAppointments;","lastModifiedDate":"2023-10-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":18,"wj331":43,"yezkez10":14,"-":106}},{"path":"src/main/java/seedu/address/storage/JsonClinicAssistantStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"public class JsonClinicAssistantStorage implements ClinicAssistantStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonClinicAssistantStorage.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    public JsonClinicAssistantStorage(Path filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    public Path getClinicAssistantFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    public Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant() throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        return readClinicAssistant(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * Similar to {@link #readClinicAssistant()}.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"    public Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        Optional\u003cJsonSerializableClinicAssistant\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                filePath, JsonSerializableClinicAssistant.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"    public void saveClinicAssistant(ReadOnlyClinicAssistant addressBook) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        saveClinicAssistant(addressBook, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"     * Similar to {@link #saveClinicAssistant(ReadOnlyClinicAssistant)}.","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"    public void saveClinicAssistant(ReadOnlyClinicAssistant addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableClinicAssistant(addressBook), filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tohpinren":16,"-":64}},{"path":"src/main/java/seedu/address/storage/JsonSerializableClinicAssistant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"class JsonSerializableClinicAssistant {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private final List\u003cJsonAdaptedDoctor\u003e doctors \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    public JsonSerializableClinicAssistant(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"    public JsonSerializableClinicAssistant(ReadOnlyClinicAssistant source) {","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        doctors.addAll(source.getDoctorList().stream().map(JsonAdaptedDoctor::new).collect(Collectors.toList()));","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"    public ClinicAssistant toModelType() throws IllegalValueException {","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant clinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType(); // creates the person","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"            // creates the appointments of the person","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"            ArrayList\u003cAppointment\u003e appointments \u003d jsonAdaptedPerson.toModelTypeAppointments(person);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"            // adds the appointments to the patient","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"            person.setAppointments(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"            if (clinicAssistant.hasPerson(person)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"            clinicAssistant.addPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"            // ADDS ENTIRE LIST TO BE APPENDED TO THE MAIN APPOINTMENT LIST.","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"            clinicAssistant.addAppointmentAsList(appointments);","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        for (JsonAdaptedDoctor jsonAdaptedDoctor: doctors) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"            Doctor doctor \u003d jsonAdaptedDoctor.toModelType();","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"            for (Appointment appointment: clinicAssistant.getAppointmentList()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"                if (doctor.getName().equals(new Name(appointment.getName()))) {","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"                    doctor.addAppointment(appointment);","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"            clinicAssistant.addDoctor((doctor));","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":13,"tohpinren":10,"-":49,"Bryan-Goh":14}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"public interface Storage extends ClinicAssistantStorage, UserPrefsStorage {","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    Path getClinicAssistantFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant() throws DataLoadingException;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    void saveClinicAssistant(ReadOnlyClinicAssistant addressBook) throws IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"tohpinren":5,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    private ClinicAssistantStorage clinicAssistantStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    public StorageManager(ClinicAssistantStorage clinicAssistantStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        this.clinicAssistantStorage \u003d clinicAssistantStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"    public Path getClinicAssistantFilePath() {","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistantStorage.getClinicAssistantFilePath();","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"    public Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant() throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        return readClinicAssistant(clinicAssistantStorage.getClinicAssistantFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"    public Optional\u003cReadOnlyClinicAssistant\u003e readClinicAssistant(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistantStorage.readClinicAssistant(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"    public void saveClinicAssistant(ReadOnlyClinicAssistant addressBook) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"        saveClinicAssistant(addressBook, clinicAssistantStorage.getClinicAssistantFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"    public void saveClinicAssistant(ReadOnlyClinicAssistant addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"        clinicAssistantStorage.saveClinicAssistant(addressBook, filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tohpinren":14,"-":64}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"     *","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"    public final Appointment appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"    private Label description;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    private Label id;","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    private Label dateTime;","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    private Label patient;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    private Label doctor;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    public AppointmentCard(Appointment appointment, int displayedIndex) {","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        description.setText(appointment.getDescription());","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        dateTime.setText(appointment.getDateTime().format(Appointment.DATE_TIME_FORMATTER));","lastModifiedDate":"2023-10-21"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        patient.setText(appointment.getPatient().getName().toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        doctor.setText(appointment.getName());","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":48,"Bryan-Goh":3}},{"path":"src/main/java/seedu/address/ui/AppointmentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"/**","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":" */","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"public class AppointmentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    private static final String FXML \u003d \"AppointmentListPanel.fxml\";","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(AppointmentListPanel.class);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"    private ListView\u003cAppointment\u003e appointmentListView;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"    public AppointmentListPanel(ObservableList\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        super(FXML);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointment\u003e {","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        protected void updateItem(Appointment appointment, boolean empty) {","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"            super.updateItem(appointment, empty);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"            if (empty || appointment \u003d\u003d null) {","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"                setText(null);","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"            } else {","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                setGraphic(new AppointmentCard(appointment, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":49}},{"path":"src/main/java/seedu/address/ui/DoctorCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":" * A UI component that displays information of a {@code Doctor}.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"public class DoctorCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    private static final String FXML \u003d \"DoctorListCard.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"     *","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public final Doctor doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private Label name;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    private Label id;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    private Label phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    private Label gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    private Label age;","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"    private Label address;","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"    private Label email;","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates a {@code DoctorCode} with the given {@code Doctor} and index to display.","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorCard(Doctor doctor, int displayedIndex) {","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"        name.setText(doctor.getName().fullName);","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"        phone.setText(doctor.getPhone().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"        gender.setText(doctor.getGender().gender);","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        age.setText(String.valueOf(doctor.getAge().age));","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        address.setText(doctor.getAddress().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        email.setText(doctor.getEmail().value);","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":57}},{"path":"src/main/java/seedu/address/ui/DoctorListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":" * Panel containing the list of doctors.","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"public class DoctorListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    private static final String FXML \u003d \"DoctorListPanel.fxml\";","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DoctorListPanel.class);","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    private ListView\u003cDoctor\u003e doctorListView;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates a {@code DoctorListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorListPanel(ObservableList\u003cDoctor\u003e doctorList) {","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        super(FXML);","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        doctorListView.setItems(doctorList);","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        doctorListView.setCellFactory(listView -\u003e new DoctorListViewCell());","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Doctor} using a {@code DoctorCard}.","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    class DoctorListViewCell extends ListCell\u003cDoctor\u003e {","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        protected void updateItem(Doctor doctor, boolean empty) {","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"            super.updateItem(doctor, empty);","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"            if (empty || doctor \u003d\u003d null) {","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"                setText(null);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"            } else {","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"                setGraphic(new DoctorCard(doctor, getIndex() + 1).getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":47}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s1-cs2103t-w09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"simbayippy":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    private AppointmentListPanel appointmentListPanel;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    private DoctorListPanel doctorListPanel;","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private TimeSlotListPanel timeSlotListPanel;","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"    private StackPane appointmentListPanelPlaceholder;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"    private StackPane doctorListPanelPlaceholder;","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    @FXML","lastModifiedDate":"2023-11-01"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"    private StackPane timeslotListPanelPlaceholder;","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"        appointmentListPanel \u003d new AppointmentListPanel(logic.getFilteredAppointmentList());","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"        appointmentListPanelPlaceholder.getChildren().add(appointmentListPanel.getRoot());","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"        doctorListPanel \u003d new DoctorListPanel(logic.getFilteredDoctorList());","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"        doctorListPanelPlaceholder.getChildren().add(doctorListPanel.getRoot());","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        timeSlotListPanel \u003d new TimeSlotListPanel(logic.getTimeSlotsList());","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"        timeslotListPanelPlaceholder.getChildren().add(timeSlotListPanel.getRoot());","lastModifiedDate":"2023-10-27"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"wj331":5,"tohpinren":6,"-":195,"Bryan-Goh":7}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    private Label gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    private Label age;","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    private Label ethnic;","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"    private Label nric;","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"        gender.setText(person.getGender().gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        age.setText(String.valueOf(person.getAge().age));","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"        ethnic.setText(person.getEthnic().ethnic);","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"wj331":2,"tohpinren":2,"yezkez10":8,"-":59}},{"path":"src/main/java/seedu/address/ui/TimeSlotCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import java.util.Date;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":" * An UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"public class TimeSlotCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    private static final String FXML \u003d \"TimeSlotCard.fxml\";","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    public final Timeslot timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    private Label id;","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    private Label hour;","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"    public TimeSlotCard(Timeslot timeslot) {","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        super(FXML);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        int hour24 \u003d timeslot.getHour();","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"        SimpleDateFormat dateFormat \u003d new SimpleDateFormat(\"h a\");","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        String hour12 \u003d dateFormat.format(new Date(0, 0, 0, hour24, 0));","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        hour.setText(hour12);","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":39,"yezkez10":8}},{"path":"src/main/java/seedu/address/ui/TimeSlotListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":" * Panel containing the list of appointments.","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"public class TimeSlotListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    private static final String FXML \u003d \"TimeSlotListPanel.fxml\";","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TimeSlotListPanel.class);","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    @FXML","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    private ListView\u003cTimeslot\u003e timeslotsListView;","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"    @FXML","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"    private Label date;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     * Creates a {@code AppointmentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public TimeSlotListPanel(ObservableList\u003cTimeslot\u003e timeslotList) {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        super(FXML);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        timeslotsListView.setItems(timeslotList);","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"        timeslotsListView.setCellFactory(listView -\u003e new TimeSlotListViewCell());","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    class TimeSlotListViewCell extends ListCell\u003cTimeslot\u003e {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        protected void updateItem(Timeslot timeslot, boolean empty) {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"            super.updateItem(timeslot, empty);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"            if (empty) {","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"                date.setText(\"Timeslot tab deactivated\");","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"            if (empty || timeslot \u003d\u003d null) {","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"                setGraphic(null);","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                setText(null);","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"                date.setText(\"Timeslot tab deactivated\");","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"                setGraphic(new TimeSlotCard(timeslot).getRoot());","lastModifiedDate":"2023-11-02"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"                date.setText(\"Available slots on \" + timeslot.getDate().toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":47,"yezkez10":10}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"                \u003cLabel fx:id\u003d\"patient\" text\u003d\"\\$patient\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"doctor\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$doctor\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"            \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$description\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"            \u003cLabel fx:id\u003d\"dateTime\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dateTime\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":33,"Bryan-Goh":1}},{"path":"src/main/resources/view/AppointmentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"    \u003cListView fx:id\u003d\"appointmentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"tohpinren":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":".label-timeslot-header {","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    -fx-alignment: center;","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":".tab-pane .tab:selected {","lastModifiedDate":"2023-11-02"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":".tab-pane .tab:selected .stack-pane{","lastModifiedDate":"2023-11-02"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-11-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2023-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":".tab-pane .tab .tab-label {","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-11-02"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":".tab-pane *.tab-header-background {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: #00000000;","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":".tab {","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":362,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":380,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"yezkez10":37,"-":348}},{"path":"src/main/resources/view/DoctorListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":36}},{"path":"src/main/resources/view/DoctorListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"    \u003cListView fx:id\u003d\"doctorListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"ClinicAssistant\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"            \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"              \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"                           \u003cTabPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"                             \u003ctabs\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"                               \u003cTab text\u003d\"Patients\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                                   \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"                                 \u003c/content\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"                               \u003c/Tab\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"                               \u003cTab text\u003d\"Doctors\"\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"                                   \u003cStackPane fx:id\u003d\"doctorListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"                                 \u003c/content\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"                               \u003c/Tab\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"                             \u003c/tabs\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"                           \u003c/TabPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"            \u003cVBox fx:id\u003d\"timeSlotList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"              \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"yezkez10"},"content":"                           \u003cTabPane prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"                             \u003ctabs\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"                               \u003cTab text\u003d\"Appointments\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"                                   \u003cStackPane fx:id\u003d\"appointmentListPanelPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"tab\" stylesheets\u003d\"@DarkTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"                                 \u003c/content\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"                               \u003c/Tab\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"                               \u003cTab text\u003d\"Timeslots\" \u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"                                 \u003ccontent\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"                                   \u003cStackPane fx:id\u003d\"timeslotListPanelPlaceholder\" minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"180.0\" prefWidth\u003d\"200.0\" styleClass\u003d\"tab\" stylesheets\u003d\"@DarkTheme.css\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"                                 \u003c/content\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"                               \u003c/Tab\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"                             \u003c/tabs\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"                           \u003c/TabPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"              \u003c/StackPane\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"          \u003c/children\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"yezkez10"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":92,"author":{"gitId":"yezkez10"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":96,"author":{"gitId":"yezkez10"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":98,"author":{"gitId":"yezkez10"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"simbayippy":1,"wj331":2,"tohpinren":11,"yezkez10":29,"-":46,"Bryan-Goh":17}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"      \u003cLabel fx:id\u003d\"age\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"      \u003cLabel fx:id\u003d\"ethnic\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ethnic\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tohpinren":4,"-":36}},{"path":"src/main/resources/view/TimeSlotCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"43.0\" prefHeight\u003d\"43.0\" prefWidth\u003d\"139.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"            \u003cHBox alignment\u003d\"CENTER\" prefHeight\u003d\"17.0\" prefWidth\u003d\"113.0\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"               \u003cLabel fx:id\u003d\"hour\" prefHeight\u003d\"17.0\" prefWidth\u003d\"48.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$hour\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"                  \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":26,"yezkez10":14}},{"path":"src/main/resources/view/TimeSlotListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/20.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"    \u003cLabel fx:id\u003d\"date\" alignment\u003d\"CENTER_LEFT\" contentDisplay\u003d\"LEFT\" prefHeight\u003d\"57.0\" prefWidth\u003d\"246.0\" styleClass\u003d\"label-timeslot-header\" stylesheets\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"    \u003cListView fx:id\u003d\"timeslotsListView\" prefWidth\u003d\"247.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"wj331":6,"yezkez10":4}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ETHNIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"import seedu.address.storage.JsonClinicAssistantStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"        JsonClinicAssistantStorage addressBookStorage \u003d","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                new JsonClinicAssistantStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"        JsonClinicAssistantStorage addressBookStorage \u003d new JsonClinicAssistantStorage(prefPath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"            public void saveClinicAssistant(ReadOnlyClinicAssistant addressBook, Path filePath)","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"yezkez10"},"content":"                + EMAIL_DESC_AMY + GENDER_DESC_AMY + AGE_DESC_AMY + ETHNIC_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"yezkez10"},"content":"                + NRIC_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tohpinren":6,"yezkez10":6,"-":168}},{"path":"src/test/java/seedu/address/logic/commands/AddAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tohpinren"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-02"},{"lineNumber":2,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-11-02"},{"lineNumber":4,"author":{"gitId":"tohpinren"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-02"},{"lineNumber":5,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-02"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_DOCTOR;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-11-02"},{"lineNumber":9,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-11-02"},{"lineNumber":10,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":11,"author":{"gitId":"tohpinren"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-02"},{"lineNumber":12,"author":{"gitId":"tohpinren"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-02"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-02"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import java.util.List;","lastModifiedDate":"2023-11-02"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-11-02"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-02"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-02"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-11-02"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-02"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-11-02"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-11-02"},{"lineNumber":24,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-02"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-11-02"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-11-02"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-02"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-11-02"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-11-02"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"public class AddAppointmentCommandTest {","lastModifiedDate":"2023-11-02"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    public void constructor_validAppointment_success() {","lastModifiedDate":"2023-11-02"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(INDEX_FIRST_PERSON, INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\", LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":38,"author":{"gitId":"tohpinren"},"content":"        assert(addAppointmentCommand !\u003d null);","lastModifiedDate":"2023-11-02"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null,","lastModifiedDate":"2023-11-02"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"                null, null, null));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(null,","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR, \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"tohpinren"},"content":"                null, \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR, null,","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppointmentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR, \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"tohpinren"},"content":"                null));","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"    public void execute_appointmentIndexZero_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":61,"author":{"gitId":"tohpinren"},"content":"        assertThrows(IndexOutOfBoundsException.class, ()","lastModifiedDate":"2023-11-02"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"                -\u003e new AddAppointmentCommand(Index.fromOneBased(0), INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\", LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2023-11-02"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":66,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"    public void execute_appointmentIndexOutOfBounds_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2023-11-02"},{"lineNumber":69,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(Index.fromOneBased(3),","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        assertThrows(CommandException.class, ()","lastModifiedDate":"2023-11-02"},{"lineNumber":74,"author":{"gitId":"tohpinren"},"content":"                -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2023-11-02"},{"lineNumber":75,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":76,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":77,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"    public void execute_appointmentIndexLessThanZero_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        assertThrows(IndexOutOfBoundsException.class, ()","lastModifiedDate":"2023-11-02"},{"lineNumber":80,"author":{"gitId":"tohpinren"},"content":"                -\u003e new AddAppointmentCommand(Index.fromOneBased(-5),","lastModifiedDate":"2023-11-02"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0)));","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2023-11-02"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"        ModelStubAcceptingAppointmentAdded modelStub \u003d new ModelStubAcceptingAppointmentAdded();","lastModifiedDate":"2023-11-02"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(Index.fromOneBased(3),","lastModifiedDate":"2023-11-02"},{"lineNumber":90,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"        try {","lastModifiedDate":"2023-11-02"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"            addAppointmentCommand.execute(modelStub);","lastModifiedDate":"2023-11-02"},{"lineNumber":95,"author":{"gitId":"tohpinren"},"content":"            assertThrows(CommandException.class, ()","lastModifiedDate":"2023-11-02"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"                -\u003e addAppointmentCommand.execute(modelStub));","lastModifiedDate":"2023-11-02"},{"lineNumber":97,"author":{"gitId":"tohpinren"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-02"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-11-02"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":102,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"    public void equals() {","lastModifiedDate":"2023-11-02"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandCopy \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":110,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentIndex \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"                Index.fromOneBased(2),","lastModifiedDate":"2023-11-09"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentDescription \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"                \"Blood test\",","lastModifiedDate":"2023-11-09"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentDateTime \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":125,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":126,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":127,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2025, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentDateTime2 \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":131,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":132,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 2, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentDateTime3 \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 2, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommandDifferentDateTime4 \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 13, 10));","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"tohpinren"},"content":"        assert(addAppointmentCommand.equals(addAppointmentCommandCopy));","lastModifiedDate":"2023-11-02"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentIndex));","lastModifiedDate":"2023-11-02"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentDescription));","lastModifiedDate":"2023-11-02"},{"lineNumber":148,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentDateTime));","lastModifiedDate":"2023-11-02"},{"lineNumber":149,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentDateTime2));","lastModifiedDate":"2023-11-02"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentDateTime3));","lastModifiedDate":"2023-11-02"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"        assert(!addAppointmentCommand.equals(addAppointmentCommandDifferentDateTime4));","lastModifiedDate":"2023-11-02"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":153,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":154,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-11-02"},{"lineNumber":155,"author":{"gitId":"tohpinren"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-02"},{"lineNumber":156,"author":{"gitId":"tohpinren"},"content":"        AddAppointmentCommand addAppointmentCommand \u003d new AddAppointmentCommand(","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_PERSON,","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"tohpinren"},"content":"                INDEX_FIRST_DOCTOR,","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"tohpinren"},"content":"                \"Health check up\",","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"                LocalDateTime.of(2024, 1, 1, 12, 0));","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"        String expected \u003d AddAppointmentCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + INDEX_FIRST_PERSON","lastModifiedDate":"2023-11-02"},{"lineNumber":162,"author":{"gitId":"tohpinren"},"content":"                + \", description\u003dHealth check up, dateTime\u003d2024-01-01T12:00}\";","lastModifiedDate":"2023-11-02"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"        assertEquals(expected, addAppointmentCommand.toString());","lastModifiedDate":"2023-11-02"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-11-02"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-11-02"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-11-02"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-11-02"},{"lineNumber":177,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":179,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":180,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":181,"author":{"gitId":"tohpinren"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-11-02"},{"lineNumber":182,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":183,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":184,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":185,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":186,"author":{"gitId":"tohpinren"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-11-02"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":188,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":189,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":190,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":191,"author":{"gitId":"tohpinren"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-11-02"},{"lineNumber":192,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-11-02"},{"lineNumber":197,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":200,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":201,"author":{"gitId":"tohpinren"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-11-02"},{"lineNumber":202,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":203,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":206,"author":{"gitId":"tohpinren"},"content":"        public void setAddressBook(ReadOnlyClinicAssistant newData) {","lastModifiedDate":"2023-11-02"},{"lineNumber":207,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":208,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":209,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":210,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":211,"author":{"gitId":"tohpinren"},"content":"        public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":212,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":213,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":214,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":215,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":216,"author":{"gitId":"tohpinren"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-11-02"},{"lineNumber":217,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":218,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":219,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":220,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":221,"author":{"gitId":"tohpinren"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-11-02"},{"lineNumber":222,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":223,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":224,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":225,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":226,"author":{"gitId":"tohpinren"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-11-02"},{"lineNumber":227,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":228,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":229,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":230,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":231,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":232,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":233,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":234,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":235,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":236,"author":{"gitId":"tohpinren"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":242,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":243,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":244,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":245,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":246,"author":{"gitId":"tohpinren"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":247,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":248,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":249,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":250,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":251,"author":{"gitId":"tohpinren"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":252,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":253,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":254,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":255,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":256,"author":{"gitId":"tohpinren"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":257,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":258,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":259,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":260,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":261,"author":{"gitId":"tohpinren"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":262,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":263,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":264,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":265,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":266,"author":{"gitId":"tohpinren"},"content":"        public void editedPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace) {","lastModifiedDate":"2023-11-09"},{"lineNumber":267,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":268,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":269,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":270,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":271,"author":{"gitId":"tohpinren"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":272,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":273,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":274,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":275,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":276,"author":{"gitId":"tohpinren"},"content":"        public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-11-09"},{"lineNumber":277,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":278,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":279,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":280,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":281,"author":{"gitId":"tohpinren"},"content":"        public void addDoctor(Doctor toAdd) {","lastModifiedDate":"2023-11-09"},{"lineNumber":282,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":283,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":284,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":285,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":286,"author":{"gitId":"tohpinren"},"content":"        public void deleteDoctor(Doctor appointment) {","lastModifiedDate":"2023-11-09"},{"lineNumber":287,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":288,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":289,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":290,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"tohpinren"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":295,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":296,"author":{"gitId":"tohpinren"},"content":"        public boolean hasDoctor(Doctor editedDoctor) {","lastModifiedDate":"2023-11-09"},{"lineNumber":297,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":298,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":300,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":302,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":303,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":304,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":305,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":306,"author":{"gitId":"tohpinren"},"content":"        public void addAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-11-02"},{"lineNumber":307,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":308,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":309,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":310,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":311,"author":{"gitId":"tohpinren"},"content":"        public void removeAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-11-02"},{"lineNumber":312,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":313,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":314,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":315,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":316,"author":{"gitId":"tohpinren"},"content":"        public void resetAvailableTimeSlot() {","lastModifiedDate":"2023-11-09"},{"lineNumber":317,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":318,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":319,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":320,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":321,"author":{"gitId":"tohpinren"},"content":"        public void updateFilteredAvailableTimeslot(Predicate\u003cTimeslot\u003e predicate) {","lastModifiedDate":"2023-11-02"},{"lineNumber":322,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":323,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":324,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":325,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cTimeslot\u003e getAvailableTimeSlotList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":326,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":327,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":328,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":329,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":330,"author":{"gitId":"tohpinren"},"content":"    /**","lastModifiedDate":"2023-11-02"},{"lineNumber":331,"author":{"gitId":"tohpinren"},"content":"     * A Model stub that always accept the appointment being added.","lastModifiedDate":"2023-11-02"},{"lineNumber":332,"author":{"gitId":"tohpinren"},"content":"     */","lastModifiedDate":"2023-11-02"},{"lineNumber":333,"author":{"gitId":"tohpinren"},"content":"    private class ModelStubAcceptingAppointmentAdded extends AddAppointmentCommandTest.ModelStub {","lastModifiedDate":"2023-11-02"},{"lineNumber":334,"author":{"gitId":"tohpinren"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":335,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":336,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":337,"author":{"gitId":"tohpinren"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-02"},{"lineNumber":338,"author":{"gitId":"tohpinren"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":339,"author":{"gitId":"tohpinren"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::isSameAppointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":340,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":341,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":342,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":343,"author":{"gitId":"tohpinren"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-02"},{"lineNumber":344,"author":{"gitId":"tohpinren"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":345,"author":{"gitId":"tohpinren"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":346,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":347,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":348,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":349,"author":{"gitId":"tohpinren"},"content":"        public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-11-02"},{"lineNumber":350,"author":{"gitId":"tohpinren"},"content":"            return new ClinicAssistant();","lastModifiedDate":"2023-11-02"},{"lineNumber":351,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":352,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":353,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":354,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-11-02"},{"lineNumber":355,"author":{"gitId":"tohpinren"},"content":"            ClinicAssistant clinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-11-02"},{"lineNumber":356,"author":{"gitId":"tohpinren"},"content":"            List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-02"},{"lineNumber":357,"author":{"gitId":"tohpinren"},"content":"            personList.add(ALICE);","lastModifiedDate":"2023-11-02"},{"lineNumber":358,"author":{"gitId":"tohpinren"},"content":"            clinicAssistant.setPersons(personList);","lastModifiedDate":"2023-11-02"},{"lineNumber":359,"author":{"gitId":"tohpinren"},"content":"            return clinicAssistant.getPersonList();","lastModifiedDate":"2023-11-02"},{"lineNumber":360,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":361,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":362,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-09"},{"lineNumber":363,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-11-09"},{"lineNumber":364,"author":{"gitId":"tohpinren"},"content":"            ClinicAssistant clinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-11-09"},{"lineNumber":365,"author":{"gitId":"tohpinren"},"content":"            List\u003cDoctor\u003e doctorList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-09"},{"lineNumber":366,"author":{"gitId":"tohpinren"},"content":"            doctorList.add(BENSON);","lastModifiedDate":"2023-11-09"},{"lineNumber":367,"author":{"gitId":"tohpinren"},"content":"            clinicAssistant.setDoctors(doctorList);","lastModifiedDate":"2023-11-09"},{"lineNumber":368,"author":{"gitId":"tohpinren"},"content":"            return clinicAssistant.getDoctorList();","lastModifiedDate":"2023-11-09"},{"lineNumber":369,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":370,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":371,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":372,"author":{"gitId":"tohpinren"},"content":"        public void removeAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-11-02"},{"lineNumber":373,"author":{"gitId":"tohpinren"},"content":"            return;","lastModifiedDate":"2023-11-02"},{"lineNumber":374,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":375,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":376,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":377,"author":{"gitId":"tohpinren"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-11-02"},{"lineNumber":378,"author":{"gitId":"tohpinren"},"content":"            appointmentsAdded.remove(appointment);","lastModifiedDate":"2023-11-02"},{"lineNumber":379,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":380,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-11-02"},{"lineNumber":381,"author":{"gitId":"tohpinren"},"content":"}","lastModifiedDate":"2023-11-02"}],"authorContributionMap":{"tohpinren":381}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"simbayippy":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"tohpinren"},"content":"        public void setAddressBook(ReadOnlyClinicAssistant newData) {","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"tohpinren"},"content":"        public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cAppointment\u003e getFilteredAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":169,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointment\u003e predicate) {","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":172,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"tohpinren"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":176,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":177,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":178,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":179,"author":{"gitId":"Bryan-Goh"},"content":"        public void deleteAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-21"},{"lineNumber":180,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":181,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":182,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":183,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-10-20"},{"lineNumber":184,"author":{"gitId":"simbayippy"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2023-10-20"},{"lineNumber":185,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-20"},{"lineNumber":186,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-20"},{"lineNumber":187,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":188,"author":{"gitId":"simbayippy"},"content":"        @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"simbayippy"},"content":"        public void editedPersonAppointments(ArrayList\u003cAppointment\u003e oldAppointments, ArrayList\u003cAppointment\u003e toReplace) {","lastModifiedDate":"2023-11-04"},{"lineNumber":190,"author":{"gitId":"simbayippy"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":191,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":192,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":193,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":194,"author":{"gitId":"tohpinren"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":195,"author":{"gitId":"tohpinren"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-22"},{"lineNumber":196,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":197,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":198,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":199,"author":{"gitId":"Bryan-Goh"},"content":"        public ObservableList\u003cDoctor\u003e getFilteredDoctorList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":200,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":201,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":202,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":203,"author":{"gitId":"wj331"},"content":"        public void addAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":204,"author":{"gitId":"wj331"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":205,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":206,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":207,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":208,"author":{"gitId":"Bryan-Goh"},"content":"        public void updateFilteredDoctorList(Predicate\u003cDoctor\u003e predicate) {","lastModifiedDate":"2023-10-26"},{"lineNumber":209,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":210,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":211,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":212,"author":{"gitId":"wj331"},"content":"        public void removeAvailableTimeSlot(Timeslot timeslot) {","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"wj331"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":214,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":215,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":216,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":217,"author":{"gitId":"Bryan-Goh"},"content":"        public void addDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":218,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":219,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":220,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":221,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":222,"author":{"gitId":"Bryan-Goh"},"content":"        public void deleteDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":223,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":224,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":225,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":226,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":227,"author":{"gitId":"Bryan-Goh"},"content":"        public void setDoctor(Doctor target, Doctor editedDoctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":228,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":229,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":230,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":231,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":232,"author":{"gitId":"Bryan-Goh"},"content":"        public boolean hasDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-26"},{"lineNumber":233,"author":{"gitId":"Bryan-Goh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-26"},{"lineNumber":234,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":235,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-11-01"},{"lineNumber":236,"author":{"gitId":"yezkez10"},"content":"        @Override","lastModifiedDate":"2023-11-02"},{"lineNumber":237,"author":{"gitId":"yezkez10"},"content":"        public void resetAvailableTimeSlot() {","lastModifiedDate":"2023-11-02"},{"lineNumber":238,"author":{"gitId":"yezkez10"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-11-02"},{"lineNumber":239,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-11-02"},{"lineNumber":240,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":241,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":242,"author":{"gitId":"wj331"},"content":"        public void updateFilteredAvailableTimeslot(Predicate\u003cTimeslot\u003e predicate) {","lastModifiedDate":"2023-10-31"},{"lineNumber":243,"author":{"gitId":"wj331"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":244,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":245,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"wj331"},"content":"        public ObservableList\u003cTimeslot\u003e getAvailableTimeSlotList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":247,"author":{"gitId":"wj331"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":248,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"tohpinren"},"content":"        public ReadOnlyClinicAssistant getAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":289,"author":{"gitId":"tohpinren"},"content":"            return new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"simbayippy":8,"wj331":19,"tohpinren":26,"yezkez10":5,"-":198,"Bryan-Goh":37}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        expectedModel.setAddressBook(new ClinicAssistant());","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"simbayippy":1,"tohpinren":2,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"    public static final String VALID_PHONE_AMY \u003d \"81111111\";","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"    public static final String VALID_PHONE_BOB \u003d \"82222222\";","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    public static final String VALID_GENDER_AMY \u003d \"F\";","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    public static final int VALID_AGE_AMY \u003d 10;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public static final String VALID_ETHNIC_AMY \u003d \"Chinese\";","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T0987654A\";","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T1234567B\";","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    public static final String VALID_GENDER_BOB \u003d \"M\";","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    public static final int VALID_AGE_BOB \u003d 42;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    public static final String VALID_ETHNIC_BOB \u003d \"Chinese\";","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"    public static final String VALID_APPOINTMENT_DESCRIPTION \u003d \"description of appointment\";","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    public static final String VALID_APPOINTMENT_DATE \u003d \"01-01-2023 00:00\";","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-10-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"    public static final String AGE_DESC_BOB \u003d \" \" + PREFIX_AGE + VALID_AGE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"    public static final String ETHNIC_DESC_AMY \u003d \" \" + PREFIX_ETHNIC + VALID_ETHNIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"    public static final String ETHNIC_DESC_BOB \u003d \" \" + PREFIX_ETHNIC + VALID_ETHNIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"T\"; // not M/F","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_AGE + \"200\"; // not a feasible age","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"    public static final String INVALID_ETHNIC_DESC \u003d \" \" + PREFIX_ETHNIC + \"Asian\"; // not within our constraints","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"T0Q9W/46E\"; // only alphabets and digits allowed","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG; // empty tags not allowed","lastModifiedDate":"2023-10-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"yezkez10"},"content":"                .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"yezkez10"},"content":"                .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"yezkez10"},"content":"                .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"yezkez10"},"content":"                .withAge(VALID_AGE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"yezkez10"},"content":"                .withEthnic(VALID_ETHNIC_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"yezkez10"},"content":"                .withNric(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"yezkez10"},"content":"                .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"yezkez10"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"yezkez10"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"yezkez10"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yezkez10"},"content":"                .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"yezkez10"},"content":"                .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"yezkez10"},"content":"                .withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"yezkez10"},"content":"                .withEthnic(VALID_ETHNIC_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"yezkez10"},"content":"                .withNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"yezkez10"},"content":"                .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant expectedClinicAssistant \u003d new ClinicAssistant(actualModel.getAddressBook());","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":150,"author":{"gitId":"tohpinren"},"content":"        assertEquals(expectedClinicAssistant, actualModel.getAddressBook());","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"simbayippy":2,"wj331":6,"tohpinren":5,"yezkez10":35,"-":119}},{"path":"src/test/java/seedu/address/logic/commands/DeleteAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"public class DeleteAppointmentCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public void execute_deleteAppointmentSuccessful() throws Exception {","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment validAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"        Person validPerson \u003d validAppointment.getPerson();","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"        String validDoctor \u003d validAppointment.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredAppointmentList().indexOf(validAppointment));","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteAppointmentCommand deleteAppointmentCommand \u003d new DeleteAppointmentCommand(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        expectedModel.deleteAppointment(validAppointment);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"        String expectedMessage \u003d String.format(DeleteAppointmentCommand.MESSAGE_DELETE_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"               Messages.formatAppointment(validAppointment), Messages.format(validPerson));","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        assertCommandSuccess(deleteAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"simbayippy":5,"Bryan-Goh":39}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    public void execute_validIndexUnfilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"        assertEquals(new CommandResult(expectedMessage), deleteCommand.execute(model));","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    public void execute_validIndexFilteredList_success() throws CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PATIENT_SUCCESS,","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        assertEquals(new CommandResult(expectedMessage), deleteCommand.execute(model));","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"simbayippy":6,"wj331":2,"-":104}},{"path":"src/test/java/seedu/address/logic/commands/DoctorIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalAddressBook;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.testutil.DoctorBuilder;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"public class DoctorIntegrationTest {","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"            new UserPrefs());;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    public void execute_newDoctor_success() {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor validDoctor \u003d new DoctorBuilder().build();","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"        expectedModel.addDoctor(validDoctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"        assertCommandSuccess(new AddDoctorCommand(validDoctor), model,","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(AddDoctorCommand.MESSAGE_SUCCESS, Messages.formatDoctor(validDoctor)),","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"                expectedModel);","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    public void execute_duplicateDoctor_throwsCommandException() {","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"        Doctor doctorInList \u003d model.getAddressBook().getDoctorList().get(0);","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"        assertCommandFailure(new AddDoctorCommand(doctorInList), model,","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"                AddDoctorCommand.MESSAGE_DUPLICATE_DOCTOR);","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":38}},{"path":"src/test/java/seedu/address/logic/commands/EditAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DESCRIPTION;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"import seedu.address.testutil.EditAppointmentDescriptorBuilder;","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    public void execute_editAppointmentSuccessful() throws ParseException, CommandException {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        Appointment validAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"        Person validPerson \u003d validAppointment.getPerson();","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime time1 \u003d ParserUtil.parseDateTime(\"02-01-2024 12:00\");","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"        String validDoctor \u003d validAppointment.getName();","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment editedAppointment \u003d new Appointment(\"one\", time1, validPerson, validDoctor);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder(editedAppointment).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredAppointmentList().indexOf(validAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(index, descriptor);","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        expectedModel.setAppointment(validAppointment, editedAppointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"                Messages.formatAppointment(editedAppointment), Messages.format(validPerson));","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    public void execute_editOnlyDescription_success() throws ParseException, CommandException {","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"        Person validPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        Appointment validAppointment \u003d model.getFilteredAppointmentList().get(INDEX_FIRST_APPOINTMENT.getZeroBased());","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        Appointment editedAppointment \u003d new Appointment(VALID_APPOINTMENT_DESCRIPTION,","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"                validAppointment.getDateTime(), validPerson, validAppointment.getName());","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentDescriptor descriptor \u003d new EditAppointmentDescriptorBuilder()","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"                .withDescription(VALID_APPOINTMENT_DESCRIPTION).build();","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredAppointmentList().indexOf(validAppointment));","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        EditAppointmentCommand editAppointmentCommand \u003d new EditAppointmentCommand(index, descriptor);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"        expectedModel.setAppointment(validAppointment, editedAppointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"        String expectedMessage \u003d String.format(EditAppointmentCommand.MESSAGE_EDIT_APPOINTMENT_SUCCESS,","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"                Messages.formatAppointment(editedAppointment), Messages.format(validPerson));","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        assertCommandSuccess(editAppointmentCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"    public void execute_noFieldSpecified_failure() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"    public void execute_duplicateAppointment_failure() throws ParseException {","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":84,"author":{"gitId":"tohpinren"},"content":"    private static Appointment createEditedAppointment(Appointment apptToEdit, EditAppointmentDescriptor editApptDesc,","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"                                                       Person editedPerson) {","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        assert apptToEdit !\u003d null;","lastModifiedDate":"2023-10-18"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"        String updatedDescription \u003d editApptDesc.getDescription().orElse(apptToEdit.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        LocalDateTime updatedDateTime \u003d editApptDesc.getDateTime().orElse(apptToEdit.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        return new Appointment(updatedDescription, updatedDateTime, editedPerson, apptToEdit.getName());","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":86,"tohpinren":4,"Bryan-Goh":4}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        Model expectedModel \u003d new ModelManager(new ClinicAssistant(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        Model expectedModel \u003d new ModelManager(new ClinicAssistant(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"    public void execute_clearTags_success() {","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"                .withTags(\" \").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(\" \").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"        Model expectedModel \u003d new ModelManager(new ClinicAssistant(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-11-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"        Model expectedModel \u003d new ModelManager(new ClinicAssistant(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"        Model expectedModel \u003d new ModelManager(new ClinicAssistant(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"simbayippy":1,"tohpinren":5,"yezkez10":16,"-":183}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        // different gender -\u003e return false","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"        // different age -\u003e return false","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"        // different ethnicity -\u003e return false","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEthnic(\"Eurasian\").build();","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        //different Nric -\u003e return false","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", gender\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"                + editPersonDescriptor.getGender().orElse(null) + \", age\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"                + editPersonDescriptor.getAge().orElse(null) + \", ethnic\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"                + editPersonDescriptor.getEthnic().orElse(null) + \", nric\u003d\"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"                + editPersonDescriptor.getNric().orElse(null) + \", address\u003d\"","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yezkez10":23,"-":70,"Bryan-Goh":1}},{"path":"src/test/java/seedu/address/logic/commands/FindAppointmentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_APPOINTMENTS_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.Messages.MESSAGE_ONE_APPOINTMENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_WITH_APPOINTMENT;","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.NameContainsKeywordsApptPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.OnDateTimeApptPredicate;","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"public class FindAppointmentCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"    public void equals() {","lastModifiedDate":"2023-10-20"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsApptPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"                new NameContainsKeywordsApptPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsApptPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-20"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"                new NameContainsKeywordsApptPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":40,"author":{"gitId":"tohpinren"},"content":"        FindAppointmentsCommand findFirstCommand \u003d new FindAppointmentsCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"        FindAppointmentsCommand findSecondCommand \u003d new FindAppointmentsCommand(secondPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"tohpinren"},"content":"        FindAppointmentsCommand findFirstCommandCopy \u003d new FindAppointmentsCommand(firstPredicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        String expectedMessage \u003d MESSAGE_NO_APPOINTMENTS_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsApptPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"tohpinren"},"content":"        FindAppointmentsCommand command \u003d new FindAppointmentsCommand(predicate);","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":66,"author":{"gitId":"simbayippy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-20"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredAppointmentList());","lastModifiedDate":"2023-10-20"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-11-02"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-20"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-20"},{"lineNumber":72,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2023-10-20"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2023-10-20"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-20"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-20"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"    public void execute_nameAndDate_appointmentsFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_APPOINTMENT_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"        NameContainsKeywordsApptPredicate namePredicate \u003d preparePredicate(\"Alice\");","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"        OnDateTimeApptPredicate datePredicate \u003d new OnDateTimeApptPredicate(","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"                ALICE_WITH_APPOINTMENT.firstAppointment().getDateTime().toLocalDate());","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"        Predicate\u003cAppointment\u003e nameAndDatePredicate \u003d namePredicate.and(datePredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        FindAppointmentsCommand command \u003d new FindAppointmentsCommand(nameAndDatePredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"simbayippy"},"content":"        expectedModel.updateFilteredAppointmentList(nameAndDatePredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"simbayippy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"simbayippy"},"content":"        assertEquals(Arrays.asList(ALICE_WITH_APPOINTMENT.firstAppointment()),","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"simbayippy"},"content":"                model.getFilteredAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"tohpinren"},"content":"    public void execute_dateSearch_appointmentsFound() {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MESSAGE_ONE_APPOINTMENT_FOUND_OVERVIEW, 1);","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"simbayippy"},"content":"        OnDateTimeApptPredicate datePredicate \u003d new OnDateTimeApptPredicate(","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"simbayippy"},"content":"                ALICE_WITH_APPOINTMENT.firstAppointment().getDateTime().toLocalDate());","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"simbayippy"},"content":"        FindAppointmentsCommand command \u003d new FindAppointmentsCommand(datePredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"simbayippy"},"content":"        expectedModel.updateFilteredAppointmentList(datePredicate);","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"simbayippy"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"simbayippy"},"content":"        assertEquals(Arrays.asList(ALICE_WITH_APPOINTMENT.firstAppointment()),","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"simbayippy"},"content":"                model.getFilteredAppointmentList());","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"tohpinren"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":106,"author":{"gitId":"simbayippy"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-20"},{"lineNumber":107,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":108,"author":{"gitId":"simbayippy"},"content":"    private NameContainsKeywordsApptPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-20"},{"lineNumber":109,"author":{"gitId":"simbayippy"},"content":"        return new NameContainsKeywordsApptPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-10-20"},{"lineNumber":110,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":111,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"simbayippy":93,"tohpinren":15,"yezkez10":3}},{"path":"src/test/java/seedu/address/logic/commands/FindByNricCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.Messages.MESSAGE_ONE_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.NricContainsKeywordPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"public class FindByNricCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"                new NricContainsKeywordPredicate(\"first\");","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"                new NricContainsKeywordPredicate(\"second\");","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand findFirstCommand \u003d new FindByNricCommand(firstPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand findSecondCommand \u003d new FindByNricCommand(secondPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand findFirstCommandCopy \u003d new FindByNricCommand(firstPredicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand command \u003d new FindByNricCommand(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"    public void execute_oneKeyword_onePersonFound() {","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d MESSAGE_ONE_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d preparePredicate(\"S4567890C\");","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand command \u003d new FindByNricCommand(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"yezkez10"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"yezkez10"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d new NricContainsKeywordPredicate(\"keyword\");","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand findCommand \u003d new FindByNricCommand(predicate);","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"        String expected \u003d FindByNricCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"    private NricContainsKeywordPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        return new NricContainsKeywordPredicate(userInput);","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"yezkez10":89}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.Messages.MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.logic.Messages.MESSAGE_PATIENTS_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"tohpinren"},"content":"        String expectedMessage \u003d MESSAGE_NO_PATIENT_FOUND_OVERVIEW;","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PATIENTS_FOUND_OVERVIEW, 3);","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"simbayippy":1,"tohpinren":4,"-":87}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"simbayippy":1,"-":38}},{"path":"src/test/java/seedu/address/logic/commands/ViewAvailableCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.TypicalTimeslots.DEFAULT_TIMESLOT;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.TypicalTimeslots.TIMESLOT_TWO;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import java.util.Set;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.OnDateTimeApptPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.OnDateTimeSlotPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":" * Contains unit and integration tests for {@code ViewAvailableCommand}.","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"public class ViewAvailableCommandTest {","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        LocalDate defaultDate \u003d DEFAULT_TIMESLOT.getDate();","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate appointmentPredicate \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                new OnDateTimeApptPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate timeslotPredicate \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"                new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        LocalDate dateTwo \u003d TIMESLOT_TWO.getDate();","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate appointmentPredicateTwo \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"                new OnDateTimeApptPredicate(dateTwo);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate timeslotPredicateTwo \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"                new OnDateTimeSlotPredicate(dateTwo);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand firstViewCommand \u003d new ViewAvailableCommand(timeslotPredicate,","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"                appointmentPredicate, defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand secondViewCommand \u003d new ViewAvailableCommand(timeslotPredicateTwo,","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"                appointmentPredicateTwo, dateTwo);","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        assertTrue(firstViewCommand.equals(firstViewCommand));","lastModifiedDate":"2023-11-05"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand firstViewCommandCopy \u003d new ViewAvailableCommand(timeslotPredicate,","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"                appointmentPredicate, timeslotPredicate.getDate());","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        assertTrue(firstViewCommand.equals(firstViewCommandCopy));","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        assertFalse(firstViewCommand.equals(1));","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        assertFalse(firstViewCommand.equals(null));","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        assertFalse(firstViewCommand.equals(secondViewCommand));","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"    @Test//Integration","lastModifiedDate":"2023-11-07"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    public void populateUnavailableTimeslotTest_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"        LocalDate date \u003d prepareDate(\"05-02-2024\");","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate apptPredicate \u003d new OnDateTimeApptPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand viewAvailableCommand \u003d new ViewAvailableCommand(predicate, apptPredicate, date);","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"        ObservableList\u003cAppointment\u003e appointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        Set\u003cInteger\u003e setResult \u003d viewAvailableCommand.populateUnavailableTimeslot(appointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"        Set\u003cInteger\u003e setExpected \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"        for (Appointment appt: appointmentList) {","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"            if (appt.getDateTime().toLocalDate().equals(date)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"                setExpected.add(appt.getDateTime().getHour());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        assertEquals(setExpected, setResult);","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"    @Test//Integration","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeslotsEmptySet_success() { //Heuristic: Equivalence Partition: EmptySet/valid set","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"        LocalDate date \u003d prepareDate(\"05-02-2024\");","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate appointmentPredicate \u003d new OnDateTimeApptPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand viewAvailableCommand \u003d new ViewAvailableCommand(predicate, appointmentPredicate, date);","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"        //total \u003d 9 timeslots for the day","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"        int sizeExpected \u003d 9;","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"        viewAvailableCommand.addAvailableTimeslotsToModel(new HashSet\u003c\u003e(), model);","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"        assertEquals(sizeExpected, model.getAvailableTimeSlotList().size());","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"    @Test//Integration","lastModifiedDate":"2023-11-07"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeslotsToModel_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"        LocalDate date \u003d prepareDate(\"05-02-2024\");","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate appointmentPredicate \u003d new OnDateTimeApptPredicate(date);","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand viewAvailableCommand \u003d new ViewAvailableCommand(predicate, appointmentPredicate, date);","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        ObservableList\u003cAppointment\u003e appointmentList \u003d model.getFilteredAppointmentList();","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"        Set\u003cInteger\u003e unavailableTimeslot \u003d viewAvailableCommand.populateUnavailableTimeslot(appointmentList);","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"        //total \u003d 9 timeslots for the day","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"        int sizeExpected \u003d 9 - unavailableTimeslot.size();","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"        viewAvailableCommand.addAvailableTimeslotsToModel(unavailableTimeslot, model);","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"        assertEquals(sizeExpected, model.getAvailableTimeSlotList().size());","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        LocalDate defaultDate \u003d DEFAULT_TIMESLOT.getDate();","lastModifiedDate":"2023-11-06"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate appointmentPredicate \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"                new OnDateTimeApptPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate timeslotPredicate \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"                new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand viewAvailableCommand \u003d new ViewAvailableCommand(timeslotPredicate,","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"                appointmentPredicate, defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"        String expected \u003d ViewAvailableCommand.class.getCanonicalName() + \"{predicate\u003d\" + timeslotPredicate + \"}\";","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"        assertEquals(expected, viewAvailableCommand.toString());","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    private LocalDate prepareDate(String date) {","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"        return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"wj331":129}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.AGE_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ETHNIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ETHNIC_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_AGE_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ETHNIC_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"yezkez10"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"yezkez10"},"content":"                        + NRIC_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-10-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"yezkez10"},"content":"        // multiple genders","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, GENDER_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"yezkez10"},"content":"        // multiple ethnicities","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, ETHNIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ETHNIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"yezkez10"},"content":"        // multiple ages","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, AGE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"yezkez10"},"content":"        // multiple nrics","lastModifiedDate":"2023-10-19"},{"lineNumber":126,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":127,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_AMY + AGE_DESC_AMY + ETHNIC_DESC_AMY + NRIC_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"yezkez10"},"content":"                        PREFIX_GENDER, PREFIX_AGE, PREFIX_ETHNIC, PREFIX_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"        // invalid gender","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_GENDER_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"yezkez10"},"content":"        // invalid age","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_AGE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"        // invalid ethnicity","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_ETHNIC_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ETHNIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":163,"author":{"gitId":"yezkez10"},"content":"        // invalid nric","lastModifiedDate":"2023-10-19"},{"lineNumber":164,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"yezkez10"},"content":"        // invalid gender","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_GENDER_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":187,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_GENDER));","lastModifiedDate":"2023-10-19"},{"lineNumber":188,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":189,"author":{"gitId":"yezkez10"},"content":"        // invalid age","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_AGE_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_AGE));","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":193,"author":{"gitId":"yezkez10"},"content":"        // invalid ethnicity","lastModifiedDate":"2023-10-19"},{"lineNumber":194,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ETHNIC_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ETHNIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"yezkez10"},"content":"        // invalid nric","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2023-10-19"},{"lineNumber":199,"author":{"gitId":"yezkez10"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2023-10-19"},{"lineNumber":200,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":214,"author":{"gitId":"yezkez10"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-10-19"},{"lineNumber":215,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_AMY + AGE_DESC_AMY + ETHNIC_DESC_AMY + NRIC_DESC_AMY,","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":225,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":229,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":233,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":234,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":235,"author":{"gitId":"yezkez10"},"content":"        // missing gender prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":237,"author":{"gitId":"yezkez10"},"content":"                + VALID_GENDER_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":238,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":239,"author":{"gitId":"yezkez10"},"content":"        // missing age prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":240,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":241,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + VALID_AGE_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":242,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"yezkez10"},"content":"        // missing ethnicity prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":245,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + VALID_ETHNIC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":246,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":247,"author":{"gitId":"yezkez10"},"content":"        // missing nric prefix","lastModifiedDate":"2023-10-19"},{"lineNumber":248,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":249,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + VALID_NRIC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":252,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":253,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":256,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":257,"author":{"gitId":"yezkez10"},"content":"                + VALID_GENDER_BOB + VALID_NRIC_BOB + VALID_AGE_BOB + VALID_ETHNIC_BOB, expectedMessage);","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":263,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":264,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":265,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":268,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":270,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":273,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":274,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":275,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":276,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":277,"author":{"gitId":"yezkez10"},"content":"        // invalid gender","lastModifiedDate":"2023-10-19"},{"lineNumber":278,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":279,"author":{"gitId":"yezkez10"},"content":"                + INVALID_GENDER_DESC + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":280,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":281,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":282,"author":{"gitId":"yezkez10"},"content":"        // invalid age","lastModifiedDate":"2023-10-19"},{"lineNumber":283,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":284,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + INVALID_AGE_DESC + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":285,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":286,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":287,"author":{"gitId":"yezkez10"},"content":"        // invalid ethnicity","lastModifiedDate":"2023-10-19"},{"lineNumber":288,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":289,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + INVALID_ETHNIC_DESC + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":290,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Ethnicity.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":291,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":292,"author":{"gitId":"yezkez10"},"content":"        // invalid nric","lastModifiedDate":"2023-10-19"},{"lineNumber":293,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":294,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + INVALID_NRIC_DESC","lastModifiedDate":"2023-10-19"},{"lineNumber":295,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":298,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":299,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":300,"author":{"gitId":"yezkez10"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":303,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":304,"author":{"gitId":"yezkez10"},"content":"                + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":305,"author":{"gitId":"yezkez10"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":308,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":309,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":310,"author":{"gitId":"yezkez10"},"content":"                        + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-10-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":314,"author":{"gitId":"yezkez10"},"content":"                        + GENDER_DESC_BOB + AGE_DESC_BOB + ETHNIC_DESC_BOB + NRIC_DESC_BOB","lastModifiedDate":"2023-10-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"yezkez10":147,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/ClinicAssistantParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"public class ClinicAssistantParserTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    private final ClinicAssistantParser parser \u003d new ClinicAssistantParser();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"    public void parseCommand_delete_appointment() throws Exception {","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"        DeleteAppointmentCommand command \u003d (DeleteAppointmentCommand) parser.parseCommand(","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"                DeleteAppointmentCommand.COMMAND_WORD + \" \" + INDEX_FIRST_APPOINTMENT.getOneBased());","lastModifiedDate":"2023-10-22"},{"lineNumber":87,"author":{"gitId":"tohpinren"},"content":"        assertEquals(new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT), command);","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tohpinren":5,"-":87,"Bryan-Goh":8}},{"path":"src/test/java/seedu/address/logic/parser/DeleteAppointmentCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_APPOINTMENT;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"tohpinren"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_APPOINTMENT;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.logic.commands.DeleteAppointmentCommand;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"public class DeleteAppointmentCommandParserTest {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"    private DeleteAppointmentCommandParser parser \u003d new DeleteAppointmentCommandParser();","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_validArgs_returnsDeleteAppointmentCommand() {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"        assertParseSuccess(parser, \"1\",","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"                new DeleteAppointmentCommand(INDEX_FIRST_APPOINTMENT));","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    @Test","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"a\" + \" \" + PREFIX_APPOINTMENT + \"1\",","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"1\" + \" \" + PREFIX_APPOINTMENT + \"a\",","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"        assertParseFailure(parser, \"\" + \" \" + PREFIX_APPOINTMENT + \"\",","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteAppointmentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"tohpinren":3,"Bryan-Goh":27}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INDEX_TOO_SMALL;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    //Heuristics: Equivalence Partition: empty string/alphabet/ non integer/ integers","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    //Heuristics: Boundary Value Analysis: -1, 0, 1 should be tested","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public void parse_stringArg_throwsParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public void parse_negativeArg_throwsParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"-1\", MESSAGE_INDEX_TOO_SMALL);","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    public void parse_decimal_throwsParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"0.2\", MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    public void parse_zero_throwsParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"0\", MESSAGE_INDEX_TOO_SMALL);","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    public void parse_emptyStr_throwsParseException() {","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"\",","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"    public void parse_one_success() {","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(Index.fromOneBased(1)));","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"wj331":28,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"yezkez10"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"yezkez10"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":207,"author":{"gitId":"yezkez10"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":208,"author":{"gitId":"yezkez10"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"yezkez10":4,"-":206}},{"path":"src/test/java/seedu/address/logic/parser/FindByNricCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import seedu.address.logic.commands.FindByNricCommand;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.NricContainsKeywordPredicate;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"public class FindByNricCommandParserTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"    private FindByNricCommandParser parser \u003d new FindByNricCommandParser();","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindByNricCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        // no leading and trailing whitespaces, test that trimming worked","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand expectedFindByNricCommand \u003d","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"                new FindByNricCommand(new NricContainsKeywordPredicate(\"S1234567N\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"        assertParseSuccess(parser, \" S1234567N \", expectedFindByNricCommand);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"        FindByNricCommand expectedFindByNricCommand2 \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"                new FindByNricCommand(new NricContainsKeywordPredicate(\"s1234567n\"));","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"        assertParseSuccess(parser, \" s1234567n \", expectedFindByNricCommand2);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"        //not starting with S/T","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, \" A1234567N \",","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"        // only numbers","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, \" 1234567 \",","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"        //invalid format","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, \" S12345N67 \",","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"    public void parse_multipleArgs_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        // more than one nric","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        assertParseFailure(parser, \" S1234567N T9876543E \",","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"yezkez10":54}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-11-09"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-11-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_GENDER \u003d \"S\";","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    private static final int INVALID_AGE \u003d 200;","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_ETHNICITY \u003d \"minion\";","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_NRIC \u003d \"X9876543B\";","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_TAG \u003d \"\";","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"    private static final String VALID_PHONE \u003d \"81234567\";","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_GENDER \u003d \"F\";","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"    private static final int VALID_AGE \u003d 20;","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_ETHNICITY \u003d \"Eurasian\";","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_NRIC \u003d \"S9876543B\";","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_TAG_1 \u003d \"type 1 diabetes\";","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_TAG_2 \u003d \"smoker\";","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"yezkez10"},"content":"    public void parseGender_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGender((String) null));","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":146,"author":{"gitId":"yezkez10"},"content":"    public void parseGender_invalidValue_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":147,"author":{"gitId":"yezkez10"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGender(INVALID_GENDER));","lastModifiedDate":"2023-11-09"},{"lineNumber":148,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":149,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":150,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"    public void parseGender_validValueWithoutWhitespace_returnsGender() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"yezkez10"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(VALID_GENDER));","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"    public void parseGender_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"        String genderWithWhitespace \u003d WHITESPACE + VALID_GENDER + WHITESPACE;","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"        Gender expectedGender \u003d new Gender(VALID_GENDER);","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedGender, ParserUtil.parseGender(genderWithWhitespace));","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"yezkez10"},"content":"    public void parseAge_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAge(null));","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"yezkez10"},"content":"    public void parseAge_invalidValue_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"yezkez10"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAge(String.valueOf(INVALID_AGE)));","lastModifiedDate":"2023-11-09"},{"lineNumber":170,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":171,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"yezkez10"},"content":"    public void parseAge_validValueWithoutWhitespace_returnsAge() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"yezkez10"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(String.valueOf(VALID_AGE)));","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":177,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":178,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":179,"author":{"gitId":"yezkez10"},"content":"    public void parseAge_validValueWithWhitespace_returnsTrimmedGender() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":180,"author":{"gitId":"yezkez10"},"content":"        String ageWithWhitespace \u003d WHITESPACE + VALID_AGE + WHITESPACE;","lastModifiedDate":"2023-11-09"},{"lineNumber":181,"author":{"gitId":"yezkez10"},"content":"        Age expectedAge \u003d new Age(VALID_AGE);","lastModifiedDate":"2023-11-09"},{"lineNumber":182,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedAge, ParserUtil.parseAge(ageWithWhitespace));","lastModifiedDate":"2023-11-09"},{"lineNumber":183,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":184,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":185,"author":{"gitId":"yezkez10"},"content":"    public void parseEthnicity_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":186,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-11-09"},{"lineNumber":187,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":188,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":189,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":190,"author":{"gitId":"yezkez10"},"content":"    public void parseEthnicity_invalidValue_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":191,"author":{"gitId":"yezkez10"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":194,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":195,"author":{"gitId":"yezkez10"},"content":"    public void parseEthnicity_validValueWithoutWhitespace_returnsEthnicity() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":196,"author":{"gitId":"yezkez10"},"content":"        Ethnicity expectedEthnicity \u003d new Ethnicity(VALID_ETHNICITY);","lastModifiedDate":"2023-11-09"},{"lineNumber":197,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedEthnicity, ParserUtil.parseEthnic(VALID_ETHNICITY));","lastModifiedDate":"2023-11-09"},{"lineNumber":198,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":199,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":200,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":201,"author":{"gitId":"yezkez10"},"content":"    public void parseEthnicity_validValueWithWhitespace_returnsTrimmedEthnicity() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":202,"author":{"gitId":"yezkez10"},"content":"        String ethnicityWithWhitespace \u003d WHITESPACE + VALID_ETHNICITY + WHITESPACE;","lastModifiedDate":"2023-11-09"},{"lineNumber":203,"author":{"gitId":"yezkez10"},"content":"        Ethnicity expectedEthnicity \u003d new Ethnicity(VALID_ETHNICITY);","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedEthnicity, ParserUtil.parseEthnic(ethnicityWithWhitespace));","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":206,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":207,"author":{"gitId":"yezkez10"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":208,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2023-11-09"},{"lineNumber":209,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":210,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"yezkez10"},"content":"    public void parseNric_invalidValue_throwsParseException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"yezkez10"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"yezkez10"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"yezkez10"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"yezkez10"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"yezkez10"},"content":"        String nricWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"yezkez10"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(nricWithWhitespace));","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"tohpinren":1,"yezkez10":103,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/ViewAvailableCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATE_DOES_NOT_EXIST;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_DATE_TOO_SHORT;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_DATE;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.Messages.MESSAGE_PAST_DATE;","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.TypicalTimeslots.DEFAULT_TIMESLOT;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"import seedu.address.logic.commands.ViewAvailableCommand;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"import seedu.address.model.appointment.OnDateTimeApptPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.OnDateTimeSlotPredicate;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TimeslotBuilder;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"public class ViewAvailableCommandParserTest {","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    private ViewAvailableCommandParser parser \u003d new ViewAvailableCommandParser();","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    //Heuristic: Equivalence partitioning of String \u003d whitespaces/empty/invalid/alphabet/numbers/mix inputs","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"     \", //whitespaces","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public void parse_emptyString_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"\", //empty","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public void parse_emptyDate_throwsParseException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on \", //invalid","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewAvailableCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    public void parse_wrongArg_throwsParseException() { //wrong date separators","lastModifiedDate":"2023-11-05"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 20/12/2024\", MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"    public void parse_invalidDateSeparator_throwsParseException() { //invalid date separator","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 30-02-2024\", MESSAGE_DATE_DOES_NOT_EXIST);","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    public void parse_invalidMonth_throwsParseException() { //invalid month","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 02-13-2024\", MESSAGE_DATE_DOES_NOT_EXIST);","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"    public void parse_alphabet_throwsParseException() { //alphabet","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on twenty december 20\", MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    public void parse_invalidDateFormat_throwsParseException() { //wrong date format","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 20th Dec\", MESSAGE_INVALID_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"    public void parse_shortenedYear_throwsParseException() { //alphabet","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 20-12-24\", MESSAGE_DATE_TOO_SHORT);","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"    public void parse_withDateTime_throwsParseException() { //dateTime","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 02-02-2024 18:00\",","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"                MESSAGE_INVALID_DATE + \"\\n\" + \"Please insert in the following format: \" + \"\\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"                        + ViewAvailableCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"    public void parse_withPastDate_throwsParseException() { //past date","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on 02-02-2023\", MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"    public void parse_withYesterday_throwsParseException() { //Boundary Value Analysis: Yesterday","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        LocalDate yesterdayDate \u003d LocalDate.now().minusDays(1);","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"        String dateStr \u003d yesterdayDate.format(formatter);","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"        assertParseFailure(parser, \"view /on \" + dateStr, MESSAGE_PAST_DATE);","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"    public void parse_withToday_success() { //BVA: same date as today","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"        String dateStr \u003d currDate.format(formatter);","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate timeslotPredicate \u003d new OnDateTimeSlotPredicate(currDate);","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate apptPredicate \u003d new OnDateTimeApptPredicate(currDate);","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand expectedViewAvailableCommand \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"                new ViewAvailableCommand(timeslotPredicate, apptPredicate, currDate);","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        assertParseSuccess(parser, \"view /on \" + dateStr,","lastModifiedDate":"2023-11-08"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"                expectedViewAvailableCommand);","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"    public void parse_validArgs_returnsViewAvailableCommand() {","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        LocalDate defaultDate \u003d DEFAULT_TIMESLOT.getDate();","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate timeslotPredicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"        OnDateTimeApptPredicate apptPredicate \u003d new OnDateTimeApptPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"        ViewAvailableCommand expectedViewAvailableCommand \u003d","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"                  new ViewAvailableCommand(timeslotPredicate, apptPredicate, defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        // no whitespaces in between","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"        assertParseSuccess(parser, \"view /on \" + TimeslotBuilder.DEFAULT_DATE, expectedViewAvailableCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"        assertParseSuccess(parser, \"view     /on    \" + TimeslotBuilder.DEFAULT_DATE,","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"                expectedViewAvailableCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"wj331":125}},{"path":"src/test/java/seedu/address/model/ClinicAssistantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"tohpinren"},"content":"public class ClinicAssistantTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"tohpinren"},"content":"    private final ClinicAssistant clinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        assertEquals(Collections.emptyList(), clinicAssistant.getPersonList());","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e clinicAssistant.resetData(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.resetData(newData);","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        assertEquals(newData, clinicAssistant);","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistantStub newData \u003d new ClinicAssistantStub(newPersons);","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"tohpinren"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e clinicAssistant.resetData(newData));","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e clinicAssistant.hasPerson(null));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"tohpinren"},"content":"        assertFalse(clinicAssistant.hasPerson(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.addPerson(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        assertTrue(clinicAssistant.hasPerson(ALICE));","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.addPerson(ALICE);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"tohpinren"},"content":"        assertTrue(clinicAssistant.hasPerson(editedAlice));","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"tohpinren"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e clinicAssistant.getPersonList().remove(0));","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"tohpinren"},"content":"        String expected \u003d ClinicAssistant.class.getCanonicalName() + \"{persons\u003d\" + clinicAssistant.getPersonList()","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"tohpinren"},"content":"                + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"tohpinren"},"content":"        assertEquals(expected, clinicAssistant.toString());","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"    private static class ClinicAssistantStub implements ReadOnlyClinicAssistant {","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        private final ObservableList\u003cTimeslot\u003e timeslots \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"        private final ObservableList\u003cDoctor\u003e doctors \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistantStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-19"},{"lineNumber":116,"author":{"gitId":"tohpinren"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"tohpinren"},"content":"            return appointments;","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"tohpinren"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"tohpinren"},"content":"            return appointments.contains(appointment);","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"tohpinren"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"        @Override","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"        public ObservableList\u003cDoctor\u003e getDoctorList() {","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"            return doctors;","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"        @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"        public ObservableList\u003cTimeslot\u003e getTimeSlotList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"            return timeslots;","lastModifiedDate":"2023-10-27"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"simbayippy":1,"wj331":6,"tohpinren":33,"-":87,"Bryan-Goh":9}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.exceptions.TimeSlotNotFoundException;","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TypicalTimeslots;","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"        assertEquals(new ClinicAssistant(), new ClinicAssistant(modelManager.getAddressBook()));","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"    //Heuristic: equivalence partitioning: null/valid/duplicate timeslots","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"wj331"},"content":"    public void addAvailableTimeSlot_success() {","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 1);","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"    public void addDuplicateTimeSlot_failure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"    public void addNullTimeSlot_failure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addAvailableTimeSlot(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"    ///Heuristic: equivalence partitioning: null/valid/non existing timeslots","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"    public void removeAvailableTimeSlot_success() { //valid","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 1);","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"        modelManager.removeAvailableTimeSlot(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"    public void removeNotFoundAvailableTimeSlot_failure() { //non existing","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"        assertThrows(TimeSlotNotFoundException.class, () -\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"                modelManager.removeAvailableTimeSlot(TypicalTimeslots.TIMESLOT_TWO));","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"    public void removeNullAvailableTimeSlot_failure() { //null","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"        assertTrue(modelManager.getAvailableTimeSlotList().size() \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        modelManager.addAvailableTimeSlot(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"                modelManager.removeAvailableTimeSlot(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant clinicAssistant \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":147,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant differentClinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"tohpinren"},"content":"        modelManager \u003d new ModelManager(clinicAssistant, userPrefs);","lastModifiedDate":"2023-10-19"},{"lineNumber":152,"author":{"gitId":"tohpinren"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(clinicAssistant, userPrefs);","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"tohpinren"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentClinicAssistant, userPrefs)));","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"tohpinren"},"content":"        assertFalse(modelManager.equals(new ModelManager(clinicAssistant, userPrefs)));","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":178,"author":{"gitId":"tohpinren"},"content":"        assertFalse(modelManager.equals(new ModelManager(clinicAssistant, differentUserPrefs)));","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"wj331":48,"tohpinren":8,"-":124}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"public class AgeTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public void constructor_negativeAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(-1));","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public void constructor_impossibleAge_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(151));","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    //Heuristic: Boundary value analysis: -1, 0, 1, 149, 150, 151","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public void isValidAge() {","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        // invalid age","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        assertFalse(Age.isValidAge(-1)); //lower case input","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        assertFalse(Age.isValidAge(151)); //too high","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        assertTrue(Age.isValidAge(0));","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        assertTrue(Age.isValidAge(1));","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        assertTrue(Age.isValidAge(149));","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assertTrue(Age.isValidAge(150));","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        Age age \u003d new Age(12);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        assertTrue(age.equals(new Age(12)));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        assertTrue(age.equals(age));","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        assertFalse(age.equals(new Age(60)));","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    public void ageToStringShouldReturnCorrectStringValue() {","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        Age age \u003d new Age(10);","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        assertEquals(\"10\", age.toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"wj331":50}},{"path":"src/test/java/seedu/address/model/person/EthnicityTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"public class EthnicityTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Ethnicity(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public void constructor_invalidEthnicity_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        String invalidEthnicity \u003d \"CHINESE\";","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ethnicity(invalidEthnicity));","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public void isValidEthnicity() {","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        // null ethnicity","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e Ethnicity.isValidEthnic(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        // invalid ethnicity","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"INDIAN\")); //upper case input","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"\")); // empty string","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"     \")); // spaces only","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"123456789\")); // numbers","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"\u0026%\")); // special characters","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        assertFalse(Ethnicity.isValidEthnic(\"Chi ese\")); // spaces within letters","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        // Heuristic: test all valid inputs at least once","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        assertTrue(Ethnicity.isValidEthnic(\"Chinese\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        assertTrue(Ethnicity.isValidEthnic(\"Malay\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        assertTrue(Ethnicity.isValidEthnic(\"Indian\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        assertTrue(Ethnicity.isValidEthnic(\"Eurasian\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        assertTrue(Ethnicity.isValidEthnic(\"Others\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        Ethnicity ethnic \u003d new Ethnicity(\"Others\");","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        assertTrue(ethnic.equals(new Ethnicity(\"Others\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        assertTrue(ethnic.equals(ethnic));","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        assertFalse(ethnic.equals(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        assertFalse(ethnic.equals(new Ethnicity(\"Chinese\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"    public void ethnicityToStringReturnsCorrectString() {","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        Ethnicity ethnic \u003d new Ethnicity(\"Indian\");","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        assertEquals(\"Indian\", ethnic.toString());","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"wj331":65}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"public class GenderTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"        String invalidGender \u003d \"Male\";","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        // null gender","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        // invalid genders : Heuristic \u003d Equivalence Partitioning: empty/whitespace/invalid/numbers/special characters","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"m\")); //lower case input","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"     \")); // spaces only","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"MALEFEMALE\")); //alphabets only","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"123456789\")); // numbers","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"\u0026%\")); // contains non-numeric \u0026 non-alpha characters","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        assertFalse(Gender.isValidGender(\"M F\")); // spaces within digits","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        // Heuristic: test all valid inputs at least once","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        assertTrue(Gender.isValidGender(\"F\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        Gender gender \u003d new Gender(\"M\");","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"        assertTrue(gender.equals(new Gender(\"M\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        assertTrue(gender.equals(gender));","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        assertFalse(gender.equals(null));","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        assertFalse(gender.equals(new Gender(\"F\")));","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"wj331":57}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"tohpinren"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"81234567\")","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tohpinren":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/NricContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"public class NricContainsKeywordPredicateTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"    public void equals() {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate firstPredicate \u003d new NricContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate secondPredicate \u003d new NricContainsKeywordPredicate(secondPredicateKeyword);","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate firstPredicateCopy \u003d new NricContainsKeywordPredicate(firstPredicateKeyword);","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"    public void test_nricContainsKeyword_returnsTrue() {","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        // One keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d new NricContainsKeywordPredicate(\"S1234567N\");","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"S1234567N\").build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"        // case-insensitive keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        predicate \u003d new NricContainsKeywordPredicate(\"s1234567n\");","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"S1234567N\").build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        // empty keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d new NricContainsKeywordPredicate(\"\");","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"S1234567N\").build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        predicate \u003d new NricContainsKeywordPredicate(\"S1235467N\");","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"S1234567N\").build()));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"        String keyword \u003d \"S1234567N\";","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        NricContainsKeywordPredicate predicate \u003d new NricContainsKeywordPredicate(keyword);","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        String expected \u003d NricContainsKeywordPredicate.class.getCanonicalName() + \"{keyword\u003d\" + keyword + \"}\";","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"yezkez10":67}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"yezkez10"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-23"},{"lineNumber":5,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"public class NricTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"        String invalidNric \u003d \"A12345B\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"yezkez10"},"content":"        // null nric","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"yezkez10"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"yezkez10"},"content":"        // invalid nrics","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"ABCDEFGHI\")); // alpha characters only","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"123456789\")); // digits only, no alpha characters","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"98765432A\")); // no alpha character at the beginning","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"XY123456Z\")); // less than 7 numbers between 2 alpha characters","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"T012:45\u0026E\")); // contains non-numeric \u0026 non-alpha characters","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"T901p041E\")); // alphabets within digits","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"        assertFalse(Nric.isValidNric(\"T312 153E\")); // spaces within digits","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"yezkez10"},"content":"        // valid nrics","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        assertTrue(Nric.isValidNric(\"T1234567A\"));","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"        assertTrue(Nric.isValidNric(\"t1234567a\")); //lowercase alpha characters","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"    public void isSameNric() {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"    public void equals() {","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"yezkez10"},"content":"        Nric nric \u003d new Nric(\"T1234567A\");","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"        assertTrue(nric.equals(new Nric(\"T1234567A\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"        // same sequence in lowercase -\u003e returns true","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"        assertTrue(nric.equals(new Nric(\"t1234567a\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-10-23"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"        assertFalse(nric.equals(new Nric(\"T1234321A\")));","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"wj331":1,"yezkez10":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"yezkez10"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"                .withAge(VALID_AGE_BOB).withEthnic(VALID_ETHNIC_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        // different name, all other attributes same -\u003e returns true as NRIC same means same person","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"yezkez10"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"yezkez10"},"content":"        // name differs in case, all other attributes same -\u003e returns true as NRIC same means same person","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"yezkez10"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"        // nric has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"        String nricWithTrailingSpaces \u003d VALID_NRIC_BOB + \" \";","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"        editedBob \u003d new PersonBuilder(BOB).withNric(nricWithTrailingSpaces).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"        // different Nric, all other attributes same -\u003e returns false","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"yezkez10"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", gender\u003d\" + ALICE.getGender() + \", age\u003d\" + ALICE.getAge()","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"yezkez10"},"content":"                + \", ethnic\u003d\" + ALICE.getEthnic() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"yezkez10"},"content":"                + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags()","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"yezkez10"},"content":"                + \", appointments\u003d\" + ALICE.getAppointments() + \"}\";","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yezkez10":28,"-":89}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"tohpinren"},"content":"        assertTrue(Phone.isValidPhone(\"63121534\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"tohpinren"},"content":"        assertTrue(Phone.isValidPhone(\"83121534\"));","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        Phone phone \u003d new Phone(\"99999999\");","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"tohpinren"},"content":"        assertTrue(phone.equals(new Phone(\"99999999\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"tohpinren"},"content":"        assertFalse(phone.equals(new Phone(\"99555555\")));","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"tohpinren":5,"-":55}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        // same nric identity field","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"yezkez10"},"content":"    public void contains_personWithDifferentIdentityFieldsNotInList_returnsTrue() {","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"yezkez10"},"content":"        // different nric identity field","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"                .build();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"    public void add_personWithDuplicateNric_throwsDuplicatePersonException() {","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"        Person editedBob \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(editedBob));","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"yezkez10":18,"-":175}},{"path":"src/test/java/seedu/address/model/timeslots/OnDateTimeSlotPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TypicalTimeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"public class OnDateTimeSlotPredicateTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private LocalDate defaultDate \u003d TypicalTimeslots.DEFAULT_TIMESLOT.getDate();","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    //Heuristics: Equivalence Partition : DATE can be null/same date/different date","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public void createPredicateNullFailure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e new OnDateTimeSlotPredicate(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"    public void createPredicateCorrectDateSuccess() {","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        assertEquals(predicate.getDate(), defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    public void testNullFailure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e predicate.test(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    public void testSameDateSuccess() {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        assertTrue(predicate.test(TypicalTimeslots.DEFAULT_TIMESLOT));","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    public void testDifferentDateFailure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        assertFalse(predicate.test(TypicalTimeslots.TIMESLOT_TWO));","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicateToTest \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        assertTrue(predicateToTest.equals(predicateToTest));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        assertFalse(predicateToTest.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        assertFalse(predicateToTest.equals(5));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        // different dates -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        assertFalse(predicateToTest.equals(new OnDateTimeSlotPredicate(TypicalTimeslots.TIMESLOT_FOUR.getDate())));","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        //same date","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicateToTestSameDate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        assertTrue(predicateToTestSameDate.equals(predicateToTest));","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        OnDateTimeSlotPredicate predicate \u003d new OnDateTimeSlotPredicate(defaultDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        String expected \u003d OnDateTimeSlotPredicate.class.getCanonicalName()","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"                + \"{date\u003d\" + predicate.getDate() + \"}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"wj331":74}},{"path":"src/test/java/seedu/address/model/timeslots/TimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TimeslotBuilder;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TypicalTimeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"public class TimeslotTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    public void createTimeslotNullFailure() { //Heuristic: Boundary value analysis: date can be null","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null, 3));","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public void isSameTimeslot() {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotToTest \u003d TypicalTimeslots.DEFAULT_TIMESLOT;","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        assertTrue(timeslotToTest.isSameTimeSlot(timeslotToTest));","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.isSameTimeSlot(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        // date and hours same -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotTwo \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"                .withDate(timeslotToTest.getDate()).withHour(timeslotToTest.getHour()).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        assertTrue(timeslotToTest.isSameTimeSlot(timeslotTwo));","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        // different date, same hour -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotThree \u003d new TimeslotBuilder() //Heuristic: 1 invalid input in 1 test case","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"                .withDate(TypicalTimeslots.TIMESLOT_THREE.getDate()).withHour(timeslotToTest.getHour()).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.isSameTimeSlot(timeslotThree));","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        // same date different hour -\u003e returns false //Heuristic: 1 invalid input in 1 test case","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotFour \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"                .withDate(timeslotToTest.getDate()).withHour(TypicalTimeslots.TIMESLOT_FOUR.getHour()).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.isSameTimeSlot(timeslotFour));","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"    public void equals() {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotToTest \u003d TypicalTimeslots.DEFAULT_TIMESLOT;","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        assertTrue(timeslotToTest.equals(timeslotToTest));","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.equals(5));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"        // different timeslots -\u003e returns false","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.equals(TypicalTimeslots.TIMESLOT_TWO));","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"        //same date different hour","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        Timeslot sameDateDifferentHourTimeslot \u003d new Timeslot(timeslotToTest.getDate(), 12);","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.equals(sameDateDifferentHourTimeslot));","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        //different date same hour","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"        Timeslot differentDateSameHourTimeslot \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"                .withDate(\"01-01-2024\").withHour(timeslotToTest.getHour()).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        assertFalse(timeslotToTest.equals(differentDateSameHourTimeslot));","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"        //same date same hour","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        Timeslot timeslotToTestCopy \u003d new TimeslotBuilder(timeslotToTest).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"        assertTrue(timeslotToTest.equals(timeslotToTestCopy));","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"    public void toStringMethod() {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"        String expected \u003d Timeslot.class.getCanonicalName() + \"{date\u003d\" + TypicalTimeslots.DEFAULT_TIMESLOT.getDate()","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"                + \", hour\u003d\" + TypicalTimeslots.DEFAULT_TIMESLOT.getHour() + \"}\";","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"        assertEquals(expected, TypicalTimeslots.DEFAULT_TIMESLOT.toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"wj331":82}},{"path":"src/test/java/seedu/address/model/timeslots/UniqueTimeslotListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.model.timeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"import java.util.List;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.exceptions.DuplicateTimeslotException;","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"import seedu.address.testutil.TypicalTimeslots;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":" * Contains unit and integration tests for {@code UniqueTimeslotList}.","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"public class UniqueTimeslotListTest {","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"    public void equal() {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        //Heuristics: Equivalence partition: validUniqueTimeslotList/null/int/String","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        //same object","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"        assertTrue(uniqueTimeslotList.equals(uniqueTimeslotList));","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"        //different types","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"        assertFalse(uniqueTimeslotList.equals(5));","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"        assertFalse(uniqueTimeslotList.equals(\"\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"        assertFalse(uniqueTimeslotList.equals(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotListCopy \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotList.add(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotList.add(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotList.add(TypicalTimeslots.TIMESLOT_TWO);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_TWO);","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        assertTrue(uniqueTimeslotList.equals(uniqueTimeslotListCopy));","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsWithNullTimeslot_failure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTimeslotList.setTimeslots(null));","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsWithTimeslots_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotListCopy \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_TWO);","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_THREE);","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotListCopy.add(TypicalTimeslots.TIMESLOT_FOUR);","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        assert uniqueTimeslotList.size() \u003d\u003d 0;","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotList.setTimeslots(uniqueTimeslotListCopy);","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"        assertTrue(uniqueTimeslotList.size() \u003d\u003d uniqueTimeslotListCopy.size());","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsListWithNullTimeslot_failure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"        List\u003cTimeslot\u003e timeslotList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        timeslotList.add(null);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTimeslotList.setTimeslotsList(timeslotList));","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsListWithDuplicateTimeslot_failure() {","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"        List\u003cTimeslot\u003e timeslotList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"wj331"},"content":"        Timeslot timeslot \u003d TypicalTimeslots.DEFAULT_TIMESLOT;","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"wj331"},"content":"        timeslotList.add(timeslot);","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"wj331"},"content":"        timeslotList.add(timeslot);","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"wj331"},"content":"        assertThrows(DuplicateTimeslotException.class, () -\u003e uniqueTimeslotList.setTimeslotsList(timeslotList));","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"    public void setTimeslotsList_success() {","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"        UniqueTimeslotList uniqueTimeslotList \u003d new UniqueTimeslotList();","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"        List\u003cTimeslot\u003e timeslotList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"        timeslotList.add(TypicalTimeslots.DEFAULT_TIMESLOT);","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"wj331"},"content":"        timeslotList.add(TypicalTimeslots.TIMESLOT_ONE);","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"wj331"},"content":"        timeslotList.add(TypicalTimeslots.TIMESLOT_TWO);","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"wj331"},"content":"        timeslotList.add(TypicalTimeslots.TIMESLOT_THREE);","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"        timeslotList.add(TypicalTimeslots.TIMESLOT_FOUR);","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"        assertTrue(uniqueTimeslotList.size() \u003d\u003d 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"wj331"},"content":"        uniqueTimeslotList.setTimeslotsList(timeslotList);","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"        assertTrue(uniqueTimeslotList.size() \u003d\u003d timeslotList.size());","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"wj331":92}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"yezkez10"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    private static final String INVALID_GENDER \u003d \"Female\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"    private static final int INVALID_AGE \u003d -5;","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    private static final String INVALID_ETHNIC \u003d \"American\";","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_NRIC \u003d \"A1B2C3D4E\";","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"    private static final String INVALID_TAG \u003d \"\";","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"    private static final String[] INVALID_APPOINTMENT \u003d new String[]{\"hii\", \"01 01 2019\"};","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    private static final int VALID_AGE \u003d BENSON.getAge().age;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"    private static final String VALID_ETHNIC \u003d BENSON.getEthnic().toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    private static final List\u003cJsonAdaptedAppointment\u003e VALID_APPOINTMENT \u003d BENSON.getAppointments().stream()","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"            .map(JsonAdaptedAppointment::new)","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"                VALID_AGE, VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_GENDER, VALID_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"wj331"},"content":"                VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_GENDER, VALID_AGE,","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"wj331"},"content":"                VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"                null, VALID_AGE, VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidAge_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, INVALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d Age.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"    public void toModelType_invalidEthnic_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, INVALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d Ethnicity.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"wj331"},"content":"    @Test","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"    public void toModelType_nullEthnic_throwsIllegalValueException() {","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"                VALID_GENDER, VALID_AGE, null, VALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Ethnicity.class.getSimpleName());","lastModifiedDate":"2023-10-19"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"yezkez10"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"yezkez10"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"wj331"},"content":"                        INVALID_NRIC, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"yezkez10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":160,"author":{"gitId":"yezkez10"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"yezkez10"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"wj331"},"content":"                VALID_GENDER, VALID_AGE, VALID_ETHNIC, null, VALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"yezkez10"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"yezkez10"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":172,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, INVALID_ADDRESS, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"wj331"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-10-17"},{"lineNumber":180,"author":{"gitId":"wj331"},"content":"                VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-17"},{"lineNumber":181,"author":{"gitId":"wj331"},"content":"                VALID_NRIC, null, VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":191,"author":{"gitId":"wj331"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER, VALID_AGE, VALID_ETHNIC,","lastModifiedDate":"2023-10-15"},{"lineNumber":192,"author":{"gitId":"wj331"},"content":"                        VALID_NRIC, VALID_ADDRESS, invalidTags, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"simbayippy"},"content":"    @Test","lastModifiedDate":"2023-10-12"},{"lineNumber":197,"author":{"gitId":"yezkez10"},"content":"    public void toModelType_invalidAppointments_throwsDateTimeParseException() {","lastModifiedDate":"2023-10-19"},{"lineNumber":198,"author":{"gitId":"tohpinren"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_GENDER,","lastModifiedDate":"2023-10-22"},{"lineNumber":199,"author":{"gitId":"tohpinren"},"content":"                VALID_AGE, VALID_ETHNIC, VALID_NRIC, VALID_ADDRESS,","lastModifiedDate":"2023-10-22"},{"lineNumber":200,"author":{"gitId":"simbayippy"},"content":"                VALID_TAGS, VALID_APPOINTMENT);","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"simbayippy"},"content":"        Executable executable \u003d () -\u003e {","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"simbayippy"},"content":"            List\u003cJsonAdaptedAppointment\u003e invalidAppointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"simbayippy"},"content":"            invalidAppointments.add(new JsonAdaptedAppointment(INVALID_APPOINTMENT[0], INVALID_APPOINTMENT[1], person));","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"tohpinren"},"content":"        };","lastModifiedDate":"2023-10-22"},{"lineNumber":205,"author":{"gitId":"tohpinren"},"content":"        assertThrows(DateTimeParseException.class, executable);","lastModifiedDate":"2023-10-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":8,"wj331":65,"tohpinren":5,"yezkez10":27,"-":103}},{"path":"src/test/java/seedu/address/storage/JsonClinicAssistantStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"public class JsonClinicAssistantStorageTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"tohpinren"},"content":"    private java.util.Optional\u003cReadOnlyClinicAssistant\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        return new JsonClinicAssistantStorage(Paths.get(filePath)).readClinicAssistant(","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"                addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        ClinicAssistant original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"tohpinren"},"content":"        JsonClinicAssistantStorage jsonAddressBookStorage \u003d new JsonClinicAssistantStorage(filePath);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"simbayippy"},"content":"        jsonAddressBookStorage.saveClinicAssistant(original, filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"tohpinren"},"content":"        ReadOnlyClinicAssistant readBack \u003d jsonAddressBookStorage.readClinicAssistant(filePath).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"simbayippy"},"content":"        assertEquals(original, new ClinicAssistant(readBack));","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"        jsonAddressBookStorage.saveClinicAssistant(original, filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"        readBack \u003d jsonAddressBookStorage.readClinicAssistant(filePath).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        assertEquals(original, new ClinicAssistant(readBack));","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"        jsonAddressBookStorage.saveClinicAssistant(original); // file path not specified","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"tohpinren"},"content":"        readBack \u003d jsonAddressBookStorage.readClinicAssistant().get(); // file path not specified","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"simbayippy"},"content":"        assertEquals(original, new ClinicAssistant(readBack));","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"tohpinren"},"content":"    private void saveAddressBook(ReadOnlyClinicAssistant addressBook, String filePath) {","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"tohpinren"},"content":"            new JsonClinicAssistantStorage(Paths.get(filePath))","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"tohpinren"},"content":"                    .saveClinicAssistant(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"tohpinren"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new ClinicAssistant(), null));","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":9,"tohpinren":13,"-":89}},{"path":"src/test/java/seedu/address/storage/JsonSerializableClinicAssistantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"public class JsonSerializableClinicAssistantTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"tohpinren"},"content":"        JsonSerializableClinicAssistant dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"                JsonSerializableClinicAssistant.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant clinicAssistantFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"        ClinicAssistant typicalPersonsClinicAssistant \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"        assertEquals(clinicAssistantFromFile, typicalPersonsClinicAssistant);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"tohpinren"},"content":"        JsonSerializableClinicAssistant dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"tohpinren"},"content":"                JsonSerializableClinicAssistant.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"tohpinren"},"content":"        JsonSerializableClinicAssistant dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"tohpinren"},"content":"                JsonSerializableClinicAssistant.class).get();","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"tohpinren"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableClinicAssistant.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"simbayippy":4,"tohpinren":9,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TestUtil.getTypicalAddressBook;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ReadOnlyClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"        JsonClinicAssistantStorage addressBookStorage \u003d new JsonClinicAssistantStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"        ClinicAssistant original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        storageManager.saveClinicAssistant(original);","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"tohpinren"},"content":"        ReadOnlyClinicAssistant retrieved \u003d storageManager.readClinicAssistant().get();","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"        assertEquals(original, new ClinicAssistant(retrieved));","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"tohpinren"},"content":"        assertNotNull(storageManager.getClinicAssistantFilePath());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simbayippy":5,"tohpinren":4,"-":59}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"tohpinren"},"content":"    private ClinicAssistant clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    public AddressBookBuilder(ClinicAssistant clinicAssistant) {","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"tohpinren"},"content":"        this.clinicAssistant \u003d clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"tohpinren"},"content":"        clinicAssistant.addPerson(person);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"tohpinren"},"content":"    public ClinicAssistant build() {","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"tohpinren"},"content":"        return clinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tohpinren":8,"-":26}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalDoctors.BENSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-20"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-20"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-10-20"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Description of Appointment\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"    public static final String DEFAULT_DATE \u003d \"01-01-2024 00:00\";","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    public static final Person DEFAULT_PERSON \u003d ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor DEFAULT_DOCTOR \u003d BENSON;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    private String description;","lastModifiedDate":"2023-10-20"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    private Person person;","lastModifiedDate":"2023-10-20"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    private Doctor doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"     * Creates a {@code AppointmentBuilder} with the default details","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-10-22"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        dateTime \u003d LocalDateTime.parse(DEFAULT_DATE, formatter);","lastModifiedDate":"2023-10-22"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        person \u003d DEFAULT_PERSON;","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"        doctor \u003d DEFAULT_DOCTOR;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"     * Creates a {@code AppointmentBuilder} with the details of patient","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"    public AppointmentBuilder(Person person) {","lastModifiedDate":"2023-10-20"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2023-10-20"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"        dateTime \u003d LocalDateTime.parse(DEFAULT_DATE, formatter);","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        doctor \u003d DEFAULT_DOCTOR;","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    public AppointmentBuilder withDescription(String desc) {","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"        this.description \u003d desc;","lastModifiedDate":"2023-10-20"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-20"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-20"},{"lineNumber":59,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-20"},{"lineNumber":60,"author":{"gitId":"simbayippy"},"content":"    public AppointmentBuilder withDateTme(String dateTime) {","lastModifiedDate":"2023-10-20"},{"lineNumber":61,"author":{"gitId":"simbayippy"},"content":"        this.dateTime \u003d LocalDateTime.parse(dateTime, formatter);","lastModifiedDate":"2023-10-20"},{"lineNumber":62,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-20"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    public AppointmentBuilder withDoctor(Doctor doctor) {","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"simbayippy"},"content":"     * Returns person with Appointment added to him","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"simbayippy"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"simbayippy"},"content":"     * @return Person with Appointment","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"simbayippy"},"content":"    public Person build() {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"        Appointment appointment \u003d new Appointment(description, dateTime, person, doctor.getName().toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"        person.addAppointment(appointment);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"        return person;","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":84,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":85,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"simbayippy":69,"Bryan-Goh":16}},{"path":"src/test/java/seedu/address/testutil/DoctorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":" * A utility class to help with building Doctor objects.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"public class DoctorBuilder {","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String DEFAULT_NAME \u003d \"Kevin\";","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355256\";","lastModifiedDate":"2023-10-26"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String DEFAULT_EMAIL \u003d \"kevin@gmail.com\";","lastModifiedDate":"2023-10-26"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String DEFAULT_GENDER \u003d \"F\";","lastModifiedDate":"2023-10-26"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"    public static final int DEFAULT_AGE \u003d 21;","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong East Ave 6, #08-123\";","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"    private Name name;","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"    private Phone phone;","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"    private Email email;","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"    private Age age;","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"    private Address address;","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"    private ArrayList\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"     * Creates a {@code DoctorBuilder} with the default details.","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder() {","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"     * Initializes the DoctorBuilder with the data of {@code doctorToCopy}.","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder(Person personToCopy) {","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"        appointments \u003d new ArrayList\u003c\u003e(personToCopy.getAppointments());","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Name} of the {@code Doctor} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withName(String name) {","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withAddress(String address) {","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withPhone(String phone) {","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withEmail(String email) {","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-26"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"    public DoctorBuilder withAge(int age) {","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"        return this;","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"    public Doctor build() {","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"        return new Doctor(name, phone, email, gender, age, address);","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"Bryan-Goh":112}},{"path":"src/test/java/seedu/address/testutil/EditAppointmentDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import seedu.address.logic.commands.EditAppointmentCommand.EditAppointmentDescriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"public class EditAppointmentDescriptorBuilder {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"    private EditAppointmentDescriptor descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder() {","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"simbayippy"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code EditAppointmentDescriptor}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"     * @param descriptor","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder(EditAppointmentDescriptor descriptor) {","lastModifiedDate":"2023-10-18"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"        this.descriptor \u003d new EditAppointmentDescriptor(descriptor);","lastModifiedDate":"2023-10-18"},{"lineNumber":26,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-10-18"},{"lineNumber":30,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder(Appointment appointment) {","lastModifiedDate":"2023-10-18"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"        descriptor \u003d new EditAppointmentDescriptor();","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDescription(appointment.getDescription());","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDateTime(appointment.getDateTime());","lastModifiedDate":"2023-10-18"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"        descriptor.setPatient(appointment.getPatient());","lastModifiedDate":"2023-10-22"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder withDescription(String desc) {","lastModifiedDate":"2023-10-18"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDescription(desc);","lastModifiedDate":"2023-10-18"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"    /**","lastModifiedDate":"2023-10-18"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"     */","lastModifiedDate":"2023-10-18"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptorBuilder withDateTime(String dateTime) {","lastModifiedDate":"2023-10-18"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-10-18"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"        descriptor.setDateTime(LocalDateTime.parse(dateTime, formatter));","lastModifiedDate":"2023-10-18"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"        return this;","lastModifiedDate":"2023-10-18"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"    public EditAppointmentDescriptor build() {","lastModifiedDate":"2023-10-18"},{"lineNumber":55,"author":{"gitId":"simbayippy"},"content":"        return descriptor;","lastModifiedDate":"2023-10-18"},{"lineNumber":56,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":57,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"simbayippy":57}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"yezkez10"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"        descriptor.setAge(person.getAge());","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"        descriptor.setEthnic(person.getEthnic());","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"     * Sets the {@code Ethnicity} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"    public EditPersonDescriptorBuilder withEthnic(String ethnic) {","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"        descriptor.setEthnic(new Ethnicity(ethnic));","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":81,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"yezkez10"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":90,"author":{"gitId":"yezkez10"},"content":"     * Sets the {@code Age} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":91,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"yezkez10"},"content":"    public EditPersonDescriptorBuilder withAge(int age) {","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"yezkez10"},"content":"        descriptor.setAge(new Age(age));","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"yezkez10"},"content":"     * Sets the {@code Nric} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-19"},{"lineNumber":100,"author":{"gitId":"yezkez10"},"content":"    public EditPersonDescriptorBuilder withNric(String nric) {","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"yezkez10"},"content":"        descriptor.setNric(new Nric(nric));","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":104,"author":{"gitId":"yezkez10"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"yezkez10":39,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Ethnicity;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    public static final String DEFAULT_GENDER \u003d \"M\";","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public static final int DEFAULT_AGE \u003d 21;","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public static final String DEFAULT_ETHNIC \u003d \"Chinese\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"yezkez10"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456E\";","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    private Gender gender;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"    private Age age;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"    private Ethnicity ethnic;","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"    private Nric nric;","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    private ArrayList\u003cAppointment\u003e appointments;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"        ethnic \u003d new Ethnicity(DEFAULT_ETHNIC);","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"yezkez10"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"simbayippy"},"content":"        appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"wj331"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"        age \u003d personToCopy.getAge();","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"        ethnic \u003d personToCopy.getEthnic();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"yezkez10"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"simbayippy"},"content":"        appointments \u003d new ArrayList\u003c\u003e(personToCopy.getAppointments());","lastModifiedDate":"2023-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"wj331"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withAge(int age) {","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"wj331"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"wj331"},"content":"     * Sets the {@code Ethnic} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"wj331"},"content":"    public PersonBuilder withEthnic(String ethnic) {","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"        this.ethnic \u003d new Ethnicity(ethnic);","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":139,"author":{"gitId":"yezkez10"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"simbayippy"},"content":"     * Sets the {@code NRIC} of the {@code Person} that we are building.","lastModifiedDate":"2023-10-12"},{"lineNumber":141,"author":{"gitId":"yezkez10"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"yezkez10"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"yezkez10"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"yezkez10"},"content":"        return this;","lastModifiedDate":"2023-10-12"},{"lineNumber":145,"author":{"gitId":"yezkez10"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":148,"author":{"gitId":"wj331"},"content":"        return new Person(name, phone, email, gender, age, ethnic, nric, address, tags);","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"simbayippy":6,"wj331":39,"yezkez10":10,"-":96}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ETHNIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"yezkez10"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"yezkez10"},"content":"        sb.append(PREFIX_GENDER + person.getGender().gender + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"        sb.append(PREFIX_AGE + person.getAge().toString() + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"yezkez10"},"content":"        sb.append(PREFIX_ETHNIC + person.getEthnic().ethnic + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"        sb.append(PREFIX_NRIC + person.getNric().value + \" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"yezkez10"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"yezkez10"},"content":"        descriptor.getAge().ifPresent(age -\u003e sb.append(PREFIX_AGE).append(age).append(\" \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"yezkez10"},"content":"        descriptor.getEthnic().ifPresent(ethnicity -\u003e sb.append(PREFIX_ETHNIC).append(ethnicity.ethnic).append(\" \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"yezkez10"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.value).append(\" \"));","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"yezkez10":12,"-":58}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointments;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.testutil.TypicalDoctors.getTypicalDoctors;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":63,"author":{"gitId":"simbayippy"},"content":"    public static ClinicAssistant getTypicalAddressBook() {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"simbayippy"},"content":"        ClinicAssistant ab \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"simbayippy"},"content":"        List\u003cPerson\u003e appointmentList \u003d getTypicalAppointments();","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"        List\u003cDoctor\u003e doctorList \u003d getTypicalDoctors();","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"simbayippy"},"content":"        for (int i \u003d 0; i \u003c appointmentList.size(); i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"simbayippy"},"content":"            ab.addPerson(appointmentList.get(i));","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"simbayippy"},"content":"            for (Appointment appt : appointmentList.get(i).getAppointments()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"simbayippy"},"content":"                ab.addAppointment(appt);","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"                for (Doctor doctor: doctorList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"                    if (doctor.getName().equals(new Name(appt.getName()))) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"                        doctor.addAppointment(appt);","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"                    }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : doctorList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"simbayippy"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"simbayippy"},"content":"        return ab;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"simbayippy":15,"-":55,"Bryan-Goh":13}},{"path":"src/test/java/seedu/address/testutil/TimeslotBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" * A utility class to help with building Timeslot objects.","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"public class TimeslotBuilder {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public static final String DEFAULT_DATE \u003d \"02-01-2024\";","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"    public static final int DEFAULT_HOUR \u003d 15;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    private LocalDate date;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"    private int hour;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"     * Creates a {@code TimeslotBuilder} with the default details","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public TimeslotBuilder() {","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"        date \u003d LocalDate.parse(DEFAULT_DATE, formatter);","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"        this.hour \u003d DEFAULT_HOUR;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"     * Creates a {@code TimeslotBuilder} with the date and hour of the other timeslot","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"    public TimeslotBuilder(Timeslot other) {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"        date \u003d other.getDate();","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        hour \u003d other.getHour();","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"wj331"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Timeslot} that we are building.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"    public TimeslotBuilder withDate(String date) {","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"        this.date \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"wj331"},"content":"     * Sets the date of this instance","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"wj331"},"content":"     * @param date of this instance we want to set to","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"     * @return this TimeslotBuilder instance","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"wj331"},"content":"    public TimeslotBuilder withDate(LocalDate date) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"wj331"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"wj331"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Timeslot} that we are building.","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"wj331"},"content":"    public TimeslotBuilder withHour(int hour) {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"wj331"},"content":"        this.hour \u003d hour;","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"wj331"},"content":"        return this;","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"     * Returns a Timeslot instance with the values set in TimeslotBuilder","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"     * @return Timeslot with the correct date and hour","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"wj331"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"wj331"},"content":"    public Timeslot build() {","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"wj331"},"content":"        return new Timeslot(this.date, this.hour);","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"wj331":67}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"simbayippy"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-20"},{"lineNumber":2,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":3,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-10-20"},{"lineNumber":4,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-10-20"},{"lineNumber":5,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-10-20"},{"lineNumber":6,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"simbayippy"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":11,"author":{"gitId":"simbayippy"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-20"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-20"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":16,"author":{"gitId":"simbayippy"},"content":"/**","lastModifiedDate":"2023-10-20"},{"lineNumber":17,"author":{"gitId":"yezkez10"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"simbayippy"},"content":" */","lastModifiedDate":"2023-10-20"},{"lineNumber":19,"author":{"gitId":"simbayippy"},"content":"public class TypicalAppointments {","lastModifiedDate":"2023-10-20"},{"lineNumber":20,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":21,"author":{"gitId":"simbayippy"},"content":"    public static final Person ALICE_WITH_APPOINTMENT \u003d new AppointmentBuilder(ALICE)","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"See the doctor\")","lastModifiedDate":"2023-10-20"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"01-01-2024 09:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"simbayippy"},"content":"    public static final Person BENSON_WITH_APPOINTMENT \u003d new AppointmentBuilder(BENSON)","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"Urine Exam\")","lastModifiedDate":"2023-10-20"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"01-11-2023 11:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":28,"author":{"gitId":"simbayippy"},"content":"    public static final Person CARL_WITH_APPOINTMENT \u003d new AppointmentBuilder(CARL)","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"x-ray appointment\")","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"05-02-2024 13:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"simbayippy"},"content":"    public static final Person DANIEL_WITH_APPOINTMENT \u003d new AppointmentBuilder(DANIEL)","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"z-ray appointment\")","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"05-02-2024 15:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"simbayippy"},"content":"    public static final Person ELLE_WITH_APPOINTMENT \u003d new AppointmentBuilder(ELLE)","lastModifiedDate":"2023-10-25"},{"lineNumber":36,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"y-ray appointment\")","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"05-02-2024 12:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"simbayippy"},"content":"    public static final Person FIONA_WITH_APPOINTMENT \u003d new AppointmentBuilder(FIONA)","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"a-ray appointment\")","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"05-02-2024 11:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"simbayippy"},"content":"    public static final Person GEORGE_WITH_APPOINTMENT \u003d new AppointmentBuilder(GEORGE)","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"simbayippy"},"content":"            .withDescription(\"x-ray appointment\")","lastModifiedDate":"2023-10-20"},{"lineNumber":45,"author":{"gitId":"wj331"},"content":"            .withDateTme(\"05-02-2024 17:00\").build();","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"    private TypicalAppointments() {} // prevents instantiation","lastModifiedDate":"2023-10-20"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-20"},{"lineNumber":49,"author":{"gitId":"simbayippy"},"content":"    public static ArrayList\u003cPerson\u003e getTypicalAppointments() {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"simbayippy"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITH_APPOINTMENT, BENSON_WITH_APPOINTMENT, CARL_WITH_APPOINTMENT,","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"simbayippy"},"content":"                DANIEL_WITH_APPOINTMENT, ELLE_WITH_APPOINTMENT, FIONA_WITH_APPOINTMENT, GEORGE_WITH_APPOINTMENT));","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"simbayippy"},"content":"    }","lastModifiedDate":"2023-10-20"},{"lineNumber":53,"author":{"gitId":"simbayippy"},"content":"}","lastModifiedDate":"2023-10-20"}],"authorContributionMap":{"simbayippy":45,"wj331":7,"yezkez10":1}},{"path":"src/test/java/seedu/address/testutil/TypicalDoctors.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Bryan-Goh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-10-26"},{"lineNumber":2,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":3,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":4,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":5,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":6,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":7,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":8,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":9,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":10,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":11,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":12,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":13,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-26"},{"lineNumber":14,"author":{"gitId":"Bryan-Goh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-26"},{"lineNumber":15,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":16,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-26"},{"lineNumber":17,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-26"},{"lineNumber":18,"author":{"gitId":"Bryan-Goh"},"content":"import java.util.List;","lastModifiedDate":"2023-10-26"},{"lineNumber":19,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":20,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-26"},{"lineNumber":21,"author":{"gitId":"Bryan-Goh"},"content":"import seedu.address.model.doctor.Doctor;","lastModifiedDate":"2023-10-26"},{"lineNumber":22,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":23,"author":{"gitId":"Bryan-Goh"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"Bryan-Goh"},"content":" * A utility class containing a list of {@code Doctor} objects to be used in tests.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"Bryan-Goh"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"Bryan-Goh"},"content":"public class TypicalDoctors {","lastModifiedDate":"2023-10-26"},{"lineNumber":27,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":28,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor ALICE \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":29,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-26"},{"lineNumber":30,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-10-26"},{"lineNumber":31,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":32,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-26"},{"lineNumber":33,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(21)","lastModifiedDate":"2023-10-26"},{"lineNumber":34,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-10-26"},{"lineNumber":35,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":36,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor BENSON \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":37,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-10-26"},{"lineNumber":38,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-26"},{"lineNumber":39,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":40,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-26"},{"lineNumber":41,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(42)","lastModifiedDate":"2023-10-26"},{"lineNumber":42,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-26"},{"lineNumber":43,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":44,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor CARL \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":45,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-10-26"},{"lineNumber":46,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-10-26"},{"lineNumber":47,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":48,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-26"},{"lineNumber":49,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(22)","lastModifiedDate":"2023-10-26"},{"lineNumber":50,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":51,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":52,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor DANIEL \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":53,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-10-26"},{"lineNumber":54,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-10-26"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":56,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-26"},{"lineNumber":57,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(25)","lastModifiedDate":"2023-10-26"},{"lineNumber":58,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":59,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":60,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor ELLE \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":61,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-10-26"},{"lineNumber":62,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94822244\")","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":64,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-26"},{"lineNumber":65,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(32)","lastModifiedDate":"2023-10-26"},{"lineNumber":66,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-26"},{"lineNumber":67,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":68,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor FIONA \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":69,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-10-26"},{"lineNumber":70,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94824277\")","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":72,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-26"},{"lineNumber":73,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(20)","lastModifiedDate":"2023-10-26"},{"lineNumber":74,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-26"},{"lineNumber":75,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":76,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor GEORGE \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":77,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-10-26"},{"lineNumber":78,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94824422\")","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":80,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-26"},{"lineNumber":81,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(100)","lastModifiedDate":"2023-10-26"},{"lineNumber":82,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2023-10-26"},{"lineNumber":83,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":84,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":85,"author":{"gitId":"Bryan-Goh"},"content":"    // Manually added","lastModifiedDate":"2023-10-26"},{"lineNumber":86,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor HOON \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":87,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-10-26"},{"lineNumber":88,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"84824244\")","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":90,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-26"},{"lineNumber":91,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(0)","lastModifiedDate":"2023-10-26"},{"lineNumber":92,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2023-10-26"},{"lineNumber":93,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":94,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor IDA \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":95,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-10-26"},{"lineNumber":96,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"84821311\")","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-10-26"},{"lineNumber":98,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-26"},{"lineNumber":99,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(12)","lastModifiedDate":"2023-10-26"},{"lineNumber":100,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-26"},{"lineNumber":101,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":102,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":103,"author":{"gitId":"Bryan-Goh"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-10-26"},{"lineNumber":104,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor AMY \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":105,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":106,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":107,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":108,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":109,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(VALID_AGE_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":110,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-26"},{"lineNumber":111,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":112,"author":{"gitId":"Bryan-Goh"},"content":"    public static final Doctor BOB \u003d new DoctorBuilder()","lastModifiedDate":"2023-10-26"},{"lineNumber":113,"author":{"gitId":"Bryan-Goh"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":114,"author":{"gitId":"Bryan-Goh"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":115,"author":{"gitId":"Bryan-Goh"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":116,"author":{"gitId":"Bryan-Goh"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":117,"author":{"gitId":"Bryan-Goh"},"content":"            .withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":118,"author":{"gitId":"Bryan-Goh"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-26"},{"lineNumber":119,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-26"},{"lineNumber":120,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":121,"author":{"gitId":"Bryan-Goh"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-10-26"},{"lineNumber":122,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":123,"author":{"gitId":"Bryan-Goh"},"content":"    private TypicalDoctors() {} // prevents instantiation","lastModifiedDate":"2023-10-26"},{"lineNumber":124,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":125,"author":{"gitId":"Bryan-Goh"},"content":"    /**","lastModifiedDate":"2023-10-26"},{"lineNumber":126,"author":{"gitId":"Bryan-Goh"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-10-26"},{"lineNumber":127,"author":{"gitId":"Bryan-Goh"},"content":"     */","lastModifiedDate":"2023-10-26"},{"lineNumber":128,"author":{"gitId":"Bryan-Goh"},"content":"    public static ClinicAssistant getTypicalAddressBook() {","lastModifiedDate":"2023-10-26"},{"lineNumber":129,"author":{"gitId":"Bryan-Goh"},"content":"        ClinicAssistant ab \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-26"},{"lineNumber":130,"author":{"gitId":"Bryan-Goh"},"content":"        for (Doctor doctor : getTypicalDoctors()) {","lastModifiedDate":"2023-10-26"},{"lineNumber":131,"author":{"gitId":"Bryan-Goh"},"content":"            ab.addDoctor(doctor);","lastModifiedDate":"2023-10-26"},{"lineNumber":132,"author":{"gitId":"Bryan-Goh"},"content":"        }","lastModifiedDate":"2023-10-26"},{"lineNumber":133,"author":{"gitId":"Bryan-Goh"},"content":"        return ab;","lastModifiedDate":"2023-10-26"},{"lineNumber":134,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":135,"author":{"gitId":"Bryan-Goh"},"content":"","lastModifiedDate":"2023-10-26"},{"lineNumber":136,"author":{"gitId":"Bryan-Goh"},"content":"    public static List\u003cDoctor\u003e getTypicalDoctors() {","lastModifiedDate":"2023-10-26"},{"lineNumber":137,"author":{"gitId":"Bryan-Goh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-10-26"},{"lineNumber":138,"author":{"gitId":"Bryan-Goh"},"content":"    }","lastModifiedDate":"2023-10-26"},{"lineNumber":139,"author":{"gitId":"Bryan-Goh"},"content":"}","lastModifiedDate":"2023-10-26"}],"authorContributionMap":{"tohpinren":5,"Bryan-Goh":134}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"simbayippy"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_FIRST_APPOINTMENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_SECOND_APPOINTMENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"simbayippy"},"content":"    public static final Index INDEX_THIRD_APPOINTMENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-10-18"},{"lineNumber":16,"author":{"gitId":"tohpinren"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"tohpinren"},"content":"    public static final Index INDEX_FIRST_DOCTOR \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"tohpinren"},"content":"    public static final Index INDEX_SECOND_DOCTOR \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"tohpinren"},"content":"    public static final Index INDEX_THIRD_DOCTOR \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"simbayippy":4,"tohpinren":4,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ETHNIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"tohpinren"},"content":"import seedu.address.model.ClinicAssistant;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"yezkez10"},"content":"    public static final Person ALICE \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"yezkez10"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"wj331"},"content":"            .withAge(12)","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"T1234567A\")","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"yezkez10"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"yezkez10"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"simbayippy"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"simbayippy"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"wj331"},"content":"            .withAge(42)","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"T9876543B\")","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"simbayippy"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"Bryan-Goh"},"content":"            .build();","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"yezkez10"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"yezkez10"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"wj331"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"wj331"},"content":"            .withAge(22)","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Others\")","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"S4567890C\")","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"yezkez10"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"yezkez10"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"wj331"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"wj331"},"content":"            .withAge(25)","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Chinese\")","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"S2345678D\")","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"yezkez10"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"yezkez10"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94822244\")","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"wj331"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"wj331"},"content":"            .withAge(32)","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"T7890123E\")","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"michegan ave\")","lastModifiedDate":"2023-10-19"},{"lineNumber":86,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"yezkez10"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94824277\")","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"wj331"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"wj331"},"content":"            .withAge(120)","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Malay\")","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"T3456789F\")","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"little tokyo\")","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"yezkez10"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":98,"author":{"gitId":"yezkez10"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-10-19"},{"lineNumber":99,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"94824422\")","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"wj331"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"wj331"},"content":"            .withGender(\"M\")","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"wj331"},"content":"            .withAge(100)","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Indian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"S5678901G\")","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"4th street\")","lastModifiedDate":"2023-10-19"},{"lineNumber":106,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":109,"author":{"gitId":"yezkez10"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"84824244\")","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"wj331"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"wj331"},"content":"            .withAge(0)","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Chinese\")","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"S6543210H\")","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"yezkez10"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":120,"author":{"gitId":"yezkez10"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"tohpinren"},"content":"            .withPhone(\"84821311\")","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"wj331"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"wj331"},"content":"            .withGender(\"F\")","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"wj331"},"content":"            .withAge(12)","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"wj331"},"content":"            .withEthnic(\"Eurasian\")","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"yezkez10"},"content":"            .withNric(\"S4321098I\")","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"yezkez10"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"yezkez10"},"content":"            .build();","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":131,"author":{"gitId":"yezkez10"},"content":"    public static final Person AMY \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"yezkez10"},"content":"            .withName(VALID_NAME_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":133,"author":{"gitId":"yezkez10"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":134,"author":{"gitId":"wj331"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"wj331"},"content":"            .withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"wj331"},"content":"            .withAge(VALID_AGE_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"wj331"},"content":"            .withEthnic(VALID_ETHNIC_AMY)","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"yezkez10"},"content":"            .withNric(VALID_NRIC_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"yezkez10"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"yezkez10"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-10-19"},{"lineNumber":141,"author":{"gitId":"yezkez10"},"content":"    public static final Person BOB \u003d new PersonBuilder()","lastModifiedDate":"2023-10-19"},{"lineNumber":142,"author":{"gitId":"yezkez10"},"content":"            .withName(VALID_NAME_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"yezkez10"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"wj331"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"wj331"},"content":"            .withGender(VALID_GENDER_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"wj331"},"content":"            .withAge(VALID_AGE_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"wj331"},"content":"            .withEthnic(VALID_ETHNIC_BOB)","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"yezkez10"},"content":"            .withNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"yezkez10"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"yezkez10"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":160,"author":{"gitId":"tohpinren"},"content":"    public static ClinicAssistant getTypicalAddressBook() {","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"tohpinren"},"content":"        ClinicAssistant ab \u003d new ClinicAssistant();","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"simbayippy":3,"wj331":50,"tohpinren":8,"yezkez10":60,"-":49,"Bryan-Goh":1}},{"path":"src/test/java/seedu/address/testutil/TypicalTimeslots.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"wj331"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"wj331"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"wj331"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"wj331"},"content":"import seedu.address.model.timeslots.Timeslot;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"wj331"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"wj331"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"wj331"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"wj331"},"content":"public class TypicalTimeslots {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"wj331"},"content":"    public static final Timeslot DEFAULT_TIMESLOT \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"wj331"},"content":"            .withDate(TimeslotBuilder.DEFAULT_DATE)","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"wj331"},"content":"            .withHour(TimeslotBuilder.DEFAULT_HOUR).build();","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"wj331"},"content":"    public static final Timeslot TIMESLOT_ONE \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"wj331"},"content":"            .withDate(\"02-01-2024\")","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"wj331"},"content":"            .withHour(14).build();","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"wj331"},"content":"    public static final Timeslot TIMESLOT_TWO \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"wj331"},"content":"            .withDate(\"31-01-2024\")","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"wj331"},"content":"            .withHour(1).build();","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"wj331"},"content":"    public static final Timeslot TIMESLOT_THREE \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"wj331"},"content":"            .withDate(\"05-02-2024\")","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"wj331"},"content":"            .withHour(17).build();","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"wj331"},"content":"    public static final Timeslot TIMESLOT_FOUR \u003d new TimeslotBuilder()","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"wj331"},"content":"            .withDate(\"17-10-2024\")","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"wj331"},"content":"            .withHour(12).build();","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"wj331"},"content":"    private TypicalTimeslots() {} // prevents instantiation","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"wj331"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"wj331"},"content":"    public static ArrayList\u003cTimeslot\u003e getTypicalTimeslots() {","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"wj331"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(DEFAULT_TIMESLOT, TIMESLOT_ONE, TIMESLOT_TWO,","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"wj331"},"content":"                TIMESLOT_THREE, TIMESLOT_FOUR));","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"wj331"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"wj331"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"wj331":34}}]
